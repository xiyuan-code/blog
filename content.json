[{"title":"实时Web的发展与实践","date":"2018-05-04T03:58:12.000Z","path":"2018/05/04/web前端技巧/web性能资源/实时Web的发展与实践/","text":"为什么实时Web这么重要？我们生活在一个实时（real-time）的世界中，因此Web的最终最自然的状态也应当是实时的。用户需要实时的沟通、数据和搜索。我们对互联网信息实时性的要求也越来越高，如果信息或消息延时几分钟后才更新，简直让人无法忍受。现在很多大公司（如Google、Facebook和Twitter）已经开始关注实时Web，并提供了实时性服务。实时Web将是未来最热门的话题之一。 实时Web的发展历史传统的Web是基于HTTP的请求/响应模型的：客户端请求一个新页面，服务器将内容发送到客户端，客户端再请求另外一个页面时又要重新发送请求。后来有人提出了AJAX，AJAX使得页面的体验更加“动态”，可以在后台发起到服务器的请求。但是，如果服务器有更多数据需要推送到客户端，在页面加载完成后是无法实现直接将数据从服务器发送给客户端的。实时数据无法被“推送”给客户端。 为了解决这个问题，有人提出了很多解决方案。最简单(暴力)的方案是用轮询：每隔一段时间都会向服务器请求新数据。这让用户感觉应用是实时的。实际上这会造成延时和性能问题，因为服务器每秒都要处理大量的连接请求，每次请求都会有TCP三次握手并附带HTTP的头信息。尽管现在很多应用仍在使用轮询，但这并不是最理想的解决方案。 后来随着Comet技术的提出，又出现了很多更高级的解决方案。这些技术方案包括永久帧(forever frame)、XHR流(xhr-multipart)、htmlfile，以及长轮询。长轮询是指，客户端发起一个到服务器的XHR连接，这个连接永不关闭，对客户端来说连接始终是挂起状态。当服务器有新数据时，就会及时地将响应发送给客户端，接着再将连接关闭。然后重复整个过程，通过这种方式就实现了“服务器推”(server push)。 Comet技术是非标准的hack技术，正因为此，浏览器端的兼容性就成了问题。首先，性98 能问题无法解决，向服务器发起的每个连接都带有完整的HTTP头信息，如果你的应用需要很低的延时，这将是一个棘手的问题。当然不是说Comet本身有问题，因为还没有其他替代方案前Comet是我们的唯一选择。 浏览器插件(如Flash)和Java同样被用于实现服务器推。它们可以基于TCP直接和服务器建立socket连接，这种连接非常适合将实时数据推给客户端。问题是并不是所有的浏览器都安装了这些插件，而且它们常常被防火墙拦截，特别是在公司网络中。 现在HTML5规范为我们准备了一个替代方案。但这个规范稍微有些超前，很多浏览器都还不支持，特别是IE，对于现在很多开发者来说帮助不大，鉴于大部分浏览器还未实现HTML5的WebSocket，现行最好的办法仍然是使用Comet。 WebSocketWebSocket是HTML5规范的一部分，提供了基于TCP的双向的、全双工的socket连接。这意味着服务器可以直接将数据推送给客户端，而不需要开发者求助于长轮询或插件来实现，这是一个很大的进步。尽管有一些浏览器实现了WebSocket，但由于一些安全问题没有解决，因此协议仍然在修订之中。然而这不会阻碍我们的脚步，这些安全问题属于技术性问题，会很快被修复，WebSocket很快就会成为最终规范。与此同时，对于那些不支持WebSocket的浏览器，可以降级使用笨方法来实现，比如Comet或轮询。 和之前的服务器推的技术相比，WebSocket有着巨大的优势，因为WebSocket是全双工的，而不是基于HTTP的，一旦建立连接就不会断掉。Comet所面对的现实问题就是HTTP的体积太大，每个请求都带有完整的HTTP头信息。而且包含很多没有用的TCP握手，因为HTTP是比TCP更高层次的网络协议。 使用WebSocket时，一旦服务器和客户端之间完成握手，信息就可以畅通无阻地随意往来于两端，而不用附加那些无用的HTTP头信息。这极大地降低了带宽的占用，提高了性能。因为连接一直处于活动状态，服务器一旦有新数据要更新时就可以立即发送给客户端(不需要客户端先请求，服务器再响应了)。另外，连接是双工的，因此客户端同样可以发送数据给服务器，当然也不需要附带多余的HTTP头。 下面这段话出自Google的Ian Hickson，HTML5规范小组负责人，它是这样描述WebSocket的： 将千字节的数据降为2字节……并将延时从150毫秒降为50毫秒，这种优化跨越了不止一个量级，实际上仅这两点优化就足以让Google确信WebSocket会给产品带来非一般的用户体验。 现在我们来看一下都有哪些浏览器支持WebSocket： Chrome &gt;= 4 Safari &gt;= 5 iOS &gt;= 4.2 Firefox &gt;= 4* Opera &gt;= 11* 尽管Firefox和Opera也都实现了WebSocket，但考虑到WebSocket仍然存在安全隐患，默认并没有启用它。但这不是什么大问题，或许本书出版时WebSocket的安全问题就已经解决了。同时你也可以在那些对WebSocket支持不好的浏览器中进行降级处理，使用诸如Comet和Flash的笨方法。 检测浏览器是否支持WebSocket也非常简单、直接：12var supported = (\"WebSocket\" in window);if (supported) alert(\"WebSockets are supported\"); 长远来看，浏览器的WebSocket API非常清晰且合乎逻辑。可以使用WebSocket类来实例化一个新的套接字(socket)，这需要传入服务器的端地址，在这个例子中是ws://example.com：1var socket = new WebSocket(\"ws://example.com\"); 然后我们需要给这个套接字添加事件监听 ：12345678// 建立连接socket.onopen = function()&#123; /* ... */ &#125;// 通过连接发送了一些新数据socket.onmessage = function(data)&#123; /* ... */ &#125;// 关闭连接socket.onclose = function()&#123; /* ... */ &#125; 当服务器发送一些数据时，就会触发onmessage事件，同样，客户端也可以调用send()函数将数据传回服务器。很明显，我们应当在连接建立且触发了onopen事件之后调用它：1234567socket.onmessage = function(msg)&#123; console.log(\"New data - \", msg);&#125;;socket.onopen = function()&#123; socket.send(\"Why, hello there\").&#125;; 发送和接收的消息只支持字符串格式。但在字符串和JSON数据之间可以很轻松地相互转换，这样就可以创建你自己的协议：1234567891011var rpc = &#123; test: function(arg1, arg2) &#123; /* ... */ &#125;&#125;;socket.onmessage = function(data)&#123; // 解析 JSON var msg = JSON.parse(data); // 调用 RPC 函数 rpc[msg.method].apply(rpc, msg.args);&#125;; 这段代码中，我们创建了一个远程过程调用(remote procedure call，RPC)脚本，服务器可以发送一些简单的JSON来调用客户端的函数，就像下面这行代码：1&#123;\"method\": \"test\", \"args\": [1, 2]&#125; 注意，这里的调用是限制在rpc对象里的。这样做的原因主要是出于安全考虑，如果允许在客户端执行任意JavaScript代码，黑客就会利用这个漏洞。可以调用close()函数来关闭这个连接:1var socket = new WebSocket(\"ws://localhost:8000/server\"); 你肯定注意到了我们在实例化一个WebSocket的时候使用了WebSocket特有的协议前缀 ws:// ，而不是 http:// 。WebSocket同样支持加密的连接，这需要使用以 wss:// 为协议前缀的TLS。默认情况下WebSocket使用80端口建立非加密的连接，使用443端口建立加密的连接。你可以通过给URL带上自定义端口来覆盖默认配置。要记住，并不是所有的端口都可以被客户端使用，一些非常规的端口很容易被防火墙拦截。 说到现在，你或许会想，“我还不能在项目中使用WebSocket，因为标准还未成型，而且IE不支持WebSocket”。这样的想法并没有错，幸运的是，我们有解决方案。Web-socket-js (https://github.com/gimite/web-socket-js) 是一个基于AdobeFlash实现的WebSocket。用这个库就可以在不支持WebSocket的浏览器中做优雅降级。毕竟几乎所有的浏览器都安装了Flash插件。基于Flash实现的SocketAPI和HTML5标准规范完全一样，因此当WebSocket的浏览器兼容性更好的时候，只需简单地将库移除即可，而不必对代码做任何修改。 尽管客户端的API非常简洁、直接，但在服务器端情况就不同了。WebSocket协议包含两个互不兼容的草案协议：草案75 (http://goo.gl/cgSjp) 和草案76 (http://goo.gl/2u78y) 。服务器需要通过检测客户端使用的连接握手类型来判断使用哪个草案协议。 WebSocket首先向服务器发起一个HTTP“升级”(upgrade)请求。如果你的服务器支持WebSocket，则会执行WebSocket握手并初始化一个连接。“升级”请求中包含了原始域(请求所发出的域名)的信息。客户端可以和任意域名建立WebSocket连接，只有服务器才会决定哪些客户端可以和它建立连接，常用做法是将允许连接的域名做成白名单。 在WebSocket的设计之初，设计者们希望只要初始连接使用了常用的端口和HTTP头字段，就可以和防火墙和代理软件和谐相处。然而理想是丰满的，现实是骨感的。有些代理软件对WebSocket的“升级”请求的头信息做了修改，打破了协议规则。事实上，协议草案的最近一次更新（版本76）也无意中打破了对反向代理和网关的兼容性。为了更好更成功地使用WebSocket，这里给出一些步骤： 使用安全的WebSocket连接（wss）。代理软件不会对加密的连接胡乱篡改，此外你所发送的数据都是加密后的，不容易被他人窃取。 在WebSocket服务器前面使用TCP负载均衡器，而不要使用HTTP负载均衡器，除非某个HTTP负载均衡器大肆宣扬自己支持WebSocket。 不要假设浏览器支持WebSocket，虽然浏览器支持WebSocket只是时间问题。诚然，如果连接无法快速建立，则迅速优雅降级使用Comet和轮询的方式来处理。 那么，如何选择服务器端的解决方案呢？幸运的是，在很多语言中都实现了对WebSocket的支持，比如Ruby、Python和Java。要再次确认每个实现是否支持最新的76版协议草案，因为这个协议是被大多数客户端所支持的。 Node.js node-Websocket-server （http://github.com/miksago/node-websocket-server） Socket.IO （http://socket.io） Ruby EventMachine（http://github.com/igrigorik/em-websocket） Cramp（https://github.com/lifo/cramp） Sunshowers（http://rainbows.rubyforge.org/sunshowers/） Python Twisted（http://github.com/rlotun/txWebSocket） Apache module（http://code.google.com/p/pywebsocket） PHP php-Websocket（http://github.com/nicokaiser/php-websocket） Java Jetty（http://www.eclipse.org/jetty） Google Go native（http://code.google.com/p/go） Node.js和Socket.IO在上面的名单中，Node.js （http://nodejs.org） 是一名新成员，也是当下最受关注的新技术。Node.js是基于事件驱动的JavaScript服务器，采用了Google的V8引擎 （http://code.google.com/p/v8） 。正因为此，Node.js速度非常快，也可以解决服务器高并发连接数的资源消耗问题，和WebSocket服务器一样。 Socket.IO （http://socket.io/） 是一个Node.js库，实现了WebSocket。最让人感兴趣的不止于此，来看一段官网上的宣传文字： Socket.IO的目标是在每个浏览器和移动设备中构建实时APP，这缩小了多种传输机制之间的差异。 如果环境支持WebSocket，那么Socket.IO就会尝试使用WebSocket，若有必要也会降级使用其他的传输方式。这里列出了所支持的传输方式，非常全面，因此WebSocket.IO可以做到更好的浏览器兼容： WebSocket Adobe Flash Socket ActiveX HTMLFile (IE) 基于 multipart 编码发送 XHR（XHR with multipart encoding） 基于长轮询的XHR JSONP 轮询（用于跨域的场景） Socket.IO 的浏览器支持非常全面。“服务器推”的实现是众所周知的难题，但Socket.IO团队为你解决了这些烦恼，Socket.IO保证了它能兼容大多数浏览器，浏览器支持情况如下： Safari &gt;= 4 Chrome &gt;= 5 IE &gt;= 6 iOS Firefox &gt;= 3 Opera &gt;= 10.61 尽管在服务器端实现的Socket.IO最初是基于Node.js的，现在也有用其他语言实现的版本了，比如Ruby（Rack） （http://github.com/markjeee/Socket.IQ-rack） ，Python（Tornado） （https://github.com/MrJoes/tornadio） ，Java （http://code.google.com/p/socketio-java） 和GoogleGo （http://github.com/madari/go-socket.io） 。 来看一下它的API，写法非常简单、直接，客户端的API和WebSocket的API看起来很像1234567891011var socket = new io.Socket();socket.on(\"connect\", function()&#123;socket.send('hi!');&#125;);socket.on(\"message\", function(data)&#123;alert(data);&#125;);socket.on(\"disconnect\", function()&#123;&#125;); 在后台Socket.IO会选择使用最佳的传输方式。正如在readme文件中所描述的，“你可以使用Socket.IO在任何地方构建实时APP”。 如果你想寻求比Socket.IO更高级的解决方案，可以关注一下Juggernaut （http://github.com/maccman/juggernaut） ，它就是基于Socket.IO实现的。Juggernaut包含一个信道接口（channelinterface）：客户端可以订阅信道监听，服务器端可以向信道发布消息，即所谓的订阅/发布 （http://en.wikipedia.org/wiki/PubSub） 模式。这个库可以针对不同的客户端和实现环境作灵活扩展，比如基于TLS等。 如果你需要虚拟主机中的解决方案，可以参考Pusher （http://pusherapp.com/） 。Pusher可以让你从繁杂的服务器管理事务中抽身出来，使你能将注意力集中在有意义的部分：Web应用的开发。客户端的实现非常简单，只需将JavaScript文件引入页面中并订阅信道监听即可。当有消息发布的时候，仅仅是发送一个HTTP请求到RESTAPI （http://pusherapp.com/docs） 。 实时架构将数据从服务器推送给客户端的理论看起来有点纸上谈兵，如何将理论和JavaScript应用的开发实践相结合呢？如果你的应用正确地划分出了模型，那么应用实时架构将会非常简单。接下来我们给出在应用中构建实时架构的每个步骤，这里大量用到了订阅/发布模式。首先需要了解的是将更新通知到客户端的整个过程。 实时架构是基于事件驱动的（event-driven）。事件往往是由用户交互触发的：用户修改了数据记录，事件就会传播给系统，直到数据推送给已经建立连接的客户端并更新数据。要想为你的应用构建实时架构，则需要考虑两件事： 哪个模型需要是实时的？当模型实例发生改变时，需要通知哪些用户？实际情况往往是当模型发生改变时，你希望给所有建立连接的客户端发送通知。这种情况更多发生在网站首页需要实时提供活动的数据源的场景中，比如，每个客户端都能看到相同的信息。然而更多的应用场景是，要想针对不同的用户群发送不同的数据源，你需要根据不同类型的数据源有针对性地给用户推送更新。 我们来看一个聊天室的场景： 1．用户在聊天室中发送了一个新消息。2．客户端向服务器发送一条AJAX请求，并创建一条Chat记录。3．在Chat模型上触发了“保存”的回调，调用我们的方法来更新客户端数据。4．查找聊天室中所有和这个Chat记录有关的用户，我们需要给这些用户发送更新通知。5．用一条更新来描述发生了什么事情（创建Chat记录），将这个更新推送给相关的用户。 这个过程的细节和你选用的服务器环境有关，然而，如果你使用Rails，Holla （http://github.com/maccman/holla） 是一个非常不错的例子。当创建了Message记录时，JuggernautObserver会更新相关的客户端。 现在就引入了另外一个问题：如何向特定用户发送通知？最佳方法是使用发布/订阅模式：客户端订阅某个特定的信道，服务器向这个信道发布消息。每个用户订阅唯一的信道，信道包含一个ID，可能是用户在数据库中存放的ID。然后，服务器只需向这个唯一的信道发布消息即可，这样就可以做到将通知发送给特定的用户。 例如，某个用户可以订阅下面这个信道： /observer/0765F0ED-96E6-476D-B82D-8EBDA33F4EC4这里的随机字符串是当前登录用户唯一的标识。要想将通知发送给这个特定用户，服务器只需向同一个信道发布消息即可。 你可能很想知道发布/订阅模式在信息传输过程（WebSocket或Comet）中是怎样工作的。幸运的是，已经有很多可用的解决方案，比如Juggernaut和Pusher，之前都有提到过。发布/订阅是最常见的抽象，处于WebSocket的最高层，不管你选用什么服务或库，它们的API都非常相似。 一旦服务器将通知推送给客户端，你将体会到MVC架构带来的美感。让我们回过头来看刚才的聊天室的例子。发送给客户端的通知格式看起来像这样：1234&#123;\"klass\":\"Chat\", \"type\": \"create\", \"id\": \"3\",\"record\": &#123;\"body\": \"New chat\"&#125;&#125; 它包含一个被更改的模型、更新类型和其他相关属性。使用它可以让客户端在本地创建新的Chat记录。由于客户端的模型已经绑定了UI，因此用户界面会根据新的聊天记录自动更新。 最让人吃惊之处在于这个过程并不和特定的Chat模型相关，如果我们想创建另一个实时模型，只需添加另外一个服务器观察者，确保服务器更新时客户端会随之更新即可。现在我们的后台和客户端模型绑定在一起。任何后台模型的更改都会自动传播给相关的客户端，并更新UI。使用这种架构搭建的应用就是真正的实时应用。一个用户和应用产生的任何交互即刻被广播给其他的用户。 感知速度速度是UI设计最重要也是最易忽略的问题，速度对用户体验（UX）的影响非常大，并直接影响网站的收益。很多大公司一直都在研究、调查速度和网站收益之间的关系： Amazon页面加载时间每增加100毫秒，就会造成1%的销售损失（来源：GregLinden,Amazon）。 Google页面加载时间每增加500毫秒，就会造成20%的流量损失（来源：Marrissa Mayer，Google）。 Yahoo!页面加载时间每增加400毫秒，在页面加载完成之前就单击“后退”按钮的人会增加5%～9%（来源：Nicole Sullivan, Yahoo!）。 “感知速度”（perceived speed）和真实的速度同等重要，因为感知速度关系到用户的感官体验。因此，关键是要让用户“感觉”到你的应用很快，尽管实际的速度可能并不快，而这正是JavaScript应用带给我们的最大好处：尽管某一时刻在后台会有很多请求不会及时响应，但UI不会被阻塞。 让我们再次回过头来讨论刚才聊天室的场景。用户发送了新的消息，触发了一个AJAX请求。我们可以等待这个请求在网络中走一个来回之后，将响应结果更新到聊天记录中。然而，从发起请求的时刻开始，到获得响应并更新至聊天记录，会有几秒钟的延时。这会让应用看起来很慢，肯定会造成用户体验上的损失。 既然如此，为什么不直接在本地创建一个新记录呢？只需将消息立即添加至聊天记录中即可。用户会感知到这个消息被立即发送出去了，他们不知道（甚至不关心）这个消息是否被分发给了聊天室中的所有人。只有这种清澈、流畅的产品体验，才会让用户倍感愉悦。 除了交互设计的小窍门之外，Web应用中最耗时的部分是新数据的加载。最明智的做法是在用户请求数据之前预测用户的行为并预加载数据，这一点非常重要。预加载的数据被缓存在内存中，如果随后用户需要这个数据，就不必再发起到服务器的请求了。应用在启动伊始就应当预加载常用的数据。应用加载时的略微延时或许可忍，而加载完成后糟糕的交互体验断不可忍。 当用户和你的应用产生交互时，你需要适时给用户一些反馈，通常使用一些可视化的进度指示来给出反馈。用行业术语来讲就是“期望管理”（expectationmanagment）——要让用户知道当前项目的状态和估计完成时间。“期望管理”同样适用于用户体验领域，适时地给用户一些反馈，告知用户发生了什么事情，会让用户更有耐心等待程序的运行。当用户等待新数据的加载时最好给出信息提示或一张旋转的小图片。如果在上传文件，则给出上传进度条及估计完成时间。这些都属于感知速度的范畴，可有效地提升产品的用户体验。","tags":[{"name":"WebSocket","slug":"WebSocket","permalink":"https://xiyuan-code.github.io/blog/tags/WebSocket/"}]},{"title":"userData本地存储","date":"2018-05-04T03:58:12.000Z","path":"2018/05/04/web前端技巧/web兼容资料/userData本地存储/","text":"目前流行前后端分离，通常H5浏览器没多大问题，如果在IE8等低版本浏览器中，会导致N中问题出现，这篇日志主要提供前后端分离后的本地存储兼容问题解决方案。 本地存储数据的问题。如果ie不是国内最广泛的浏览器，如果ie9（ie8存在一些问题，后面再说）已经得到普及，那么一切就都很简单了，用html5的localstorage，一切都变得异常简单——谷歌浏览器早就支持localstorage了，但ie支持得很晚。 应用场景userData是微软为IE专门在系统中开辟的一块存储空间，所以说只支持Windows+IE的组合，实际测试在2000（IE5.5）、XP（IE6、IE7），Vista（IE7）下都是可以正常使用的。 Internet Explorer不同安全区域中的userData存储能力 安 全 区 域 页大小限制 域大小限制 Intranet 512KB 10MB 本机、可信任区域及Internet 128KB 1MB 受限制区域 64KB 640KB 线上使用时，单个文件的大小限制是128KB，一个域名下总共可以保存1024KB的文件，文件个数应该没有限制。在受限站点里这两个值分别是64KB和640KB，所以如果考虑到各种情况的话，单个文件最好能控制64KB以下。 使用示例用下面的JS语句就可以建立一个支持userData的对象：123456var elm = document.createElement('input');elm.type = \"hidden\";elm.addBehavior (\"#default#userData\");//userData.o.style.behavior = \"url('#default#userData')\" ;//上面的语句也是一样的作用document.body.appendChild(elm); 说白了userData就是样式里的一个Behavior(特性)，所以这样写也是一样的：1234&lt;input type=\"hidden\" class=\"storeuserData\" /&gt;&lt;style&gt;.storeuserData &#123;behavior:url(#default#userData);&#125;&lt;/style&gt; userData可以绑定在大多数的html标签上，具体为：12345678A, ACRONYM, ADDRESS, AREA, B, BIG, BLOCKQUOTE,BUTTON, CAPTION, CENTER, CITE, CODE, DD, DEL,DFN, DIR, DIV, DL, DT, EM, FONT, FORM,hn, HR, I, IMG, INPUT,KBD, LABEL, LI, LISTING, MAP, MARQUEE,MENU, OBJECT, OL, OPTION, P, PLAINTEXT, PRE,Q, S, SAMP, SELECT, SMALL, SPAN, STRIKE, STRONG,SUB, SUP, TABLE, TEXTAREA, TT, U, UL, VAR, XM userData属性说明 属性 描述 expires 设置或读取文件过期时间 XMLDocument 读取文件的XML DOM 方法 描述 getAttribute 读取指定属性的值 load 打开文件 removeAttribute 删除指定的属性 save 保存文件 setAttribute 为指定属性赋值 userData文件实际上就是一个XML文件，通过文件名-&gt;属性的方式保存字符串，如以下一段代码：12elm.setAttribute(\"code\", \"hello world!\");elm.save(\"baidu\"); 执行后，userData文件夹中会生成一个baidu[1].xml文件，其中的内容是：1&lt;ROOTSTUB code=\"hello,world!\"/&gt; 在一个文件中可以有多个属性，也就是可以存储多种不同的数据。 封装userData类封装了一个userData类，这样可以更方便地使用userData，代码如下:123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657/** @class 定义userData的操作 */var userData = &#123;// 定义userData对象o : null,// 设置文件过期时间defExps : 365,// 初始化userdate对象init : function()&#123; if(!userData.o)&#123; try&#123; userData.o = document.createElement('input'); userData.o.type = \"hidden\"; //userData.o.style.behavior = \"url('#default#userData')\" ; userData.o.addBehavior (\"#default#userData\"); document.body.appendChild(userData.o); &#125;catch(e)&#123; return false; &#125; &#125;; return true;&#125;,// 保存文件到userData文件夹中 f-文件名，c-文件内容，e-过期时间save : function(f, c, e)&#123; if(userData.init())&#123; var o = userData.o; // 保持对象的一致 o.load(f); // 将传入的内容当作属性存储 if(c) o.setAttribute(\"code\", c); // 设置文件过期时间 var d = new Date(), e = (arguments.length == 3) ? e : userData.defExps; d.setDate(d.getDate()+e); o.expires = d.toUTCString(); // 存储为制定的文件名 o.save(f); &#125;&#125;,// 从uerdata文件夹中读取指定文件，并以字符串形式返回。f-文件名load : function(f)&#123; if(userData.init())&#123; var o = userData.o; // 读取文件 o.load(f); // 返回文件内容 return o.getAttribute(\"code\"); &#125;&#125;,// 检查userData文件是否存在 f-文件名exist : function(f)&#123; return userData.load(f) != null;&#125;,// 删除userData文件夹中的指定文件 f-文件名remove : function(f)&#123; userData.save(f, false, -userData.defExps);&#125;// userData函数定义结束&#125;;","tags":[{"name":"本地存储","slug":"本地存储","permalink":"https://xiyuan-code.github.io/blog/tags/本地存储/"}]},{"title":"nw快速入门","date":"2018-01-21T10:41:12.000Z","path":"2018/01/21/web前端技巧/node-webkit/nw快速入门/","text":"","tags":[{"name":"node-webkit","slug":"node-webkit","permalink":"https://xiyuan-code.github.io/blog/tags/node-webkit/"}]},{"title":"javascript获取图片宽高的方法","date":"2018-01-21T03:49:00.000Z","path":"2018/01/21/web前端技巧/javascript/javascript获取图片宽高的方法/","text":"这篇主要介绍了js获取图片宽高的方法，快速获取图片的宽高其实是为了预先做好排版样式布局/或图片上传尺寸校验做准备，需要的朋友可以参考下 本文分享多种js获取图片宽高的方法，并且通过实例进行分析，希望大家从中有所收获 简陋的获取图片方式1234567891011// 图片地址 后面加时间戳是为了避免缓存var img_url = ‘upload/2013/13643608813441.jpg?'+Date.parse(new Date());// 创建对象var img = new Image();// 改变图片的srcimg.src = img_url;// 打印alert('width:'+img.width+',height:'+img.height); 结果如下： 宽高都是0的这个结果很正常，因为图片的相关数据都没有被加载前它的宽高默认就是0 于是可以这么优化！ 监听图片load事件后在打印1234567891011121314// 图片地址 后面加时间戳是为了避免缓存var img_url = 'upload/2013/13643608813441.jpg?'+Date.parse(new Date());// 创建对象var img = new Image();// 改变图片的srcimg.src = img_url;// 加载完成执行img.onload = function()&#123; // 打印 alert('width:'+img.width+',height:'+img.height);&#125;; 结果如下 通过onload就能获取到图片的宽高了。但onload大一点的图通常都比较慢，不实用，但只要图片被浏览器缓存，那么图片加载几乎就不用等待即可触发onload，我们要的是占位符。所以有些人通过缓存获取也可以这么写。 通过complete与onload一起混合使用为了测试缓存效果，注意以下测试图片的url都不加时间戳 1234567891011121314151617181920// 图片地址var img_url = 'upload/2013/13643608813441.jpg';// 创建对象var img = new Image();// 改变图片的srcimg.src = img_url;// 判断是否有缓存if(img.complete)&#123; // 打印 alert('from:complete : width:'+img.width+',height:'+img.height);&#125;else&#123; // 加载完成执行 img.onload = function()&#123; // 打印 alert('from:onload : width:'+img.width+',height:'+img.height); &#125;;&#125; 第一次执行，永远是onload触发 你再刷新，几乎都是缓存触发了 从缓存里读取图片的宽高不用说，非常方便快捷，今天我们要解决的是没有缓存而又快速的相比onload更快的方式去获取图片的宽高。我们常常知道有些图片虽然没有完全down下来，但是已经先有占位符，然后一点一点的加载。既然有占位符那应该是请求图片资源服务器响应后返回的。可服务器什么时候响应并返回宽高的数据没有触发事件，比如onload事件。于是催生了第四种方法 通过定时循环检测获取看看以下例子，为了避免从缓存里读取数据，每一次请求都带时间戳： 123456789101112131415161718192021222324252627// 图片地址var img_url = 'upload/2013/13643608813441.jpg?'+Date.parse(new Date());// 创建对象var img = new Image();// 改变图片的srcimg.src = img_url;// 定时执行获取宽高var check = function()&#123; document.body.innerHTML += 'from:check : width:'+img.width+',height:'+img.height+'';&#125;;var set = setInterval(check,40);// 加载完成获取宽高img.onload = function()&#123; document.body.innerHTML += 'from:onload : width:'+img.width+',height:'+img.height+''; // 取消定时获取宽高 clearInterval(set);&#125;; 通过以上测试，我们发现定时检测图片宽高的方式要比onload快多了，打印的行数越多表示onload时间越长，40毫秒执行一次，基本100毫秒内就能获取图片的宽高，chrome甚至在第一次循环的时候就已经获得数据。从以上数据来分析，其实我们可以在定时函数里判断只要图片的宽高都大于0就表示已经获得正确的图片宽高。我们把时间打上，来看看通过定时获取宽高或者onload获取宽高所需要多少时间。 通过定时循环检测优化获取1234567891011121314151617181920212223242526272829303132// 记录当前时间戳var start_time = new Date().getTime();// 图片地址var img_url = 'http://b.zol-img.com.cn/desk/bizhi/image/2/2560x1600/1365477614755.jpg?'+start_time;// 创建对象var img = new Image();// 改变图片的srcimg.src = img_url;// 定时执行获取宽高var check = function()&#123; // 只要任何一方大于0 // 表示已经服务器已经返回宽高 if(img.width&gt;0 || img.height&gt;0)&#123; var diff = new Date().getTime() - start_time; document.body.innerHTML += 'from:check : width:'+img.width+',height:'+img.height+', time:'+diff+'ms'; clearInterval(set); &#125;&#125;;var set = setInterval(check,40);// 加载完成获取宽高img.onload = function()&#123; var diff = new Date().getTime() - start_time; document.body.innerHTML += 'from:onload : width:'+img.width+',height:'+img.height+', time:'+diff+'ms';&#125;; 这是一张2560 * 1600大小的图片，各浏览器执行结果都能看到通过快速获取图片大小的方法几乎都在200毫秒以内，而onload至少五秒以上，这差别之大说明快速获取图片宽高非常实用。通过大量实例分析比较了js获取图片宽高各种方法的优劣，希望大家根据需要认真取舍。","tags":[{"name":"javascript","slug":"javascript","permalink":"https://xiyuan-code.github.io/blog/tags/javascript/"}]},{"title":"HTTP状态码详解","date":"2017-12-24T08:26:24.239Z","path":"2017/12/24/教程资料/HTTP状态码详解/","text":"此篇笔记记录http各种状态码的含义 。 对网站管理工作者来说有个词不陌生，HTTP状态码，它是用以表示网页服务器HTTP响应状态的3位数字代码。状态码的第一个数字代表了响应的五种状态之一。 1XX系列：指定客户端应相应的某些动作，代表请求已被接受，需要继续处理。由于 HTTP/1.0 协议中没有定义任何 1xx 状态码，所以除非在某些试验条件下，服务器禁止向此类客户端发送 1xx 响应。 100客户端应当继续发送请求。这个临时响应是用来通知客户端它的部分请求已经被服务器接收，且仍未被拒绝。客户端应当继续发送请求的剩余部分，或者如果请求已经完成，忽略这个响应。服务器必须在请求完成后向客户端发送一个最终响应。 101服务器已经理解了客户端的请求，并将通过Upgrade 消息头通知客户端采用不同的协议来完成这个请求。在发送完这个响应最后的空行后，服务器将会切换到在Upgrade 消息头中定义的那些协议。 只有在切换新的协议更有好处的时候才应该采取类似措施。例如，切换到新的HTTP 版本比旧版本更有优势，或者切换到一个实时且同步的协议以传送利用此类特性的资源。 102由WebDAV（RFC 251）扩展的状态码，代表处理将被继续执行。 2XX系列：代表请求已成功被服务器接收、理解、并接受。这系列中最常见的有200、201状态码 200请求已成功，请求所希望的响应头或数据体将随此响应返回。 202服务器已接受请求，但尚未处理。正如它可能被拒绝一样，最终该请求可能会也可能不会被执行。在异步操作的场合下，没有比发送这个状态码更方便的做法了。 返回202状态码的响应的目的是允许服务器接受其他过程的请求（例如某个每天只执行一次的基于批处理的操作），而不必让客户端一直保持与服务器的连接直到批处理操作全部完成。在接受请求处理并返回202状态码的响应应当在返回的实体中包含一些指示处理当前状态的信息，以及指向处理状态监视器或状态预测的指针，以便用户能够估计操作是否已经完成。 203服务器已成功处理了请求，但返回的实体头部元信息不是在原始服务器上有效的确定集合，而是来自本地或者第三方的拷贝。当前的信息可能是原始版本的子集或者超集。例如，包含资源的元数据可能导致原始服务器知道元信息的超级。使用此状态码不是必须的，而且只有在响应不使用此状态码便会返回200 OK的情况下才是合适的。 204服务器成功处理了请求，但不需要返回任何实体内容，并且希望返回更新了的元信息。响应可能通过实体头部的形式，返回新的或更新后的元信息。如果存在这些头部信息，则应当与所请求的变量相呼应。 如果客户端是浏览器的话，那么用户浏览器应保留发送了该请求的页面，而不产生任何文档视图上的变化，即使按照规范新的或更新后的元信息应当被应用到用户浏览器活动视图中的文档。 由于204响应被禁止包含任何消息体，因此它始终以消息头后的第一个空行结尾。 205服务器成功处理了请求，且没有返回任何内容。但是与204响应不同，返回此状态码的响应要求请求者重置文档视图。该响应主要是被用于接受用户输入后，立即重置表单，以便用户能够轻松地开始另一次输入。 与204响应一样，该响应也被禁止包含任何消息体，且以消息头后的第一个空行结束。 206服务器已经成功处理了部分 GET 请求。类似于 FlashGet 或者迅雷这类的 HTTP 下载工具都是使用此类响应实现断点续传或者将一个大文档分解为多个下载段同时下载。 该请求必须包含 Range 头信息来指示客户端希望得到的内容范围，并且可能包含 If-Range 来作为请求条件。 响应必须包含如下的头部域： Content-Range 用以指示本次响应中返回的内容的范围；如果是 Content-Type 为 multipart/byteranges 的多段下载，则每一 multipart 段中都应包含 Content-Range 域用以指示本段的内容范围。假如响应中包含 Content-Length，那么它的数值必须匹配它返回的内容范围的真实字节数。 Date ETag 和/或 Content-Location，假如同样的请求本应该返回200响应。 Expires, Cache-Control，和/或 Vary，假如其值可能与之前相同变量的其他响应对应的值不同的话。 假如本响应请求使用了 If-Range 强缓存验证，那么本次响应不应该包含其他实体头；假如本响应的请求使用了 If-Range 弱缓存验证，那么本次响应禁止包含其他实体头；这避免了缓存的实体内容和更新了的实体头信息之间的不一致。否则，本响应就应当包含所有本应该返回200响应中应当返回的所有实体头部域。 假如 ETag 或 Last-Modified 头部不能精确匹配的话，则客户端缓存应禁止将206响应返回的内容与之前任何缓存过的内容组合在一起。 任何不支持 Range 以及 Content-Range 头的缓存都禁止缓存206响应返回的内容。 207由WebDAV(RFC 2518)扩展的状态码，代表之后的消息体将是一个XML消息，并且可能依照之前子请求数量的不同，包含一系列独立的响应代码。 3XX系列：代表需要客户端采取进一步的操作才能完成请求，这些状态码用来重定向，后续的请求地址（重定向目标）在本次响应的 Location 域中指明。这系列中最常见的有301、302状态码。 300被请求的资源有一系列可供选择的回馈信息，每个都有自己特定的地址和浏览器驱动的商议信息。用户或浏览器能够自行选择一个首选的地址进行重定向。 除非这是一个 HEAD 请求，否则该响应应当包括一个资源特性及地址的列表的实体，以便用户或浏览器从中选择最合适的重定向地址。这个实体的格式由 Content-Type 定义的格式所决定。浏览器可能根据响应的格式以及浏览器自身能力，自动作出最合适的选择。当然，RFC 2616规范并没有规定这样的自动选择该如何进行。 如果服务器本身已经有了首选的回馈选择，那么在 Location 中应当指明这个回馈的 URI；浏览器可能会将这个 Location 值作为自动重定向的地址。此外，除非额外指定，否则这个响应也是可缓存的。 301被请求的资源已永久移动到新位置，并且将来任何对此资源的引用都应该使用本响应返回的若干个 URI 之一。如果可能，拥有链接编辑功能的客户端应当自动把请求的地址修改为从服务器反馈回来的地址。除非额外指定，否则这个响应也是可缓存的。 新的永久性的 URI 应当在响应的 Location 域中返回。除非这是一个 HEAD 请求，否则响应的实体中应当包含指向新的 URI 的超链接及简短说明。 如果这不是一个 GET 或者 HEAD 请求，因此浏览器禁止自动进行重定向，除非得到用户的确认，因为请求的条件可能因此发生变化。 注意：对于某些使用 HTTP/1.0 协议的浏览器，当它们发送的 POST 请求得到了一个301响应的话，接下来的重定向请求将会变成 GET 方式。 302请求的资源现在临时从不同的 URI 响应请求。由于这样的重定向是临时的，客户端应当继续向原有地址发送以后的请求。只有在Cache-Control或Expires中进行了指定的情况下，这个响应才是可缓存的。 新的临时性的 URI 应当在响应的 Location 域中返回。除非这是一个 HEAD 请求，否则响应的实体中应当包含指向新的 URI 的超链接及简短说明。 如果这不是一个 GET 或者 HEAD 请求，那么浏览器禁止自动进行重定向，除非得到用户的确认，因为请求的条件可能因此发生变化。 注意：虽然RFC 1945和RFC 2068规范不允许客户端在重定向时改变请求的方法，但是很多现存的浏览器将302响应视作为303响应，并且使用 GET 方式访问在 Location 中规定的 URI，而无视原先请求的方法。状态码303和307被添加了进来，用以明确服务器期待客户端进行何种反应。 303对应当前请求的响应可以在另一个 URI 上被找到，而且客户端应当采用 GET 的方式访问那个资源。这个方法的存在主要是为了允许由脚本激活的POST请求输出重定向到一个新的资源。这个新的 URI 不是原始资源的替代引用。同时，303响应禁止被缓存。当然，第二个请求（重定向）可能被缓存。 新的 URI 应当在响应的 Location 域中返回。除非这是一个 HEAD 请求，否则响应的实体中应当包含指向新的 URI 的超链接及简短说明。 注意：许多 HTTP/1.1 版以前的 浏览器不能正确理解303状态。如果需要考虑与这些浏览器之间的互动，302状态码应该可以胜任，因为大多数的浏览器处理302响应时的方式恰恰就是上述规范要求客户端处理303响应时应当做的。 304如果客户端发送了一个带条件的 GET 请求且该请求已被允许，而文档的内容（自上次访问以来或者根据请求的条件）并没有改变，则服务器应当返回这个状态码。304响应禁止包含消息体，因此始终以消息头后的第一个空行结尾。 该响应必须包含以下的头信息： Date，除非这个服务器没有时钟。假如没有时钟的服务器也遵守这些规则，那么代理服务器以及客户端可以自行将 Date 字段添加到接收到的响应头中去（正如RFC 2068中规定的一样），缓存机制将会正常工作。 ETag 和/或 Content-Location，假如同样的请求本应返回200响应。 Expires, Cache-Control，和/或Vary，假如其值可能与之前相同变量的其他响应对应的值不同的话。 假如本响应请求使用了强缓存验证，那么本次响应不应该包含其他实体头；否则（例如，某个带条件的 GET 请求使用了弱缓存验证），本次响应禁止包含其他实体头；这避免了缓存了的实体内容和更新了的实体头信息之间的不一致。 假如某个304响应指明了当前某个实体没有缓存，那么缓存系统必须忽视这个响应，并且重复发送不包含限制条件的请求。 假如接收到一个要求更新某个缓存条目的304响应，那么缓存系统必须更新整个条目以反映所有在响应中被更新的字段的值。 305被请求的资源必须通过指定的代理才能被访问。Location 域中将给出指定的代理所在的 URI 信息，接收者需要重复发送一个单独的请求，通过这个代理才能访问相应资源。只有原始服务器才能建立305响应。 注意：RFC 2068中没有明确305响应是为了重定向一个单独的请求，而且只能被原始服务器建立。忽视这些限制可能导致严重的安全后果。 306在最新版的规范中，306状态码已经不再被使用。 307请求的资源现在临时从不同的URI 响应请求。由于这样的重定向是临时的，客户端应当继续向原有地址发送以后的请求。只有在Cache-Control或Expires中进行了指定的情况下，这个响应才是可缓存的。 新的临时性的URI 应当在响应的 Location 域中返回。除非这是一个HEAD 请求，否则响应的实体中应当包含指向新的URI 的超链接及简短说明。因为部分浏览器不能识别307响应，因此需要添加上述必要信息以便用户能够理解并向新的 URI 发出访问请求。 如果这不是一个GET 或者 HEAD 请求，那么浏览器禁止自动进行重定向，除非得到用户的确认，因为请求的条件可能因此发生变化。 4XX系列：表示请求错误。代表了客户端看起来可能发生了错误，妨碍了服务器的处理。常见有：401、404状态码。 4001、语义有误，当前请求无法被服务器理解。除非进行修改，否则客户端不应该重复提交这个请求。 2、请求参数有误。 401当前请求需要用户验证。该响应必须包含一个适用于被请求资源的 WWW-Authenticate 信息头用以询问用户信息。客户端可以重复提交一个包含恰当的 Authorization 头信息的请求。如果当前请求已经包含了 Authorization 证书，那么401响应代表着服务器验证已经拒绝了那些证书。如果401响应包含了与前一个响应相同的身份验证询问，且浏览器已经至少尝试了一次验证，那么浏览器应当向用户展示响应中包含的实体信息，因为这个实体信息中可能包含了相关诊断信息。参见RFC 2617。 402该状态码是为了将来可能的需求而预留的 403服务器已经理解请求，但是拒绝执行它。与401响应不同的是，身份验证并不能提供任何帮助，而且这个请求也不应该被重复提交。如果这不是一个 HEAD 请求，而且服务器希望能够讲清楚为何请求不能被执行，那么就应该在实体内描述拒绝的原因。当然服务器也可以返回一个404响应，假如它不希望让客户端获得任何信息。 404请求失败，请求所希望得到的资源未被在服务器上发现。没有信息能够告诉用户这个状况到底是暂时的还是永久的。假如服务器知道情况的话，应当使用410状态码来告知旧资源因为某些内部的配置机制问题，已经永久的不可用，而且没有任何可以跳转的地址。404这个状态码被广泛应用于当服务器不想揭示到底为何请求被拒绝或者没有其他适合的响应可用的情况下。 405请求行中指定的请求方法不能被用于请求相应的资源。该响应必须返回一个Allow 头信息用以表示出当前资源能够接受的请求方法的列表。 鉴于 PUT，DELETE 方法会对服务器上的资源进行写操作，因而绝大部分的网页服务器都不支持或者在默认配置下不允许上述请求方法，对于此类请求均会返回405错误。 406请求的资源的内容特性无法满足请求头中的条件，因而无法生成响应实体。 除非这是一个 HEAD 请求，否则该响应就应当返回一个包含可以让用户或者浏览器从中选择最合适的实体特性以及地址列表的实体。实体的格式由 Content-Type 头中定义的媒体类型决定。浏览器可以根据格式及自身能力自行作出最佳选择。但是，规范中并没有定义任何作出此类自动选择的标准。 407与401响应类似，只不过客户端必须在代理服务器上进行身份验证。代理服务器必须返回一个 Proxy-Authenticate 用以进行身份询问。客户端可以返回一个 Proxy-Authorization 信息头用以验证。参见RFC 2617。 408请求超时。客户端没有在服务器预备等待的时间内完成一个请求的发送。客户端可以随时再次提交这一请求而无需进行任何更改。 409由于和被请求的资源的当前状态之间存在冲突，请求无法完成。这个代码只允许用在这样的情况下才能被使用：用户被认为能够解决冲突，并且会重新提交新的请求。该响应应当包含足够的信息以便用户发现冲突的源头。 冲突通常发生于对 PUT 请求的处理中。例如，在采用版本检查的环境下，某次 PUT 提交的对特定资源的修改请求所附带的版本信息与之前的某个（第三方）请求向冲突，那么此时服务器就应该返回一个409错误，告知用户请求无法完成。此时，响应实体中很可能会包含两个冲突版本之间的差异比较，以便用户重新提交归并以后的新版本。 410被请求的资源在服务器上已经不再可用，而且没有任何已知的转发地址。这样的状况应当被认为是永久性的。如果可能，拥有链接编辑功能的客户端应当在获得用户许可后删除所有指向这个地址的引用。如果服务器不知道或者无法确定这个状况是否是永久的，那么就应该使用404状态码。除非额外说明，否则这个响应是可缓存的。 410响应的目的主要是帮助网站管理员维护网站，通知用户该资源已经不再可用，并且服务器拥有者希望所有指向这个资源的远端连接也被删除。这类事件在限时、增值服务中很普遍。同样，410响应也被用于通知客户端在当前服务器站点上，原本属于某个个人的资源已经不再可用。当然，是否需要把所有永久不可用的资源标记为’410 Gone’，以及是否需要保持此标记多长时间，完全取决于服务器拥有者。 411服务器拒绝在没有定义 Content-Length 头的情况下接受请求。在添加了表明请求消息体长度的有效 Content-Length 头之后，客户端可以再次提交该请求。 412服务器在验证在请求的头字段中给出先决条件时，没能满足其中的一个或多个。这个状态码允许客户端在获取资源时在请求的元信息（请求头字段数据）中设置先决条件，以此避免该请求方法被应用到其希望的内容以外的资源上。 413服务器拒绝处理当前请求，因为该请求提交的实体数据大小超过了服务器愿意或者能够处理的范围。此种情况下，服务器可以关闭连接以免客户端继续发送此请求。 如果这个状况是临时的，服务器应当返回一个 Retry-After 的响应头，以告知客户端可以在多少时间以后重新尝试。 414请求的URI 长度超过了服务器能够解释的长度，因此服务器拒绝对该请求提供服务。这比较少见，通常的情况包括： 本应使用POST方法的表单提交变成了GET方法，导致查询字符串（Query String）过长。 重定向URI “黑洞”，例如每次重定向把旧的 URI 作为新的 URI 的一部分，导致在若干次重定向后 URI 超长。 客户端正在尝试利用某些服务器中存在的安全漏洞攻击服务器。这类服务器使用固定长度的缓冲读取或操作请求的 URI，当 GET 后的参数超过某个数值后，可能会产生缓冲区溢出，导致任意代码被执行[1]。没有此类漏洞的服务器，应当返回414状态码。 415对于当前请求的方法和所请求的资源，请求中提交的实体并不是服务器中所支持的格式，因此请求被拒绝。 416如果请求中包含了 Range 请求头，并且 Range 中指定的任何数据范围都与当前资源的可用范围不重合，同时请求中又没有定义 If-Range 请求头，那么服务器就应当返回416状态码。 假如 Range 使用的是字节范围，那么这种情况就是指请求指定的所有数据范围的首字节位置都超过了当前资源的长度。服务器也应当在返回416状态码的同时，包含一个 Content-Range 实体头，用以指明当前资源的长度。这个响应也被禁止使用 multipart/byteranges 作为其 Content-Type。 417在请求头 Expect 中指定的预期内容无法被服务器满足，或者这个服务器是一个代理服务器，它有明显的证据证明在当前路由的下一个节点上，Expect 的内容无法被满足。 421从当前客户端所在的IP地址到服务器的连接数超过了服务器许可的最大范围。通常，这里的IP地址指的是从服务器上看到的客户端地址（比如用户的网关或者代理服务器地址）。在这种情况下，连接数的计算可能涉及到不止一个终端用户。 422从当前客户端所在的IP地址到服务器的连接数超过了服务器许可的最大范围。通常，这里的IP地址指的是从服务器上看到的客户端地址（比如用户的网关或者代理服务器地址）。在这种情况下，连接数的计算可能涉及到不止一个终端用户。 424由于之前的某个请求发生的错误，导致当前请求失败，例如 PROPPATCH。（RFC 4918 WebDAV） 425在WebDav Advanced Collections 草案中定义，但是未出现在《WebDAV 顺序集协议》（RFC 3658）中。 426客户端应当切换到TLS/1.0。（RFC 2817） 449由微软扩展，代表请求应当在执行完适当的操作后进行重试。 5xx系列：代表了服务器在处理请求的过程中有错误或者异常状态发生，也有可能是服务器意识到以当前的软硬件资源无法完成对请求的处理。常见有500、503状态码。 500服务器遇到了一个未曾预料的状况，导致了它无法完成对请求的处理。一般来说，这个问题都会在服务器的程序码出错时出现。 501服务器不支持当前请求所需要的某个功能。当服务器无法识别请求的方法，并且无法支持其对任何资源的请求。 502作为网关或者代理工作的服务器尝试执行请求时，从上游服务器接收到无效的响应。 503由于临时的服务器维护或者过载，服务器当前无法处理请求。这个状况是临时的，并且将在一段时间以后恢复。如果能够预计延迟时间，那么响应中可以包含一个 Retry-After 头用以标明这个延迟时间。如果没有给出这个 Retry-After 信息，那么客户端应当以处理500响应的方式处理它。 注意：503状态码的存在并不意味着服务器在过载的时候必须使用它。某些服务器只不过是希望拒绝客户端的连接。 504作为网关或者代理工作的服务器尝试执行请求时，未能及时从上游服务器（URI标识出的服务器，例如HTTP、FTP、LDAP）或者辅助服务器（例如DNS）收到响应。 注意：某些代理服务器在DNS查询超时时会返回400或者500错误 505服务器不支持，或者拒绝支持在请求中使用的 HTTP 版本。这暗示着服务器不能或不愿使用与客户端相同的版本。响应中应当包含一个描述了为何版本不被支持以及服务器支持哪些协议的实体。 506由《透明内容协商协议》（RFC 2295）扩展，代表服务器存在内部配置错误：被请求的协商变元资源被配置为在透明内容协商中使用自己，因此在一个协商处理中不是一个合适的重点。 507服务器无法存储完成请求所必须的内容。这个状况被认为是临时的。WebDAV (RFC 4918) 509服务器达到带宽限制。这不是一个官方的状态码，但是仍被广泛使用。 510获取资源所需要的策略并没有没满足。（RFC 2774）","tags":[{"name":"http","slug":"http","permalink":"https://xiyuan-code.github.io/blog/tags/http/"}]},{"title":"多域名免登陆 ssh git 配置","date":"2017-12-24T02:49:59.664Z","path":"2017/12/24/服务运维/ssh/多域名 ssh git 配置/","text":"此篇笔记记录如何支持多域名免登陆 ssh git 配置，这里备忘一下。 ssh 公钥生成生成, 默认文件名为id_rsa 1ssh-keygen -t rsa -C \"your_email@example.com\" 多个key的情况, second为文件名称 1ssh-keygen -t rsa -C \"your_email@example.com\" -f ~/.ssh/second 服务端配置将生成的xxx.pub的内容拷贝到对应的网站中 ssh config 配置. ~/.ssh/config Host &gt;域名 User &gt;用户名 IdentityFile &gt;ssh key的路径 IdentitiesOnly &gt;只使用这里设置的key, 防止使用默认的 ServerAliveInterval &gt;连接保持 ControlMaster auto &gt;不用重新登录 ControlPath ~/.ssh/master-%r@%h:%p 1234567891011121314151617181920212223Host github.com User git IdentityFile ~/.ssh/id_gmail IdentitiesOnly yesHost bitbucket.org User git IdentityFile ~/.ssh/id_gmail IdentitiesOnly yesHost git.coding.net User git IdentityFile ~/.ssh/id_gmail IdentitiesOnly yesHost git.oschina.net User git IdentityFile ~/.ssh/id_gmail IdentitiesOnly yesHost *.alibaba-inc.com User git IdentityFile ~/.ssh/id_rsaHost * ServerAliveInterval 60 ControlMaster auto ControlPath ~/.ssh/master-%r@%h:%p 保存1ssh-add -K ~/.ssh/id_ssh 连接测试1ssh -T git@xxxx.com git 名称设置12git config --global user.name \"User name\"git config --global user.email user@example.com 如果不设置全局的, 在项目目录下执行, 去掉–global即可","tags":[{"name":"linux","slug":"linux","permalink":"https://xiyuan-code.github.io/blog/tags/linux/"},{"name":"ssh","slug":"ssh","permalink":"https://xiyuan-code.github.io/blog/tags/ssh/"}]},{"title":"css常用样式大全","date":"2017-12-23T10:53:00.000Z","path":"2017/12/23/css样式技巧/css常用样式大全/","text":"此篇笔记记录各种常用属性的css样式。 文本常用样式大小1234text&#123; font-size: x-large;&#125;/* 特大,xx-small;(极小)一般中文用不到，只要用数值就可以，单位：PX、PD */ 样式1234text&#123; font-style: oblique;&#125;/* (偏斜体) italic;(斜体) normal;(正常) */ 行高1234text&#123; line-height: normal;&#125;/* (正常) 单位：PX、PD、EM */ 粗细1234text&#123; font-weight: bold;&#125;/* (粗体) lighter;(细体) normal;(正常) */ 变体1234text&#123; font-variant: small-caps;&#125;/* (小型大写字母) normal;(正常) */ 大小写1234text&#123; text-transform: capitalize;&#125;/* (首字母大写) uppercase;(大写) lowercase;(小写) none;(无) */ 修饰1234text&#123; text-decoration: underline;&#125;/* (下划线) overline;(上划线) line-through;(删除线) blink;(闪烁) */ 常用字体123text&#123; font-family:\"Courier New\", Courier, monospace, \"Times New Roman\", Times, serif, Arial, Helvetica, sans-serif, Verdana\"&#125; 字间距1234text&#123; letter-spacing: normal;&#125;/* 数值 这个属性似乎有用，多实践下*/ 对齐1234text&#123; text-align: justify;&#125;/* (两端对齐) left;(左对齐) right;(右对齐) center;(居中) */ 缩进123text&#123; text-indent: 数值px;&#125; 垂直对齐12345678910111213text&#123; vertical-align: baseline;&#125;/* (基线) sub;(下标) super;(下标) top; text-top; middle; bottom; text-bottom;*/ 词间距123text&#123; word-spacing: normal; /* 数值 */&#125; 空格1234text&#123; white-space: pre;&#125;/* pre;(保留) nowrap;(不换行) */ 显示123456789101112131415161718192021text&#123; display:block;&#125;/* block(块) inline;(内嵌) list-item;(列表项) run-in;(追加部分) compact;(紧凑) marker;(标记) table; i nline-table; table-raw-group; table-header-group; table-footer-group; table-raw; table-column-group; table-column; table-cell; table-caption;(表格标题)*/ 背景属性： (background)色彩123background&#123; background-color: #FFFFFF;&#125; 图片123background&#123; background-image: url();&#125; 重复123background&#123; background-repeat: no-repeat;&#125; 滚动1234background&#123; background-attachment: fixed;&#125;/* (固定) scroll;(滚动) */ 位置1234background&#123; background-position: left;&#125;/* (水平) top(垂直) */ 简写方法1234background&#123; background:#000 url(..) repeat fixed left top;&#125;/*简写·这个在阅读代码中经常出现，要认真的研究*/ 方框属性： (Box)width:; height:; float:; clear:both; margin:; padding:; 边框属性： (Border)border-style: dotted;(点线) dashed;(虚线) solid; double;(双线) groove;(槽线) ridge;(脊状) inset;(凹陷) outset; border-width:; 边框宽度 border-color:#; 简写方法123border&#123; border：width style color; /*简写*/&#125; 列表属性： (List-style)类型1234li&#123; list-style-type: disc;&#125;/* disc(圆点) circle;(圆圈) square;(方块) decimal;(数字) lower-roman;(小罗码数字) upper-roman; lower-alpha; upper-alpha;*/ 位置1234li&#123; list-style-position: outside;&#125;/* outside;(外) inside; */ 图像123li&#123; list-style-image: url(..);&#125; 定位属性： (Position)Position123div&#123; Position: absolute; /* relative; static; */&#125; visibility123div&#123; visibility: inherit; /* visible; hidden; */&#125; overflow123div&#123; overflow: visible; /* hidden; scroll; auto; */&#125; clip裁切123div&#123; clip: rect(12px,auto,12px,auto)&#125; css属性代码大全CSS文字属性：12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455text&#123; color : #999999; /*文字颜色*/ font-family : 宋体,sans-serif; /*文字字体*/ font-size : 9pt; /*文字大小*/ font-style:itelic; /*文字斜体*/ font-variant:small-caps; /*小字体*/ letter-spacing : 1pt; /*字间距离*/ line-height : 200%; /*设置行高*/ font-weight:bold; /*文字粗体*/ vertical-align:sub; /*下标字*/ vertical-align:super; /*上标字*/ text-decoration:line-through; /*加删除线*/ text-decoration: overline; /*加顶线*/ text-decoration:underline; /*加下划线*/ text-decoration:none; /*删除链接下划线*/ text-transform : capitalize; /*首字大写*/ text-transform : uppercase; /*英文大写*/ text-transform : lowercase; /*英文小写*/ text-align:right; /*文字右对齐*/ text-align:left; /*文字左对齐*/ text-align:center; /*文字居中对齐*/ text-align:justify; /*文字分散对齐*/ vertical-align属性 vertical-align:top; /*垂直向上对齐*/ vertical-align:bottom; /*垂直向下对齐*/ vertical-align:middle; /*垂直居中对齐*/ vertical-align:text-top; /*文字垂直向上对齐*/ vertical-align:text-bottom; /*文字垂直向下对齐*/&#125; CSS边框空白123456789div&#123; padding-top:10px; /*上边框留空白*/ padding-right:10px; /*右边框留空白*/ padding-bottom:10px; /*下边框留空白*/ padding-left:10px; /*左边框留空白&#125; CSS符号属性12345678910111213141516171819202122232425div&#123; list-style-type:none; /*不编号*/ list-style-type:decimal; /*阿拉伯数字*/ list-style-type:lower-roman; /*小写罗马数字*/ list-style-type:upper-roman; /*大写罗马数字*/ list-style-type:lower-alpha; /*小写英文字母*/ list-style-type:upper-alpha; /*大写英文字母*/ list-style-type:disc; /*实心圆形符号*/ list-style-type:circle; /*空心圆形符号*/ list-style-type:square; /*实心方形符号*/ list-style-image:url(/dot.gif); /*图片式符号*/ list-style-position: outside; /*凸排*/ list-style-position:inside; /*缩进*/&#125; CSS背景样式12345678910111213141516171819202122232425262728293031div&#123; background-color:#F5E2EC; /*背景颜色*/ background:transparent; /*透视背景*/ background-image : url(/image/bg.gif); /*背景图片*/ background-attachment : fixed; /*浮水印固定背景*/ background-repeat : repeat; /*重复排列-网页默认*/ background-repeat : no-repeat; /*不重复排列*/ background-repeat : repeat-x; /*在x轴重复排列*/ background-repeat : repeat-y; /*在y轴重复排列*/ /* 指定背景位置 */ background-position : 90% 90%; /*背景图片x与y轴的位置*/ background-position : top; /*向上对齐*/ background-position : buttom; /*向下对齐*/ background-position : left; /*向左对齐*/ background-position : right; /*向右对齐*/ background-position : center; /*居中对齐*/&#125; CSS连接属性123456789101112131415161718192021222324252627282930313233343536373839404142a /*所有超链接*/a:link /*超链接文字格式*/a:visited /*浏览过的链接文字格式*/a:active /*按下链接的格式*/a:hover /*鼠标转到链接*/鼠标光标样式：链接手指 CURSOR: hand十字体 cursor:crosshair箭头朝下 cursor:s-resize十字箭头 cursor:move箭头朝右 cursor:move加一问号 cursor:help箭头朝左 cursor:w-resize箭头朝上 cursor:n-resize箭头朝右上 cursor:ne-resize箭头朝左上 cursor:nw-resize文字I型 cursor:text箭头斜右下 cursor:se-resize箭头斜左下 cursor:sw-resize漏斗 cursor:wait光标图案(IE6) p &#123;cursor:url(\"光标文件名.cur\"),text;&#125; CSS框线一览表1234567891011121314151617border&#123; border-top : 1px solid #6699cc; /*上框线*/ border-bottom : 1px solid #6699cc; /*下框线*/ border-left : 1px solid #6699cc; /*左框线*/ border-right : 1px solid #6699cc; /*右框线*/ /* 以上是建议书写方式,但也可以使用常规的方式 如下 */ border-top-color : #369 /*设置上框线top颜色*/ border-top-width :1px /*设置上框线top宽度*/ border-top-style : solid/*设置上框线top样式*/&#125; 其他框线样式12345678910111213solid /*实线框*/dotted /*虚线框*/double /*双线框*/groove /*立体内凸框*/ridge /*立体浮雕框*/inset /*凹框*/outset /*凸框*/ CSS表单运用：1234567891011文字方块按钮复选框选择钮多行文字方块下拉式菜单 选项1选项2 CSS边界样式：123456789border&#123; margin-top:10px; /*上边界*/ margin-right:10px; /*右边界值*/ margin-bottom:10px; /*下边界值*/ margin-left:10px; /*左边界值*/&#125; CSS 属性： 字体样式(Font Style) 序号 中文说明 标记语法 1 字体样式 {font:font-style font-variant font-weight font-size font-family} 2 字体类型 {font-family:”字体1”,”字体2”,”字体3”,…} 3 字体大小 {font-size:数值&#124;inherit&#124; medium&#124; large&#124; larger&#124; x-large&#124; xx-large&#124; small&#124; smaller&#124; x-small&#124; xx-small} 4 字体风格 {font-style:inherit&#124;italic&#124;normal&#124;oblique} 5 字体粗细 {font-weight:100-900&#124;bold&#124;bolder&#124;lighter&#124;normal;} 6 字体颜色 {color:数值;} 7 阴影颜色 {text-shadow:16位色值} 8 字体行高 {line-height:数值&#124;inherit&#124;normal;} 9 字 间 距 {letter-spacing:数值&#124;inherit&#124;normal} 10 单词间距 {word-spacing:数值&#124;inherit&#124;normal} 11 字体变形 {font-variant:inherit&#124;normal&#124;small-cps } 12 英文转换 {text-transform:inherit&#124;none&#124;capitalize&#124;uppercase&#124;lowercase} 13 字体变形 {font-size-adjust:inherit&#124;none} 14 字体 {font-stretch:condensed&#124;expanded&#124;extra-condensed&#124;extra-expanded&#124;inherit&#124;narrower&#124;normal&#124; semi-condensed&#124;semi-expanded&#124;ultra-condensed&#124;ultra-expanded&#124;wider} 文本样式(Text Style)12345678910111213序号 中文说明 标记语法1 行 间 距 &#123;line-height:数值|inherit|normal;&#125;2 文本修饰 &#123;text-decoration:inherit|none|underline|overline|line-through|blink&#125;3 段首空格 &#123;text-indent:数值|inherit&#125;4 水平对齐 &#123;text-align:left|right|center|justify&#125;5 垂直对齐 &#123;vertical-align:inherit|top|bottom|text-top|text-bottom|baseline|middle|sub|super&#125;6 书写方式 &#123;writing-mode:lr-tb|tb-rl&#125; 背景样式12345678910111213序号 中文说明 标记语法1 背景颜色 &#123;background-color:数值&#125;2 背景图片 &#123;background-image: url(URL)|none&#125;3 背景重复 &#123;background-repeat:inherit|no-repeat|repeat|repeat-x|repeat-y&#125;4 背景固定 &#123;background-attachment:fixed|scroll&#125;5 背景定位 &#123;background-position:数值|top|bottom|left|right|center&#125;6 背影样式 &#123;background:背景颜色|背景图象|背景重复|背景附件|背景位置&#125; 框架样式(Box Style)12345678910111213141516171819202122232425262728293031序号 中文说明 标记语法1 边界留白 &#123;margin:margin-top margin-right margin-bottom margin-left&#125;2 补 白 &#123;padding:padding-top padding-right padding-bottom padding-left&#125;3 边框宽度 &#123;border-width:border-top-width border-right-width border-bottom-width border-left-width&#125; 宽度值： thin|medium|thick|数值4 边框颜色 &#123;border-color:数值 数值 数值 数值&#125; 数值：分别代表top、right、bottom、left颜色值5 边框风格 &#123;border-style:none|hidden|inherit|dashed|solid|double|inset|outset|ridge|groove&#125;6 边 框 &#123;border:border-width border-style color&#125;上 边 框 &#123;border-top:border-top-width border-style color&#125;右 边 框 &#123;border-right:border-right-width border-style color&#125;下 边 框 &#123;border-bottom:border-bottom-width border-style color&#125;左 边 框 &#123;border-left:border-left-width border-style color&#125;7 宽 度 &#123;width:长度|百分比| auto&#125;8 高 度 &#123;height:数值|auto&#125;9 漂 浮 &#123;float:left|right|none&#125;10 清 除 &#123;clear:none|left|right|both&#125; 分类列表123456789101112131415序号 中文说明 标记语法1 控制显示 &#123;display:none|block|inline|list-item&#125;2 控制空白 &#123;white-space:normal|pre|nowarp&#125;3 符号列表 &#123;list-style-type:disc|circle|square|decimal|lower-roman|upper-roman|lower-alpha|upper-alpha|none&#125;4 图形列表 &#123;list-style-image:URL&#125;5 位置列表 &#123;list-style-position:inside|outside&#125;6 目录列表 &#123;list-style:目录样式类型|目录样式位置|url&#125;7 鼠标形状 &#123;cursor:hand|crosshair|text|wait|move|help|e-resize|nw-resize|w-resize|s-resize|se-resize|sw-resize&#125;","tags":[{"name":"css","slug":"css","permalink":"https://xiyuan-code.github.io/blog/tags/css/"}]},{"title":"css中占位符placeholder样式选择器","date":"2017-12-23T08:53:00.000Z","path":"2017/12/23/css样式技巧/css中占位符placeholder样式选择器/","text":"此篇笔记记录如何利用伪元placeholder选择器改变占位符的样式。placeholder是HTML5 input的新属性，英文意思是占位符，它一般表示input输入框的默认提示值。 样式示例123456789101112131415input::-webkit-input-placeholder &#123; /* WebKit browsers */ line-height: 1.5em;&#125;input:-moz-placeholder &#123; /* Mozilla Firefox 4 to 18 */ line-height: 1.5em;&#125;input::-moz-placeholder &#123; /* Mozilla Firefox 19+ */ line-height: 1.5em;&#125;input:-ms-input-placeholder &#123; /* Internet Explorer 10+ */ line-height: 1.5em;&#125;","tags":[{"name":"css","slug":"css","permalink":"https://xiyuan-code.github.io/blog/tags/css/"}]},{"title":"PHP7.0探针程序","date":"2017-12-23T07:37:27.048Z","path":"2017/12/23/服务运维/PHP7.0探针程序/","text":"此篇笔记记录在本地测试PHP7.0的时候发现之前使用的探针工具不能使用了，在此给网友们提供更改后的php7.0探针脚本。 探针脚本点击下载php探针脚本lt;?php/* ---------------------------------------------------- *//* 程序名称: PHP探针-Yahei/* 程序功能: 探测系统的Web服务器运行环境/* 程序开发: Yahei.Net/* 联系方式: info@Yahei.net/* Date: 1970-01-01 / 2012-07-08/* ---------------------------------------------------- *//* 使用条款:/* 1.该软件免费使用./* 2.禁止任何衍生版本./* ---------------------------------------------------- *//* 感谢以下朋友为探针做出的贡献:/* zyypp,酷を龙卷风,龙智超,菊花肿了,闲人,Clare Lou,hotsnow/* 二戒,yexinzhu,wangyu1314,Kokgog,gibyasus,黃子珅,A大,huli/* 小松,charwin,华景网络/* 您可能是下一个?/* ---------------------------------------------------- */error_reporting(0); //抑制所有错误信息@header(\"content-Type: text/html; charset=utf-8\"); //语言强制ob_start();date_default_timezone_set('Asia/Shanghai');//此句用于消除时间差$title = '雅黑PHP探针[简体版]';$version = \"v0.4.7\"; //版本号define('HTTP_HOST', preg_replace('~^www\\.~i', '', $_SERVER['HTTP_HOST']));$time_start = microtime_float();function memory_usage()&#123; $memory = (!function_exists('memory_get_usage')) ? '0' : round(memory_get_usage() / 1024 / 1024, 2) . 'MB'; return $memory;&#125;// 计时function microtime_float()&#123; $mtime = microtime(); $mtime = explode(' ', $mtime); return $mtime[1] + $mtime[0];&#125;//单位转换function formatsize($size)&#123; $danwei = array(' B ', ' K ', ' M ', ' G ', ' T '); $allsize = array(); $i = 0; for ($i = 0; $i &lt; 5; $i++) &#123; if (floor($size / pow(1024, $i)) == 0) &#123; break; &#125; &#125; for ($l = $i - 1; $l &gt;= 0; $l--) &#123; $allsize1[$l] = floor($size / pow(1024, $l)); $allsize[$l] = $allsize1[$l] - $allsize1[$l + 1] * 1024; &#125; $len = count($allsize); for ($j = $len - 1; $j &gt;= 0; $j--) &#123; $fsize = $fsize . $allsize[$j] . $danwei[$j]; &#125; return $fsize;&#125;function valid_email($str)&#123; return (!preg_match(\"/^([a-z0-9\\+_\\-]+)(\\.[a-z0-9\\+_\\-]+)*@([a-z0-9\\-]+\\.)+[a-z]&#123;2,6&#125;$/ix\", $str)) ? FALSE : TRUE;&#125;//检测PHP设置参数function show($varName)&#123; switch ($result = get_cfg_var($varName)) &#123; case 0: return '&lt;font color=\"red\"&gt;×&lt;/font&gt;'; break; case 1: return '&lt;font color=\"green\"&gt;√&lt;/font&gt;'; break; default: return $result; break; &#125;&#125;//保留服务器性能测试结果$valInt = isset($_POST['pInt']) ? $_POST['pInt'] : \"未测试\";$valFloat = isset($_POST['pFloat']) ? $_POST['pFloat'] : \"未测试\";$valIo = isset($_POST['pIo']) ? $_POST['pIo'] : \"未测试\";if ($_GET['act'] == \"phpinfo\") &#123; phpinfo(); exit();&#125; elseif ($_POST['act'] == \"整型测试\") &#123; $valInt = test_int();&#125; elseif ($_POST['act'] == \"浮点测试\") &#123; $valFloat = test_float();&#125; elseif ($_POST['act'] == \"IO测试\") &#123; $valIo = test_io();&#125; //网速测试-开始elseif ($_POST['act'] == \"开始测试\") &#123; ?&gt; &lt;script language=\"javascript\" type=\"text/javascript\"&gt; var acd1; acd1 = new Date(); acd1ok = acd1.getTime(); &lt;/script&gt; &lt;?php for ($i = 1; $i &lt;= 100000; $i++) &#123; echo \"&lt;!--567890#########0#########0#########0#########0#########0#########0#########0#########012345--&gt;\"; &#125; ?&gt; &lt;script language=\"javascript\" type=\"text/javascript\"&gt; var acd2; acd2 = new Date(); acd2ok = acd2.getTime(); window.location = '?speed=' + (acd2ok - acd1ok) + '#w_networkspeed'; &lt;/script&gt; &lt;?php&#125; //网速测试-结束elseif ($_GET['act'] == \"Function\") &#123; $arr = get_defined_functions(); Function php() &#123; &#125; echo \"&lt;pre&gt;\"; Echo \"这里显示系统所支持的所有函数,和自定义函数\\n\"; print_r($arr); echo \"&lt;/pre&gt;\"; exit();&#125; elseif ($_GET['act'] == \"disable_functions\") &#123; $disFuns = get_cfg_var(\"disable_functions\"); if (empty($disFuns)) &#123; $arr = '&lt;font color=red&gt;×&lt;/font&gt;'; &#125; else &#123; $arr = $disFuns; &#125; Function php() &#123; &#125; echo \"&lt;pre&gt;\"; Echo \"这里显示系统被禁用的函数\\n\"; print_r($arr); echo \"&lt;/pre&gt;\"; exit();&#125;//MySQL检测if ($_POST['act'] == 'MySQL检测') &#123; $host = isset($_POST['host']) ? trim($_POST['host']) : ''; $port = isset($_POST['port']) ? (int)$_POST['port'] : ''; $login = isset($_POST['login']) ? trim($_POST['login']) : ''; $password = isset($_POST['password']) ? trim($_POST['password']) : ''; $host = preg_match('~[^a-z0-9\\-\\.]+~i', $host) ? '' : $host; $port = intval($port) ? intval($port) : ''; $login = preg_match('~[^a-z0-9\\_\\-]+~i', $login) ? '' : htmlspecialchars($login); $password = is_string($password) ? htmlspecialchars($password) : '';&#125; elseif ($_POST['act'] == '函数检测') &#123; $funRe = \"函数\" . $_POST['funName'] . \"支持状况检测结果：\" . isfun1($_POST['funName']);&#125; elseif ($_POST['act'] == '邮件检测') &#123; $mailRe = \"邮件发送检测结果：发送\"; if ($_SERVER['SERVER_PORT'] == 80) &#123; $mailContent = \"http://\" . $_SERVER['SERVER_NAME'] . ($_SERVER['PHP_SELF'] ? $_SERVER['PHP_SELF'] : $_SERVER['SCRIPT_NAME']); &#125; else &#123; $mailContent = \"http://\" . $_SERVER['SERVER_NAME'] . \":\" . $_SERVER['SERVER_PORT'] . ($_SERVER['PHP_SELF'] ? $_SERVER['PHP_SELF'] : $_SERVER['SCRIPT_NAME']); &#125; $mailRe .= (false !== @mail($_POST[\"mailAdd\"], $mailContent, \"This is a test mail!\")) ? \"完成\" : \"失败\";&#125;//网络速度测试if (isset($_POST['speed'])) &#123; $speed = round(100 / ($_POST['speed'] / 1000), 2);&#125; elseif ($_GET['speed'] == \"0\") &#123; $speed = 6666.67;&#125; elseif (isset($_GET['speed']) and $_GET['speed'] &gt; 0) &#123; $speed = round(100 / ($_GET['speed'] / 1000), 2); //下载速度：$speed kb/s&#125; else &#123; $speed = \"&lt;font color=\\\"red\\\"&gt;&amp;nbsp;未探测&amp;nbsp;&lt;/font&gt;\";&#125;// 检测函数支持function isfun($funName = '')&#123; if (!$funName || trim($funName) == '' || preg_match('~[^a-z0-9\\_]+~i', $funName, $tmp)) return '错误'; return (false !== function_exists($funName)) ? '&lt;font color=\"green\"&gt;√&lt;/font&gt;' : '&lt;font color=\"red\"&gt;×&lt;/font&gt;';&#125;function isfun1($funName = '')&#123; if (!$funName || trim($funName) == '' || preg_match('~[^a-z0-9\\_]+~i', $funName, $tmp)) return '错误'; return (false !== function_exists($funName)) ? '√' : '×';&#125;//整数运算能力测试function test_int()&#123; $timeStart = gettimeofday(); for ($i = 0; $i &lt; 3000000; $i++) &#123; $t = 1 + 1; &#125; $timeEnd = gettimeofday(); $time = ($timeEnd[\"usec\"] - $timeStart[\"usec\"]) / 1000000 + $timeEnd[\"sec\"] - $timeStart[\"sec\"]; $time = round($time, 3) . \"秒\"; return $time;&#125;//浮点运算能力测试function test_float()&#123; //得到圆周率值 $t = pi(); $timeStart = gettimeofday(); for ($i = 0; $i &lt; 3000000; $i++) &#123; //开平方 sqrt($t); &#125; $timeEnd = gettimeofday(); $time = ($timeEnd[\"usec\"] - $timeStart[\"usec\"]) / 1000000 + $timeEnd[\"sec\"] - $timeStart[\"sec\"]; $time = round($time, 3) . \"秒\"; return $time;&#125;//IO能力测试function test_io()&#123; $fp = @fopen(PHPSELF, \"r\"); $timeStart = gettimeofday(); for ($i = 0; $i &lt; 10000; $i++) &#123; @fread($fp, 10240); @rewind($fp); &#125; $timeEnd = gettimeofday(); @fclose($fp); $time = ($timeEnd[\"usec\"] - $timeStart[\"usec\"]) / 1000000 + $timeEnd[\"sec\"] - $timeStart[\"sec\"]; $time = round($time, 3) . \"秒\"; return ($time);&#125;function GetCoreInformation()&#123; $data = file('/proc/stat'); $cores = array(); foreach ($data as $line) &#123; if (preg_match('/^cpu[0-9]/', $line)) &#123; $info = explode(' ', $line); $cores[] = array('user' =&gt; $info[1], 'nice' =&gt; $info[2], 'sys' =&gt; $info[3], 'idle' =&gt; $info[4], 'iowait' =&gt; $info[5], 'irq' =&gt; $info[6], 'softirq' =&gt; $info[7]); &#125; &#125; return $cores;&#125;function GetCpuPercentages($stat1, $stat2)&#123; if (count($stat1) !== count($stat2)) &#123; return; &#125; $cpus = array(); for ($i = 0, $l = count($stat1); $i &lt; $l; $i++) &#123; $dif = array(); $dif['user'] = $stat2[$i]['user'] - $stat1[$i]['user']; $dif['nice'] = $stat2[$i]['nice'] - $stat1[$i]['nice']; $dif['sys'] = $stat2[$i]['sys'] - $stat1[$i]['sys']; $dif['idle'] = $stat2[$i]['idle'] - $stat1[$i]['idle']; $dif['iowait'] = $stat2[$i]['iowait'] - $stat1[$i]['iowait']; $dif['irq'] = $stat2[$i]['irq'] - $stat1[$i]['irq']; $dif['softirq'] = $stat2[$i]['softirq'] - $stat1[$i]['softirq']; $total = array_sum($dif); $cpu = array(); foreach ($dif as $x =&gt; $y) $cpu[$x] = round($y / $total * 100, 2); $cpus['cpu' . $i] = $cpu; &#125; return $cpus;&#125;$stat1 = GetCoreInformation();sleep(1);$stat2 = GetCoreInformation();$data = GetCpuPercentages($stat1, $stat2);$cpu_show = $data['cpu0']['user'] . \"%us, \" . $data['cpu0']['sys'] . \"%sy, \" . $data['cpu0']['nice'] . \"%ni, \" . $data['cpu0']['idle'] . \"%id, \" . $data['cpu0']['iowait'] . \"%wa, \" . $data['cpu0']['irq'] . \"%irq, \" . $data['cpu0']['softirq'] . \"%softirq\";function makeImageUrl($title, $data)&#123; $api = 'http://api.yahei.net/tz/cpu_show.php?id='; $url .= $data['user'] . ','; $url .= $data['nice'] . ','; $url .= $data['sys'] . ','; $url .= $data['idle'] . ','; $url .= $data['iowait']; $url .= '&amp;chdl=User|Nice|Sys|Idle|Iowait&amp;chdlp=b&amp;chl='; $url .= $data['user'] . '%25|'; $url .= $data['nice'] . '%25|'; $url .= $data['sys'] . '%25|'; $url .= $data['idle'] . '%25|'; $url .= $data['iowait'] . '%25'; $url .= '&amp;chtt=Core+' . $title; return $api . base64_encode($url);&#125;if ($_GET['act'] == \"cpu_percentage\") &#123; echo \"&lt;center&gt;&lt;b&gt;&lt;font face='Microsoft YaHei' color='#666666' size='3'&gt;图片加载慢，请耐心等待！&lt;/font&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;\"; foreach ($data as $k =&gt; $v) &#123; echo '&lt;img src=\"' . makeImageUrl($k, $v) . '\" style=\"width:360px;height:240px;border: #CCCCCC 1px solid;background: #FFFFFF;margin:5px;padding:5px;\" /&gt;'; &#125; echo \"&lt;/center&gt;\"; exit();&#125;// 根据不同系统取得CPU相关信息switch (PHP_OS) &#123; case \"Linux\": $sysReShow = (false !== ($sysInfo = sys_linux())) ? \"show\" : \"none\"; break; case \"FreeBSD\": $sysReShow = (false !== ($sysInfo = sys_freebsd())) ? \"show\" : \"none\"; break; /* case \"WINNT\": $sysReShow = (false !== ($sysInfo = sys_windows()))?\"show\":\"none\"; break; */ default: break;&#125;//linux系统探测function sys_linux()&#123; // CPU if (false === ($str = @file(\"/proc/cpuinfo\"))) return false; $str = implode(\"\", $str); @preg_match_all(\"/model\\s+name\\s&#123;0,&#125;\\:+\\s&#123;0,&#125;([\\w\\s\\)\\(\\@.-]+)([\\r\\n]+)/s\", $str, $model); @preg_match_all(\"/cpu\\s+MHz\\s&#123;0,&#125;\\:+\\s&#123;0,&#125;([\\d\\.]+)[\\r\\n]+/\", $str, $mhz); @preg_match_all(\"/cache\\s+size\\s&#123;0,&#125;\\:+\\s&#123;0,&#125;([\\d\\.]+\\s&#123;0,&#125;[A-Z]+[\\r\\n]+)/\", $str, $cache); @preg_match_all(\"/bogomips\\s&#123;0,&#125;\\:+\\s&#123;0,&#125;([\\d\\.]+)[\\r\\n]+/\", $str, $bogomips); if (false !== is_array($model[1])) &#123; $res['cpu']['num'] = sizeof($model[1]); /* for($i = 0; $i &lt; $res['cpu']['num']; $i++) &#123; $res['cpu']['model'][] = $model[1][$i].'&amp;nbsp;('.$mhz[1][$i].')'; $res['cpu']['mhz'][] = $mhz[1][$i]; $res['cpu']['cache'][] = $cache[1][$i]; $res['cpu']['bogomips'][] = $bogomips[1][$i]; &#125;*/ if ($res['cpu']['num'] == 1) $x1 = ''; else $x1 = ' ×' . $res['cpu']['num']; $mhz[1][0] = ' | 频率:' . $mhz[1][0]; $cache[1][0] = ' | 二级缓存:' . $cache[1][0]; $bogomips[1][0] = ' | Bogomips:' . $bogomips[1][0]; $res['cpu']['model'][] = $model[1][0] . $mhz[1][0] . $cache[1][0] . $bogomips[1][0] . $x1; if (false !== is_array($res['cpu']['model'])) $res['cpu']['model'] = implode(\"&lt;br /&gt;\", $res['cpu']['model']); if (false !== is_array($res['cpu']['mhz'])) $res['cpu']['mhz'] = implode(\"&lt;br /&gt;\", $res['cpu']['mhz']); if (false !== is_array($res['cpu']['cache'])) $res['cpu']['cache'] = implode(\"&lt;br /&gt;\", $res['cpu']['cache']); if (false !== is_array($res['cpu']['bogomips'])) $res['cpu']['bogomips'] = implode(\"&lt;br /&gt;\", $res['cpu']['bogomips']); &#125; // NETWORK // UPTIME if (false === ($str = @file(\"/proc/uptime\"))) return false; $str = explode(\" \", implode(\"\", $str)); $str = trim($str[0]); $min = $str / 60; $hours = $min / 60; $days = floor($hours / 24); $hours = floor($hours - ($days * 24)); $min = floor($min - ($days * 60 * 24) - ($hours * 60)); if ($days !== 0) $res['uptime'] = $days . \"天\"; if ($hours !== 0) $res['uptime'] .= $hours . \"小时\"; $res['uptime'] .= $min . \"分钟\"; // MEMORY if (false === ($str = @file(\"/proc/meminfo\"))) return false; $str = implode(\"\", $str); preg_match_all(\"/MemTotal\\s&#123;0,&#125;\\:+\\s&#123;0,&#125;([\\d\\.]+).+?MemFree\\s&#123;0,&#125;\\:+\\s&#123;0,&#125;([\\d\\.]+).+?Cached\\s&#123;0,&#125;\\:+\\s&#123;0,&#125;([\\d\\.]+).+?SwapTotal\\s&#123;0,&#125;\\:+\\s&#123;0,&#125;([\\d\\.]+).+?SwapFree\\s&#123;0,&#125;\\:+\\s&#123;0,&#125;([\\d\\.]+)/s\", $str, $buf); preg_match_all(\"/Buffers\\s&#123;0,&#125;\\:+\\s&#123;0,&#125;([\\d\\.]+)/s\", $str, $buffers); $res['memTotal'] = round($buf[1][0] / 1024, 2); $res['memFree'] = round($buf[2][0] / 1024, 2); $res['memBuffers'] = round($buffers[1][0] / 1024, 2); $res['memCached'] = round($buf[3][0] / 1024, 2); $res['memUsed'] = $res['memTotal'] - $res['memFree']; $res['memPercent'] = (floatval($res['memTotal']) != 0) ? round($res['memUsed'] / $res['memTotal'] * 100, 2) : 0; $res['memRealUsed'] = $res['memTotal'] - $res['memFree'] - $res['memCached'] - $res['memBuffers']; //真实内存使用 $res['memRealFree'] = $res['memTotal'] - $res['memRealUsed']; //真实空闲 $res['memRealPercent'] = (floatval($res['memTotal']) != 0) ? round($res['memRealUsed'] / $res['memTotal'] * 100, 2) : 0; //真实内存使用率 $res['memCachedPercent'] = (floatval($res['memCached']) != 0) ? round($res['memCached'] / $res['memTotal'] * 100, 2) : 0; //Cached内存使用率 $res['swapTotal'] = round($buf[4][0] / 1024, 2); $res['swapFree'] = round($buf[5][0] / 1024, 2); $res['swapUsed'] = round($res['swapTotal'] - $res['swapFree'], 2); $res['swapPercent'] = (floatval($res['swapTotal']) != 0) ? round($res['swapUsed'] / $res['swapTotal'] * 100, 2) : 0; // LOAD AVG if (false === ($str = @file(\"/proc/loadavg\"))) return false; $str = explode(\" \", implode(\"\", $str)); $str = array_chunk($str, 4); $res['loadAvg'] = implode(\" \", $str[0]); return $res;&#125;//FreeBSD系统探测function sys_freebsd()&#123; //CPU if (false === ($res['cpu']['num'] = get_key(\"hw.ncpu\"))) return false; $res['cpu']['model'] = get_key(\"hw.model\"); //LOAD AVG if (false === ($res['loadAvg'] = get_key(\"vm.loadavg\"))) return false; //UPTIME if (false === ($buf = get_key(\"kern.boottime\"))) return false; $buf = explode(' ', $buf); $sys_ticks = time() - intval($buf[3]); $min = $sys_ticks / 60; $hours = $min / 60; $days = floor($hours / 24); $hours = floor($hours - ($days * 24)); $min = floor($min - ($days * 60 * 24) - ($hours * 60)); if ($days !== 0) $res['uptime'] = $days . \"天\"; if ($hours !== 0) $res['uptime'] .= $hours . \"小时\"; $res['uptime'] .= $min . \"分钟\"; //MEMORY if (false === ($buf = get_key(\"hw.physmem\"))) return false; $res['memTotal'] = round($buf / 1024 / 1024, 2); $str = get_key(\"vm.vmtotal\"); preg_match_all(\"/\\nVirtual Memory[\\:\\s]*\\(Total[\\:\\s]*([\\d]+)K[\\,\\s]*Active[\\:\\s]*([\\d]+)K\\)\\n/i\", $str, $buff, PREG_SET_ORDER); preg_match_all(\"/\\nReal Memory[\\:\\s]*\\(Total[\\:\\s]*([\\d]+)K[\\,\\s]*Active[\\:\\s]*([\\d]+)K\\)\\n/i\", $str, $buf, PREG_SET_ORDER); $res['memRealUsed'] = round($buf[0][2] / 1024, 2); $res['memCached'] = round($buff[0][2] / 1024, 2); $res['memUsed'] = round($buf[0][1] / 1024, 2) + $res['memCached']; $res['memFree'] = $res['memTotal'] - $res['memUsed']; $res['memPercent'] = (floatval($res['memTotal']) != 0) ? round($res['memUsed'] / $res['memTotal'] * 100, 2) : 0; $res['memRealPercent'] = (floatval($res['memTotal']) != 0) ? round($res['memRealUsed'] / $res['memTotal'] * 100, 2) : 0; return $res;&#125;//取得参数值 FreeBSDfunction get_key($keyName)&#123; return do_command('sysctl', \"-n $keyName\");&#125;//确定执行文件位置 FreeBSDfunction find_command($commandName)&#123; $path = array('/bin', '/sbin', '/usr/bin', '/usr/sbin', '/usr/local/bin', '/usr/local/sbin'); foreach ($path as $p) &#123; if (@is_executable(\"$p/$commandName\")) return \"$p/$commandName\"; &#125; return false;&#125;//执行系统命令 FreeBSDfunction do_command($commandName, $args)&#123; $buffer = \"\"; if (false === ($command = find_command($commandName))) return false; if ($fp = @popen(\"$command $args\", 'r')) &#123; while (!@feof($fp)) &#123; $buffer .= @fgets($fp, 4096); &#125; return trim($buffer); &#125; return false;&#125;//windows系统探测function sys_windows()&#123; if (PHP_VERSION &gt;= 5) &#123; $objLocator = new COM(\"WbemScripting.SWbemLocator\"); $wmi = $objLocator-&gt;ConnectServer(); $prop = $wmi-&gt;get(\"Win32_PnPEntity\"); &#125; else &#123; return false; &#125; //CPU $cpuinfo = GetWMI($wmi, \"Win32_Processor\", array(\"Name\", \"L2CacheSize\", \"NumberOfCores\")); $res['cpu']['num'] = $cpuinfo[0]['NumberOfCores']; if (null == $res['cpu']['num']) &#123; $res['cpu']['num'] = 1; &#125;/*4for ($i=0;$i&lt;$res['cpu']['num'];$i++)4&#123;44$res['cpu']['model'] .= $cpuinfo[0]['Name'].\"&lt;br /&gt;\";44$res['cpu']['cache'] .= $cpuinfo[0]['L2CacheSize'].\"&lt;br /&gt;\"; &#125;*/ $cpuinfo[0]['L2CacheSize'] = ' (' . $cpuinfo[0]['L2CacheSize'] . ')'; if ($res['cpu']['num'] == 1) $x1 = ''; else $x1 = ' ×' . $res['cpu']['num']; $res['cpu']['model'] = $cpuinfo[0]['Name'] . $cpuinfo[0]['L2CacheSize'] . $x1; // SYSINFO $sysinfo = GetWMI($wmi, \"Win32_OperatingSystem\", array('LastBootUpTime', 'TotalVisibleMemorySize', 'FreePhysicalMemory', 'Caption', 'CSDVersion', 'SerialNumber', 'InstallDate')); $sysinfo[0]['Caption'] = iconv('GBK', 'UTF-8', $sysinfo[0]['Caption']); $sysinfo[0]['CSDVersion'] = iconv('GBK', 'UTF-8', $sysinfo[0]['CSDVersion']); $res['win_n'] = $sysinfo[0]['Caption'] . \" \" . $sysinfo[0]['CSDVersion'] . \" 序列号:&#123;$sysinfo[0]['SerialNumber']&#125; 于\" . date('Y年m月d日H:i:s', strtotime(substr($sysinfo[0]['InstallDate'], 0, 14))) . \"安装\"; //UPTIME $res['uptime'] = $sysinfo[0]['LastBootUpTime']; $sys_ticks = 3600 * 8 + time() - strtotime(substr($res['uptime'], 0, 14)); $min = $sys_ticks / 60; $hours = $min / 60; $days = floor($hours / 24); $hours = floor($hours - ($days * 24)); $min = floor($min - ($days * 60 * 24) - ($hours * 60)); if ($days !== 0) $res['uptime'] = $days . \"天\"; if ($hours !== 0) $res['uptime'] .= $hours . \"小时\"; $res['uptime'] .= $min . \"分钟\"; //MEMORY $res['memTotal'] = round($sysinfo[0]['TotalVisibleMemorySize'] / 1024, 2); $res['memFree'] = round($sysinfo[0]['FreePhysicalMemory'] / 1024, 2); $res['memUsed'] = $res['memTotal'] - $res['memFree']; //上面两行已经除以1024,这行不用再除了 $res['memPercent'] = round($res['memUsed'] / $res['memTotal'] * 100, 2); $swapinfo = GetWMI($wmi, \"Win32_PageFileUsage\", array('AllocatedBaseSize', 'CurrentUsage')); // LoadPercentage $loadinfo = GetWMI($wmi, \"Win32_Processor\", array(\"LoadPercentage\")); $res['loadAvg'] = $loadinfo[0]['LoadPercentage']; return $res;&#125;function GetWMI($wmi, $strClass, $strValue = array())&#123; $arrData = array(); $objWEBM = $wmi-&gt;Get($strClass); $arrProp = $objWEBM-&gt;Properties_; $arrWEBMCol = $objWEBM-&gt;Instances_(); foreach ($arrWEBMCol as $objItem) &#123; @reset($arrProp); $arrInstance = array(); foreach ($arrProp as $propItem) &#123; eval(\"\\$value = \\$objItem-&gt;\" . $propItem-&gt;Name . \";\"); if (empty($strValue)) &#123; $arrInstance[$propItem-&gt;Name] = trim($value); &#125; else &#123; if (in_array($propItem-&gt;Name, $strValue)) &#123; $arrInstance[$propItem-&gt;Name] = trim($value); &#125; &#125; &#125; $arrData[] = $arrInstance; &#125; return $arrData;&#125;//比例条function bar($percent)&#123; ?&gt; &lt;div class=\"bar\"&gt; &lt;div class=\"barli\" style=\"width:&lt;?php echo $percent ?&gt;%\"&gt;&amp;nbsp;&lt;/div&gt; &lt;/div&gt; &lt;?php&#125;$uptime = $sysInfo['uptime']; //在线时间$stime = date('Y-m-d H:i:s'); //系统当前时间//硬盘$dt = round(@disk_total_space(\".\") / (1024 * 1024 * 1024), 3); //总$df = round(@disk_free_space(\".\") / (1024 * 1024 * 1024), 3); //可用$du = $dt - $df; //已用$hdPercent = (floatval($dt) != 0) ? round($du / $dt * 100, 2) : 0;$load = $sysInfo['loadAvg']; //系统负载//判断内存如果小于1G，就显示M，否则显示G单位if ($sysInfo['memTotal'] &lt; 1024) &#123; $memTotal = $sysInfo['memTotal'] . \" M\"; $mt = $sysInfo['memTotal'] . \" M\"; $mu = $sysInfo['memUsed'] . \" M\"; $mf = $sysInfo['memFree'] . \" M\"; $mc = $sysInfo['memCached'] . \" M\"; //cache化内存 $mb = $sysInfo['memBuffers'] . \" M\"; //缓冲 $st = $sysInfo['swapTotal'] . \" M\"; $su = $sysInfo['swapUsed'] . \" M\"; $sf = $sysInfo['swapFree'] . \" M\"; $swapPercent = $sysInfo['swapPercent']; $memRealUsed = $sysInfo['memRealUsed'] . \" M\"; //真实内存使用 $memRealFree = $sysInfo['memRealFree'] . \" M\"; //真实内存空闲 $memRealPercent = $sysInfo['memRealPercent']; //真实内存使用比率 $memPercent = $sysInfo['memPercent']; //内存总使用率 $memCachedPercent = $sysInfo['memCachedPercent']; //cache内存使用率&#125; else &#123; $memTotal = round($sysInfo['memTotal'] / 1024, 3) . \" G\"; $mt = round($sysInfo['memTotal'] / 1024, 3) . \" G\"; $mu = round($sysInfo['memUsed'] / 1024, 3) . \" G\"; $mf = round($sysInfo['memFree'] / 1024, 3) . \" G\"; $mc = round($sysInfo['memCached'] / 1024, 3) . \" G\"; $mb = round($sysInfo['memBuffers'] / 1024, 3) . \" G\"; $st = round($sysInfo['swapTotal'] / 1024, 3) . \" G\"; $su = round($sysInfo['swapUsed'] / 1024, 3) . \" G\"; $sf = round($sysInfo['swapFree'] / 1024, 3) . \" G\"; $swapPercent = $sysInfo['swapPercent']; $memRealUsed = round($sysInfo['memRealUsed'] / 1024, 3) . \" G\"; //真实内存使用 $memRealFree = round($sysInfo['memRealFree'] / 1024, 3) . \" G\"; //真实内存空闲 $memRealPercent = $sysInfo['memRealPercent']; //真实内存使用比率 $memPercent = $sysInfo['memPercent']; //内存总使用率 $memCachedPercent = $sysInfo['memCachedPercent']; //cache内存使用率&#125;//网卡流量$strs = @file(\"/proc/net/dev\");for ($i = 2; $i &lt; count($strs); $i++) &#123; preg_match_all(\"/([^\\s]+):[\\s]&#123;0,&#125;(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)/\", $strs[$i], $info); $NetOutSpeed[$i] = $info[10][0]; $NetInputSpeed[$i] = $info[2][0]; $NetInput[$i] = formatsize($info[2][0]); $NetOut[$i] = formatsize($info[10][0]);&#125;//ajax调用实时刷新if ($_GET['act'] == \"rt\") &#123; $arr = array('useSpace' =&gt; \"$du\", 'freeSpace' =&gt; \"$df\", 'hdPercent' =&gt; \"$hdPercent\", 'barhdPercent' =&gt; \"$hdPercent%\", 'TotalMemory' =&gt; \"$mt\", 'UsedMemory' =&gt; \"$mu\", 'FreeMemory' =&gt; \"$mf\", 'CachedMemory' =&gt; \"$mc\", 'Buffers' =&gt; \"$mb\", 'TotalSwap' =&gt; \"$st\", 'swapUsed' =&gt; \"$su\", 'swapFree' =&gt; \"$sf\", 'loadAvg' =&gt; \"$load\", 'uptime' =&gt; \"$uptime\", 'freetime' =&gt; \"$freetime\", 'bjtime' =&gt; \"$bjtime\", 'stime' =&gt; \"$stime\", 'memRealPercent' =&gt; \"$memRealPercent\", 'memRealUsed' =&gt; \"$memRealUsed\", 'memRealFree' =&gt; \"$memRealFree\", 'memPercent' =&gt; \"$memPercent%\", 'memCachedPercent' =&gt; \"$memCachedPercent\", 'barmemCachedPercent' =&gt; \"$memCachedPercent%\", 'swapPercent' =&gt; \"$swapPercent\", 'barmemRealPercent' =&gt; \"$memRealPercent%\", 'barswapPercent' =&gt; \"$swapPercent%\", 'NetOut2' =&gt; \"$NetOut[2]\", 'NetOut3' =&gt; \"$NetOut[3]\", 'NetOut4' =&gt; \"$NetOut[4]\", 'NetOut5' =&gt; \"$NetOut[5]\", 'NetOut6' =&gt; \"$NetOut[6]\", 'NetOut7' =&gt; \"$NetOut[7]\", 'NetOut8' =&gt; \"$NetOut[8]\", 'NetOut9' =&gt; \"$NetOut[9]\", 'NetOut10' =&gt; \"$NetOut[10]\", 'NetInput2' =&gt; \"$NetInput[2]\", 'NetInput3' =&gt; \"$NetInput[3]\", 'NetInput4' =&gt; \"$NetInput[4]\", 'NetInput5' =&gt; \"$NetInput[5]\", 'NetInput6' =&gt; \"$NetInput[6]\", 'NetInput7' =&gt; \"$NetInput[7]\", 'NetInput8' =&gt; \"$NetInput[8]\", 'NetInput9' =&gt; \"$NetInput[9]\", 'NetInput10' =&gt; \"$NetInput[10]\", 'NetOutSpeed2' =&gt; \"$NetOutSpeed[2]\", 'NetOutSpeed3' =&gt; \"$NetOutSpeed[3]\", 'NetOutSpeed4' =&gt; \"$NetOutSpeed[4]\", 'NetOutSpeed5' =&gt; \"$NetOutSpeed[5]\", 'NetInputSpeed2' =&gt; \"$NetInputSpeed[2]\", 'NetInputSpeed3' =&gt; \"$NetInputSpeed[3]\", 'NetInputSpeed4' =&gt; \"$NetInputSpeed[4]\", 'NetInputSpeed5' =&gt; \"$NetInputSpeed[5]\"); $jarr = json_encode($arr); $_GET['callback'] = htmlspecialchars($_GET['callback']); echo $_GET['callback'], '(', $jarr, ')'; exit;&#125;?&gt;&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;&lt;head&gt; &lt;title&gt;&lt;?php echo $title . $version; ?&gt;&lt;/title&gt; &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=EmulateIE7\"/&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/&gt; &lt;!-- Powered by: Yahei.Net --&gt; &lt;style type=\"text/css\"&gt; &lt;!-- * &#123; font-family: \"Microsoft Yahei\", Tahoma, Arial; &#125; body &#123; text-align: center; margin: 0 auto; padding: 0; background-color: #fafafa; font-size: 12px; font-family: Tahoma, Arial &#125; h1 &#123; font-size: 26px; padding: 0; margin: 0; color: #333333; font-family: \"Lucida Sans Unicode\", \"Lucida Grande\", sans-serif; &#125; h1 small &#123; font-size: 11px; font-family: Tahoma; font-weight: bold; &#125; a &#123; color: #666; text-decoration: none; &#125; a.black &#123; color: #000000; text-decoration: none; &#125; table &#123; width: 100%; clear: both; padding: 0; margin: 0 0 10px; border-collapse: collapse; border-spacing: 0; box-shadow: 1px 1px 1px #CCC; -moz-box-shadow: 1px 1px 1px #CCC; -webkit-box-shadow: 1px 1px 1px #CCC; -ms-filter: \"progid:DXImageTransform.Microsoft.Shadow(Strength=2, Direction=135, Color='#CCCCCC')\"; &#125; th &#123; padding: 3px 6px; font-weight: bold; background: #dedede; color: #626262; border: 1px solid #cccccc; text-align: left; &#125; tr &#123; padding: 0; background: #FFFFFF; &#125; td &#123; padding: 3px 6px; border: 1px solid #CCCCCC; &#125; .w_logo &#123; height: 25px; text-align: center; color: #333; FONT-SIZE: 15px; width: 13%; &#125; .w_top &#123; height: 25px; text-align: center; width: 8.7%; &#125; .w_top:hover &#123; background: #dadada; &#125; .w_foot &#123; height: 25px; text-align: center; background: #dedede; &#125; input &#123; padding: 2px; background: #FFFFFF; border-top: 1px solid #666666; border-left: 1px solid #666666; border-right: 1px solid #CCCCCC; border-bottom: 1px solid #CCCCCC; font-size: 12px &#125; input.btn &#123; font-weight: bold; height: 20px; line-height: 20px; padding: 0 6px; color: #666666; background: #f2f2f2; border: 1px solid #999; font-size: 12px &#125; .bar &#123; border: 1px solid #999999; background: #FFFFFF; height: 5px; font-size: 2px; width: 89%; margin: 2px 0 5px 0; padding: 1px; overflow: hidden; &#125; .bar_1 &#123; border: 1px dotted #999999; background: #FFFFFF; height: 5px; font-size: 2px; width: 89%; margin: 2px 0 5px 0; padding: 1px; overflow: hidden; &#125; .barli_red &#123; background: #ff6600; height: 5px; margin: 0px; padding: 0; &#125; .barli_blue &#123; background: #0099FF; height: 5px; margin: 0px; padding: 0; &#125; .barli_green &#123; background: #36b52a; height: 5px; margin: 0px; padding: 0; &#125; .barli_black &#123; background: #333; height: 5px; margin: 0px; padding: 0; &#125; .barli_1 &#123; background: #999999; height: 5px; margin: 0px; padding: 0; &#125; .barli &#123; background: #36b52a; height: 5px; margin: 0px; padding: 0; &#125; #page &#123; width: 960px; padding: 0 auto; margin: 0 auto; text-align: left; &#125; #header &#123; position: relative; padding: 5px; &#125; .w_small &#123; font-family: Courier New; &#125; .w_number &#123; color: #f800fe; &#125; .sudu &#123; padding: 0; background: #5dafd1; &#125; .suduk &#123; margin: 0px; padding: 0; &#125; .resYes &#123; &#125; .resNo &#123; color: #FF0000; &#125; .word &#123; word-break: break-all; &#125; --&gt; &lt;/style&gt; &lt;script language=\"JavaScript\" type=\"text/javascript\" src=\"http://lib.sinaapp.com/js/jquery/1.7/jquery.min.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\"&gt; &lt;!-- $(document).ready(function () &#123; getJSONData(); &#125;); var OutSpeed2 =&lt;?php echo floor($NetOutSpeed[2]) ?&gt;; var OutSpeed3 =&lt;?php echo floor($NetOutSpeed[3]) ?&gt;; var OutSpeed4 =&lt;?php echo floor($NetOutSpeed[4]) ?&gt;; var OutSpeed5 =&lt;?php echo floor($NetOutSpeed[5]) ?&gt;; var InputSpeed2 =&lt;?php echo floor($NetInputSpeed[2]) ?&gt;; var InputSpeed3 =&lt;?php echo floor($NetInputSpeed[3]) ?&gt;; var InputSpeed4 =&lt;?php echo floor($NetInputSpeed[4]) ?&gt;; var InputSpeed5 =&lt;?php echo floor($NetInputSpeed[5]) ?&gt;; function getJSONData() &#123; setTimeout(\"getJSONData()\", 1000); $.getJSON('?act=rt&amp;callback=?', displayData); &#125; function ForDight(Dight, How) &#123; if (Dight &lt; 0) &#123; var Last = 0 + \"B/s\"; &#125; else if (Dight &lt; 1024) &#123; var Last = Math.round(Dight * Math.pow(10, How)) / Math.pow(10, How) + \"B/s\"; &#125; else if (Dight &lt; 1048576) &#123; Dight = Dight / 1024; var Last = Math.round(Dight * Math.pow(10, How)) / Math.pow(10, How) + \"K/s\"; &#125; else &#123; Dight = Dight / 1048576; var Last = Math.round(Dight * Math.pow(10, How)) / Math.pow(10, How) + \"M/s\"; &#125; return Last; &#125; function displayData(dataJSON) &#123; $(\"#useSpace\").html(dataJSON.useSpace); $(\"#freeSpace\").html(dataJSON.freeSpace); $(\"#hdPercent\").html(dataJSON.hdPercent); $(\"#barhdPercent\").width(dataJSON.barhdPercent); $(\"#TotalMemory\").html(dataJSON.TotalMemory); $(\"#UsedMemory\").html(dataJSON.UsedMemory); $(\"#FreeMemory\").html(dataJSON.FreeMemory); $(\"#CachedMemory\").html(dataJSON.CachedMemory); $(\"#Buffers\").html(dataJSON.Buffers); $(\"#TotalSwap\").html(dataJSON.TotalSwap); $(\"#swapUsed\").html(dataJSON.swapUsed); $(\"#swapFree\").html(dataJSON.swapFree); $(\"#swapPercent\").html(dataJSON.swapPercent); $(\"#loadAvg\").html(dataJSON.loadAvg); $(\"#uptime\").html(dataJSON.uptime); $(\"#freetime\").html(dataJSON.freetime); $(\"#stime\").html(dataJSON.stime); $(\"#bjtime\").html(dataJSON.bjtime); $(\"#memRealUsed\").html(dataJSON.memRealUsed); $(\"#memRealFree\").html(dataJSON.memRealFree); $(\"#memRealPercent\").html(dataJSON.memRealPercent); $(\"#memPercent\").html(dataJSON.memPercent); $(\"#barmemPercent\").width(dataJSON.memPercent); $(\"#barmemRealPercent\").width(dataJSON.barmemRealPercent); $(\"#memCachedPercent\").html(dataJSON.memCachedPercent); $(\"#barmemCachedPercent\").width(dataJSON.barmemCachedPercent); $(\"#barswapPercent\").width(dataJSON.barswapPercent); $(\"#NetOut2\").html(dataJSON.NetOut2); $(\"#NetOut3\").html(dataJSON.NetOut3); $(\"#NetOut4\").html(dataJSON.NetOut4); $(\"#NetOut5\").html(dataJSON.NetOut5); $(\"#NetOut6\").html(dataJSON.NetOut6); $(\"#NetOut7\").html(dataJSON.NetOut7); $(\"#NetOut8\").html(dataJSON.NetOut8); $(\"#NetOut9\").html(dataJSON.NetOut9); $(\"#NetOut10\").html(dataJSON.NetOut10); $(\"#NetInput2\").html(dataJSON.NetInput2); $(\"#NetInput3\").html(dataJSON.NetInput3); $(\"#NetInput4\").html(dataJSON.NetInput4); $(\"#NetInput5\").html(dataJSON.NetInput5); $(\"#NetInput6\").html(dataJSON.NetInput6); $(\"#NetInput7\").html(dataJSON.NetInput7); $(\"#NetInput8\").html(dataJSON.NetInput8); $(\"#NetInput9\").html(dataJSON.NetInput9); $(\"#NetInput10\").html(dataJSON.NetInput10); $(\"#NetOutSpeed2\").html(ForDight((dataJSON.NetOutSpeed2 - OutSpeed2), 3)); OutSpeed2 = dataJSON.NetOutSpeed2; $(\"#NetOutSpeed3\").html(ForDight((dataJSON.NetOutSpeed3 - OutSpeed3), 3)); OutSpeed3 = dataJSON.NetOutSpeed3; $(\"#NetOutSpeed4\").html(ForDight((dataJSON.NetOutSpeed4 - OutSpeed4), 3)); OutSpeed4 = dataJSON.NetOutSpeed4; $(\"#NetOutSpeed5\").html(ForDight((dataJSON.NetOutSpeed5 - OutSpeed5), 3)); OutSpeed5 = dataJSON.NetOutSpeed5; $(\"#NetInputSpeed2\").html(ForDight((dataJSON.NetInputSpeed2 - InputSpeed2), 3)); InputSpeed2 = dataJSON.NetInputSpeed2; $(\"#NetInputSpeed3\").html(ForDight((dataJSON.NetInputSpeed3 - InputSpeed3), 3)); InputSpeed3 = dataJSON.NetInputSpeed3; $(\"#NetInputSpeed4\").html(ForDight((dataJSON.NetInputSpeed4 - InputSpeed4), 3)); InputSpeed4 = dataJSON.NetInputSpeed4; $(\"#NetInputSpeed5\").html(ForDight((dataJSON.NetInputSpeed5 - InputSpeed5), 3)); InputSpeed5 = dataJSON.NetInputSpeed5; &#125; --&gt; &lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;a name=\"w_top\"&gt;&lt;/a&gt;&lt;div id=\"page\"&gt; &lt;table&gt; &lt;tr&gt; &lt;th class=\"w_logo\"&gt;雅黑PHP探针&lt;/th&gt; &lt;th class=\"w_top\"&gt;&lt;a href=\"#w_php\"&gt;PHP参数&lt;/a&gt;&lt;/th&gt; &lt;th class=\"w_top\"&gt;&lt;a href=\"#w_module\"&gt;组件支持&lt;/a&gt;&lt;/th&gt; &lt;th class=\"w_top\"&gt;&lt;a href=\"#w_module_other\"&gt;第三方组件&lt;/a&gt;&lt;/th&gt; &lt;th class=\"w_top\"&gt;&lt;a href=\"#w_db\"&gt;数据库支持&lt;/a&gt;&lt;/th&gt; &lt;th class=\"w_top\"&gt;&lt;a href=\"#w_performance\"&gt;性能检测&lt;/a&gt;&lt;/th&gt; &lt;th class=\"w_top\"&gt;&lt;a href=\"#w_networkspeed\"&gt;网速检测&lt;/a&gt;&lt;/th&gt; &lt;th class=\"w_top\"&gt;&lt;a href=\"#w_MySQL\"&gt;MySQL检测&lt;/a&gt;&lt;/th&gt; &lt;th class=\"w_top\"&gt;&lt;a href=\"#w_function\"&gt;函数检测&lt;/a&gt;&lt;/th&gt; &lt;th class=\"w_top\"&gt;&lt;a href=\"#w_mail\"&gt;邮件检测&lt;/a&gt;&lt;/th&gt; &lt;th class=\"w_top\"&gt;&lt;a href=\"http://www.yahei.net/tz/tz.zip\"&gt;探针下载&lt;/a&gt;&lt;/th&gt; &lt;/tr&gt; &lt;/table&gt; &lt;!--服务器相关参数--&gt; &lt;table&gt; &lt;tr&gt; &lt;th colspan=\"4\"&gt;服务器参数&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;服务器域名/IP地址&lt;/td&gt; &lt;td colspan=\"3\"&gt;&lt;?php echo @get_current_user(); ?&gt; - &lt;?php echo $_SERVER['SERVER_NAME']; ?&gt; (&lt;?php if ('/' == DIRECTORY_SEPARATOR) &#123; echo $_SERVER['SERVER_ADDR']; &#125; else &#123; echo @gethostbyname($_SERVER['SERVER_NAME']); &#125; ?&gt;)&amp;nbsp;&amp;nbsp;你的IP地址是：&lt;?php echo @$_SERVER['REMOTE_ADDR']; ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;服务器标识&lt;/td&gt; &lt;td colspan=\"3\"&gt;&lt;?php if ($sysInfo['win_n'] != '') &#123; echo $sysInfo['win_n']; &#125; else &#123; echo @php_uname(); &#125;; ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td width=\"13%\"&gt;服务器操作系统&lt;/td&gt; &lt;td width=\"37%\"&gt;&lt;?php $os = explode(\" \", php_uname()); echo $os[0]; ?&gt; &amp;nbsp;内核版本：&lt;?php if ('/' == DIRECTORY_SEPARATOR) &#123; echo $os[2]; &#125; else &#123; echo $os[1]; &#125; ?&gt;&lt;/td&gt; &lt;td width=\"13%\"&gt;服务器解译引擎&lt;/td&gt; &lt;td width=\"37%\"&gt;&lt;?php echo $_SERVER['SERVER_SOFTWARE']; ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;服务器语言&lt;/td&gt; &lt;td&gt;&lt;?php echo getenv(\"HTTP_ACCEPT_LANGUAGE\"); ?&gt;&lt;/td&gt; &lt;td&gt;服务器端口&lt;/td&gt; &lt;td&gt;&lt;?php echo $_SERVER['SERVER_PORT']; ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;服务器主机名&lt;/td&gt; &lt;td&gt;&lt;?php if ('/' == DIRECTORY_SEPARATOR) &#123; echo $os[1]; &#125; else &#123; echo $os[2]; &#125; ?&gt;&lt;/td&gt; &lt;td&gt;绝对路径&lt;/td&gt; &lt;td&gt;&lt;?php echo $_SERVER['DOCUMENT_ROOT'] ? str_replace('\\\\', '/', $_SERVER['DOCUMENT_ROOT']) : str_replace('\\\\', '/', dirname(__FILE__)); ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;管理员邮箱&lt;/td&gt; &lt;td&gt;&lt;?php echo $_SERVER['SERVER_ADMIN']; ?&gt;&lt;/td&gt; &lt;td&gt;探针路径&lt;/td&gt; &lt;td&gt;&lt;?php echo str_replace('\\\\', '/', __FILE__) ? str_replace('\\\\', '/', __FILE__) : $_SERVER['SCRIPT_FILENAME']; ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;? if (\"show\" == $sysReShow) &#123; ?&gt; &lt;table&gt; &lt;tr&gt; &lt;th colspan=\"6\"&gt;服务器实时数据&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td width=\"13%\"&gt;服务器当前时间&lt;/td&gt; &lt;td width=\"37%\"&gt;&lt;span id=\"stime\"&gt;&lt;?php echo $stime; ?&gt;&lt;/span&gt;&lt;/td&gt; &lt;td width=\"13%\"&gt;服务器已运行时间&lt;/td&gt; &lt;td width=\"37%\" colspan=\"3\"&gt;&lt;span id=\"uptime\"&gt;&lt;?php echo $uptime; ?&gt;&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td width=\"13%\"&gt;CPU型号 [&lt;?php echo $sysInfo['cpu']['num']; ?&gt;核]&lt;/td&gt; &lt;td width=\"87%\" colspan=\"5\"&gt;&lt;?php echo $sysInfo['cpu']['model']; ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;CPU使用状况&lt;/td&gt; &lt;td colspan=\"5\"&gt;&lt;?php if ('/' == DIRECTORY_SEPARATOR) &#123; echo $cpu_show . \" | &lt;a href='\" . $phpSelf . \"?act=cpu_percentage' target='_blank' class='static'&gt;查看图表&lt;/a&gt;\"; &#125; else &#123; echo \"暂时只支持Linux系统\"; &#125; ?&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;硬盘使用状况&lt;/td&gt; &lt;td colspan=\"5\"&gt; 总空间 &lt;?php echo $dt; ?&gt;&amp;nbsp;G， 已用 &lt;font color='#333333'&gt;&lt;span id=\"useSpace\"&gt;&lt;?php echo $du; ?&gt;&lt;/span&gt;&lt;/font&gt;&amp;nbsp;G， 空闲 &lt;font color='#333333'&gt;&lt;span id=\"freeSpace\"&gt;&lt;?php echo $df; ?&gt;&lt;/span&gt;&lt;/font&gt;&amp;nbsp;G， 使用率 &lt;span id=\"hdPercent\"&gt;&lt;?php echo $hdPercent; ?&gt;&lt;/span&gt;% &lt;div class=\"bar\"&gt; &lt;div id=\"barhdPercent\" class=\"barli_black\" style=\"width:&lt;?php echo $hdPercent; ?&gt;%\"&gt;&amp;nbsp;&lt;/div&gt; &lt;/div&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;内存使用状况&lt;/td&gt; &lt;td colspan=\"5\"&gt; &lt;?php $tmp = array( 'memTotal', 'memUsed', 'memFree', 'memPercent', 'memCached', 'memRealPercent', 'swapTotal', 'swapUsed', 'swapFree', 'swapPercent' ); foreach ($tmp AS $v) &#123; $sysInfo[$v] = $sysInfo[$v] ? $sysInfo[$v] : 0; &#125; ?&gt; 物理内存：共 &lt;font color='#CC0000'&gt;&lt;?php echo $memTotal; ?&gt; &lt;/font&gt; , 已用 &lt;font color='#CC0000'&gt;&lt;span id=\"UsedMemory\"&gt;&lt;?php echo $mu; ?&gt;&lt;/span&gt;&lt;/font&gt; , 空闲 &lt;font color='#CC0000'&gt;&lt;span id=\"FreeMemory\"&gt;&lt;?php echo $mf; ?&gt;&lt;/span&gt;&lt;/font&gt; , 使用率 &lt;span id=\"memPercent\"&gt;&lt;?php echo $memPercent; ?&gt;&lt;/span&gt; &lt;div class=\"bar\"&gt; &lt;div id=\"barmemPercent\" class=\"barli_green\" style=\"width:&lt;?php echo $memPercent ?&gt;%\"&gt;&amp;nbsp; &lt;/div&gt; &lt;/div&gt; &lt;?php //判断如果cache为0，不显示 if ($sysInfo['memCached'] &gt; 0) &#123; ?&gt; Cache化内存为 &lt;span id=\"CachedMemory\"&gt;&lt;?php echo $mc; ?&gt;&lt;/span&gt; , 使用率 &lt;span id=\"memCachedPercent\"&gt;&lt;?php echo $memCachedPercent; ?&gt;&lt;/span&gt; % | Buffers缓冲为 &lt;span id=\"Buffers\"&gt;&lt;?php echo $mb; ?&gt;&lt;/span&gt; &lt;div class=\"bar\"&gt; &lt;div id=\"barmemCachedPercent\" class=\"barli_blue\" style=\"width:&lt;?php echo $memCachedPercent ?&gt;%\"&gt;&amp;nbsp; &lt;/div&gt; &lt;/div&gt; 真实内存使用 &lt;span id=\"memRealUsed\"&gt;&lt;?php echo $memRealUsed; ?&gt;&lt;/span&gt; , 真实内存空闲 &lt;span id=\"memRealFree\"&gt;&lt;?php echo $memRealFree; ?&gt;&lt;/span&gt; , 使用率 &lt;span id=\"memRealPercent\"&gt;&lt;?php echo $memRealPercent; ?&gt;&lt;/span&gt; % &lt;div class=\"bar_1\"&gt; &lt;div id=\"barmemRealPercent\" class=\"barli_1\" style=\"width:&lt;?php echo $memRealPercent ?&gt;%\"&gt; &amp;nbsp; &lt;/div&gt; &lt;/div&gt; &lt;?php &#125; //判断如果SWAP区为0，不显示 if ($sysInfo['swapTotal'] &gt; 0) &#123; ?&gt; SWAP区：共 &lt;?php echo $st; ?&gt; , 已使用 &lt;span id=\"swapUsed\"&gt;&lt;?php echo $su; ?&gt;&lt;/span&gt; , 空闲 &lt;span id=\"swapFree\"&gt;&lt;?php echo $sf; ?&gt;&lt;/span&gt; , 使用率 &lt;span id=\"swapPercent\"&gt;&lt;?php echo $swapPercent; ?&gt;&lt;/span&gt; % &lt;div class=\"bar\"&gt; &lt;div id=\"barswapPercent\" class=\"barli_red\" style=\"width:&lt;?php echo $swapPercent ?&gt;%\"&gt; &amp;nbsp; &lt;/div&gt; &lt;/div&gt; &lt;?php &#125; ?&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;系统平均负载&lt;/td&gt; &lt;td colspan=\"5\" class=\"w_number\"&gt;&lt;span id=\"loadAvg\"&gt;&lt;?php echo $load; ?&gt;&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;? &#125; ?&gt; &lt;?php if (false !== ($strs = @file(\"/proc/net/dev\"))) : ?&gt; &lt;table&gt; &lt;tr&gt; &lt;th colspan=\"5\"&gt;网络使用状况&lt;/th&gt; &lt;/tr&gt; &lt;?php for ($i = 2; $i &lt; count($strs); $i++) : ?&gt; &lt;?php preg_match_all(\"/([^\\s]+):[\\s]&#123;0,&#125;(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)/\", $strs[$i], $info); ?&gt; &lt;tr&gt; &lt;td width=\"13%\"&gt;&lt;?php echo $info[1][0] ?&gt; :&lt;/td&gt; &lt;td width=\"29%\"&gt;入网: &lt;font color='#CC0000'&gt;&lt;span id=\"NetInput&lt;?php echo $i ?&gt;\"&gt;&lt;?php echo $NetInput[$i] ?&gt;&lt;/span&gt;&lt;/font&gt;&lt;/td&gt; &lt;td width=\"14%\"&gt;实时: &lt;font color='#CC0000'&gt;&lt;span id=\"NetInputSpeed&lt;?php echo $i ?&gt;\"&gt;0B/s&lt;/span&gt;&lt;/font&gt;&lt;/td&gt; &lt;td width=\"29%\"&gt;出网: &lt;font color='#CC0000'&gt;&lt;span id=\"NetOut&lt;?php echo $i ?&gt;\"&gt;&lt;?php echo $NetOut[$i] ?&gt;&lt;/span&gt;&lt;/font&gt;&lt;/td&gt; &lt;td width=\"14%\"&gt;实时: &lt;font color='#CC0000'&gt;&lt;span id=\"NetOutSpeed&lt;?php echo $i ?&gt;\"&gt;0B/s&lt;/span&gt;&lt;/font&gt; &lt;/td&gt; &lt;/tr&gt; &lt;?php endfor; ?&gt; &lt;/table&gt; &lt;?php endif; ?&gt; &lt;table width=\"100%\" cellpadding=\"3\" cellspacing=\"0\" align=\"center\"&gt; &lt;tr&gt; &lt;th colspan=\"4\"&gt;PHP已编译模块检测&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td colspan=\"4\"&gt;&lt;span class=\"w_small\"&gt;&lt;?php$able = get_loaded_extensions();foreach ($able as $key =&gt; $value) &#123; if ($key != 0 &amp;&amp; $key % 13 == 0) &#123; echo '&lt;br /&gt;'; &#125; echo \"$value&amp;nbsp;&amp;nbsp;\";&#125;?&gt;&lt;/span&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;a name=\"w_php\"&gt;&lt;/a&gt; &lt;table&gt; &lt;tr&gt; &lt;th colspan=\"4\"&gt;PHP相关参数&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td width=\"32%\"&gt;PHP信息（phpinfo）：&lt;/td&gt; &lt;td width=\"18%\"&gt; &lt;?php $phpSelf = $_SERVER['PHP_SELF'] ? $_SERVER['PHP_SELF'] : $_SERVER[SCRIPT_NAME]; $disFuns = get_cfg_var(\"disable_functions\"); ?&gt; &lt;?php echo (false !== preg_match(\"phpinfo\", $disFuns)) ? '&lt;font color=\"red\"&gt;×&lt;/font&gt;' : \"&lt;a href='$phpSelf?act=phpinfo' target='_blank'&gt;PHPINFO&lt;/a&gt;\"; ?&gt; &lt;/td&gt; &lt;td width=\"32%\"&gt;PHP版本（php_version）：&lt;/td&gt; &lt;td width=\"18%\"&gt;&lt;?php echo PHP_VERSION; ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;PHP运行方式：&lt;/td&gt; &lt;td&gt;&lt;?php echo strtoupper(php_sapi_name()); ?&gt;&lt;/td&gt; &lt;td&gt;脚本占用最大内存（memory_limit）：&lt;/td&gt; &lt;td&gt;&lt;?php echo show(\"memory_limit\"); ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;PHP安全模式（safe_mode）：&lt;/td&gt; &lt;td&gt;&lt;?php echo show(\"safe_mode\"); ?&gt;&lt;/td&gt; &lt;td&gt;POST方法提交最大限制（post_max_size）：&lt;/td&gt; &lt;td&gt;&lt;?php echo show(\"post_max_size\"); ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;上传文件最大限制（upload_max_filesize）：&lt;/td&gt; &lt;td&gt;&lt;?php echo show(\"upload_max_filesize\"); ?&gt;&lt;/td&gt; &lt;td&gt;浮点型数据显示的有效位数（precision）：&lt;/td&gt; &lt;td&gt;&lt;?php echo show(\"precision\"); ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;脚本超时时间（max_execution_time）：&lt;/td&gt; &lt;td&gt;&lt;?php echo show(\"max_execution_time\"); ?&gt;秒&lt;/td&gt; &lt;td&gt;socket超时时间（default_socket_timeout）：&lt;/td&gt; &lt;td&gt;&lt;?php echo show(\"default_socket_timeout\"); ?&gt;秒&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;PHP页面根目录（doc_root）：&lt;/td&gt; &lt;td&gt;&lt;?php echo show(\"doc_root\"); ?&gt;&lt;/td&gt; &lt;td&gt;用户根目录（user_dir）：&lt;/td&gt; &lt;td&gt;&lt;?php echo show(\"user_dir\"); ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;dl()函数（enable_dl）：&lt;/td&gt; &lt;td&gt;&lt;?php echo show(\"enable_dl\"); ?&gt;&lt;/td&gt; &lt;td&gt;指定包含文件目录（include_path）：&lt;/td&gt; &lt;td&gt;&lt;?php echo show(\"include_path\"); ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;显示错误信息（display_errors）：&lt;/td&gt; &lt;td&gt;&lt;?php echo show(\"display_errors\"); ?&gt;&lt;/td&gt; &lt;td&gt;自定义全局变量（register_globals）：&lt;/td&gt; &lt;td&gt;&lt;?php echo show(\"register_globals\"); ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;数据反斜杠转义（magic_quotes_gpc）：&lt;/td&gt; &lt;td&gt;&lt;?php echo show(\"magic_quotes_gpc\"); ?&gt;&lt;/td&gt; &lt;td&gt;\"&amp;lt;?...?&amp;gt;\"短标签（short_open_tag）：&lt;/td&gt; &lt;td&gt;&lt;?php echo show(\"short_open_tag\"); ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;\"&amp;lt;% %&amp;gt;\"ASP风格标记（asp_tags）：&lt;/td&gt; &lt;td&gt;&lt;?php echo show(\"asp_tags\"); ?&gt;&lt;/td&gt; &lt;td&gt;忽略重复错误信息（ignore_repeated_errors）：&lt;/td&gt; &lt;td&gt;&lt;?php echo show(\"ignore_repeated_errors\"); ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;忽略重复的错误源（ignore_repeated_source）：&lt;/td&gt; &lt;td&gt;&lt;?php echo show(\"ignore_repeated_source\"); ?&gt;&lt;/td&gt; &lt;td&gt;报告内存泄漏（report_memleaks）：&lt;/td&gt; &lt;td&gt;&lt;?php echo show(\"report_memleaks\"); ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;自动字符串转义（magic_quotes_gpc）：&lt;/td&gt; &lt;td&gt;&lt;?php echo show(\"magic_quotes_gpc\"); ?&gt;&lt;/td&gt; &lt;td&gt;外部字符串自动转义（magic_quotes_runtime）：&lt;/td&gt; &lt;td&gt;&lt;?php echo show(\"magic_quotes_runtime\"); ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;打开远程文件（allow_url_fopen）：&lt;/td&gt; &lt;td&gt;&lt;?php echo show(\"allow_url_fopen\"); ?&gt;&lt;/td&gt; &lt;td&gt;声明argv和argc变量（register_argc_argv）：&lt;/td&gt; &lt;td&gt;&lt;?php echo show(\"register_argc_argv\"); ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Cookie 支持：&lt;/td&gt; &lt;td&gt;&lt;?php echo isset($_COOKIE) ? '&lt;font color=\"green\"&gt;√&lt;/font&gt;' : '&lt;font color=\"red\"&gt;×&lt;/font&gt;'; ?&gt;&lt;/td&gt; &lt;td&gt;拼写检查（ASpell Library）：&lt;/td&gt; &lt;td&gt;&lt;?php echo isfun(\"aspell_check_raw\"); ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;高精度数学运算（BCMath）：&lt;/td&gt; &lt;td&gt;&lt;?php echo isfun(\"bcadd\"); ?&gt;&lt;/td&gt; &lt;td&gt;PREL相容语法（PCRE）：&lt;/td&gt; &lt;td&gt;&lt;?php echo isfun(\"preg_match\"); ?&gt;&lt;/td&gt; &lt;tr&gt; &lt;td&gt;PDF文档支持：&lt;/td&gt; &lt;td&gt;&lt;?php echo isfun(\"pdf_close\"); ?&gt;&lt;/td&gt; &lt;td&gt;SNMP网络管理协议：&lt;/td&gt; &lt;td&gt;&lt;?php echo isfun(\"snmpget\"); ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;VMailMgr邮件处理：&lt;/td&gt; &lt;td&gt;&lt;?php echo isfun(\"vm_adduser\"); ?&gt;&lt;/td&gt; &lt;td&gt;Curl支持：&lt;/td&gt; &lt;td&gt;&lt;?php echo isfun(\"curl_init\"); ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;SMTP支持：&lt;/td&gt; &lt;td&gt;&lt;?php echo get_cfg_var(\"SMTP\") ? '&lt;font color=\"green\"&gt;√&lt;/font&gt;' : '&lt;font color=\"red\"&gt;×&lt;/font&gt;'; ?&gt;&lt;/td&gt; &lt;td&gt;SMTP地址：&lt;/td&gt; &lt;td&gt;&lt;?php echo get_cfg_var(\"SMTP\") ? get_cfg_var(\"SMTP\") : '&lt;font color=\"red\"&gt;×&lt;/font&gt;'; ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;默认支持函数（enable_functions）：&lt;/td&gt; &lt;td colspan=\"3\"&gt;&lt;a href='&lt;?php echo $phpSelf; ?&gt;?act=Function' target='_blank' class='static'&gt;请点这里查看详细！&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;被禁用的函数（disable_functions）：&lt;/td&gt; &lt;td colspan=\"3\" class=\"word\"&gt; &lt;?php $disFuns = get_cfg_var(\"disable_functions\"); if (empty($disFuns)) &#123; echo '&lt;font color=red&gt;×&lt;/font&gt;'; &#125; else &#123; //echo $disFuns; $disFuns_array = explode(',', $disFuns); foreach ($disFuns_array as $key =&gt; $value) &#123; if ($key != 0 &amp;&amp; $key % 5 == 0) &#123; echo '&lt;br /&gt;'; &#125; echo \"$value&amp;nbsp;&amp;nbsp;\"; &#125; &#125; ?&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;a name=\"w_module\"&gt;&lt;/a&gt; &lt;!--组件信息--&gt; &lt;table&gt; &lt;tr&gt; &lt;th colspan=\"4\"&gt;组件支持&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td width=\"32%\"&gt;FTP支持：&lt;/td&gt; &lt;td width=\"18%\"&gt;&lt;?php echo isfun(\"ftp_login\"); ?&gt;&lt;/td&gt; &lt;td width=\"32%\"&gt;XML解析支持：&lt;/td&gt; &lt;td width=\"18%\"&gt;&lt;?php echo isfun(\"xml_set_object\"); ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Session支持：&lt;/td&gt; &lt;td&gt;&lt;?php echo isfun(\"session_start\"); ?&gt;&lt;/td&gt; &lt;td&gt;Socket支持：&lt;/td&gt; &lt;td&gt;&lt;?php echo isfun(\"socket_accept\"); ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Calendar支持&lt;/td&gt; &lt;td&gt;&lt;?php echo isfun('cal_days_in_month'); ?&gt; &lt;/td&gt; &lt;td&gt;允许URL打开文件：&lt;/td&gt; &lt;td&gt;&lt;?php echo show(\"allow_url_fopen\"); ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;GD库支持：&lt;/td&gt; &lt;td&gt; &lt;?php if (function_exists(gd_info)) &#123; $gd_info = @gd_info(); echo $gd_info[\"GD Version\"]; &#125; else &#123; echo '&lt;font color=\"red\"&gt;×&lt;/font&gt;'; &#125; ?&gt;&lt;/td&gt; &lt;td&gt;压缩文件支持(Zlib)：&lt;/td&gt; &lt;td&gt;&lt;?php echo isfun(\"gzclose\"); ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;IMAP电子邮件系统函数库：&lt;/td&gt; &lt;td&gt;&lt;?php echo isfun(\"imap_close\"); ?&gt;&lt;/td&gt; &lt;td&gt;历法运算函数库：&lt;/td&gt; &lt;td&gt;&lt;?php echo isfun(\"JDToGregorian\"); ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;正则表达式函数库：&lt;/td&gt; &lt;td&gt;&lt;?php echo isfun(\"preg_match\"); ?&gt;&lt;/td&gt; &lt;td&gt;WDDX支持：&lt;/td&gt; &lt;td&gt;&lt;?php echo isfun(\"wddx_add_vars\"); ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Iconv编码转换：&lt;/td&gt; &lt;td&gt;&lt;?php echo isfun(\"iconv\"); ?&gt;&lt;/td&gt; &lt;td&gt;mbstring：&lt;/td&gt; &lt;td&gt;&lt;?php echo isfun(\"mb_preg_match\"); ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;高精度数学运算：&lt;/td&gt; &lt;td&gt;&lt;?php echo isfun(\"bcadd\"); ?&gt;&lt;/td&gt; &lt;td&gt;LDAP目录协议：&lt;/td&gt; &lt;td&gt;&lt;?php echo isfun(\"ldap_close\"); ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;MCrypt加密处理：&lt;/td&gt; &lt;td&gt;&lt;?php echo isfun(\"mcrypt_cbc\"); ?&gt;&lt;/td&gt; &lt;td&gt;哈稀计算：&lt;/td&gt; &lt;td&gt;&lt;?php echo isfun(\"mhash_count\"); ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;a name=\"w_module_other\"&gt;&lt;/a&gt; &lt;!--第三方组件信息--&gt; &lt;table&gt; &lt;tr&gt; &lt;th colspan=\"4\"&gt;第三方组件&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td width=\"32%\"&gt;Zend版本&lt;/td&gt; &lt;td width=\"18%\"&gt;&lt;?php $zend_version = zend_version(); if (empty($zend_version)) &#123; echo '&lt;font color=red&gt;×&lt;/font&gt;'; &#125; else &#123; echo $zend_version; &#125; ?&gt;&lt;/td&gt; &lt;td width=\"32%\"&gt; &lt;?php $PHP_VERSION = PHP_VERSION; $PHP_VERSION = substr($PHP_VERSION, 2, 1); if ($PHP_VERSION &gt; 2) &#123; echo \"ZendGuardLoader[启用]\"; &#125; else &#123; echo \"Zend Optimizer\"; &#125; ?&gt; &lt;/td&gt; &lt;td width=\"18%\"&gt;&lt;?php if ($PHP_VERSION &gt; 2) &#123; echo (get_cfg_var(\"zend_loader.enable\")) ? '&lt;font color=green&gt;√&lt;/font&gt;' : '&lt;font color=red&gt;×&lt;/font&gt;'; &#125; else &#123; if (function_exists('zend_optimizer_version')) &#123; echo zend_optimizer_version(); &#125; else &#123; echo (get_cfg_var(\"zend_optimizer.optimization_level\") || get_cfg_var(\"zend_extension_manager.optimizer_ts\") || get_cfg_var(\"zend.ze1_compatibility_mode\") || get_cfg_var(\"zend_extension_ts\")) ? '&lt;font color=green&gt;√&lt;/font&gt;' : '&lt;font color=red&gt;×&lt;/font&gt;'; &#125; &#125; ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;eAccelerator&lt;/td&gt; &lt;td&gt;&lt;?php if ((phpversion('eAccelerator')) != '') &#123; echo phpversion('eAccelerator'); &#125; else &#123; echo \"&lt;font color=red&gt;×&lt;/font&gt;\"; &#125; ?&gt;&lt;/td&gt; &lt;td&gt;ioncube&lt;/td&gt; &lt;td&gt;&lt;?php if (extension_loaded('ionCube Loader')) &#123; $ys = ioncube_loader_iversion(); $gm = \".\" . (int)substr($ys, 3, 2); echo ionCube_Loader_version() . $gm; &#125; else &#123; echo \"&lt;font color=red&gt;×&lt;/font&gt;\"; &#125; ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;XCache&lt;/td&gt; &lt;td&gt;&lt;?php if ((phpversion('XCache')) != '') &#123; echo phpversion('XCache'); &#125; else &#123; echo \"&lt;font color=red&gt;×&lt;/font&gt;\"; &#125; ?&gt;&lt;/td&gt; &lt;td&gt;APC&lt;/td&gt; &lt;td&gt;&lt;?php if ((phpversion('APC')) != '') &#123; echo phpversion('APC'); &#125; else &#123; echo \"&lt;font color=red&gt;×&lt;/font&gt;\"; &#125; ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;a name=\"w_db\"&gt;&lt;/a&gt; &lt;!--数据库支持--&gt; &lt;table&gt; &lt;tr&gt; &lt;th colspan=\"4\"&gt;数据库支持&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td width=\"32%\"&gt;MySQL 数据库：&lt;/td&gt; &lt;td width=\"18%\"&gt;&lt;?php echo isfun(\"mysql_close\"); ?&gt; &lt;?php if (function_exists(\"mysql_get_server_info\")) &#123; $s = @mysql_get_server_info(); $s = $s ? '&amp;nbsp; mysql_server 版本：' . $s : ''; $c = '&amp;nbsp; mysql_client 版本：' . @mysql_get_client_info(); echo $s; &#125; ?&gt; &lt;/td&gt; &lt;td width=\"32%\"&gt;ODBC 数据库：&lt;/td&gt; &lt;td width=\"18%\"&gt;&lt;?php echo isfun(\"odbc_close\"); ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Oracle 数据库：&lt;/td&gt; &lt;td&gt;&lt;?php echo isfun(\"ora_close\"); ?&gt;&lt;/td&gt; &lt;td&gt;SQL Server 数据库：&lt;/td&gt; &lt;td&gt;&lt;?php echo isfun(\"mssql_close\"); ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;dBASE 数据库：&lt;/td&gt; &lt;td&gt;&lt;?php echo isfun(\"dbase_close\"); ?&gt;&lt;/td&gt; &lt;td&gt;mSQL 数据库：&lt;/td&gt; &lt;td&gt;&lt;?php echo isfun(\"msql_close\"); ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;SQLite 数据库：&lt;/td&gt; &lt;td&gt;&lt;?php if (extension_loaded('sqlite3')) &#123; $sqliteVer = SQLite3::version(); echo '&lt;font color=green&gt;√&lt;/font&gt; '; echo \"SQLite3 Ver \"; echo $sqliteVer[versionString]; &#125; else &#123; echo isfun(\"sqlite_close\"); if (isfun(\"sqlite_close\") == '&lt;font color=\"green\"&gt;√&lt;/font&gt;') &#123; echo \"&amp;nbsp; 版本： \" . @sqlite_libversion(); &#125; &#125; ?&gt;&lt;/td&gt; &lt;td&gt;Hyperwave 数据库：&lt;/td&gt; &lt;td&gt;&lt;?php echo isfun(\"hw_close\"); ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Postgre SQL 数据库：&lt;/td&gt; &lt;td&gt;&lt;?php echo isfun(\"pg_close\"); ?&gt;&lt;/td&gt; &lt;td&gt;Informix 数据库：&lt;/td&gt; &lt;td&gt;&lt;?php echo isfun(\"ifx_close\"); ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;DBA 数据库：&lt;/td&gt; &lt;td&gt;&lt;?php echo isfun(\"dba_close\"); ?&gt;&lt;/td&gt; &lt;td&gt;DBM 数据库：&lt;/td&gt; &lt;td&gt;&lt;?php echo isfun(\"dbmclose\"); ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;FilePro 数据库：&lt;/td&gt; &lt;td&gt;&lt;?php echo isfun(\"filepro_fieldcount\"); ?&gt;&lt;/td&gt; &lt;td&gt;SyBase 数据库：&lt;/td&gt; &lt;td&gt;&lt;?php echo isfun(\"sybase_close\"); ?&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;a name=\"w_performance\"&gt;&lt;/a&gt;&lt;a name=\"bottom\"&gt;&lt;/a&gt; &lt;form action=\"&lt;?php echo $_SERVER['PHP_SELF'] . \"#bottom\"; ?&gt;\" method=\"post\"&gt; &lt;!--服务器性能检测--&gt; &lt;table&gt; &lt;tr&gt; &lt;th colspan=\"5\"&gt;服务器性能检测&lt;/th&gt; &lt;/tr&gt; &lt;tr align=\"center\"&gt; &lt;td width=\"19%\"&gt;参照对象&lt;/td&gt; &lt;td width=\"17%\"&gt;整数运算能力检测&lt;br/&gt;(1+1运算300万次)&lt;/td&gt; &lt;td width=\"17%\"&gt;浮点运算能力检测&lt;br/&gt;(圆周率开平方300万次)&lt;/td&gt; &lt;td width=\"17%\"&gt;数据I/O能力检测&lt;br/&gt;(读取10K文件1万次)&lt;/td&gt; &lt;td width=\"30%\"&gt;CPU信息&lt;/td&gt; &lt;/tr&gt; &lt;tr align=\"center\"&gt; &lt;td align=\"left\"&gt;美国 LinodeVPS&lt;/td&gt; &lt;td&gt;0.357秒&lt;/td&gt; &lt;td&gt;0.802秒&lt;/td&gt; &lt;td&gt;0.023秒&lt;/td&gt; &lt;td align=\"left\"&gt;4 x Xeon L5520 @ 2.27GHz&lt;/td&gt; &lt;/tr&gt; &lt;tr align=\"center\"&gt; &lt;td align=\"left\"&gt;美国 PhotonVPS.com&lt;/td&gt; &lt;td&gt;0.431秒&lt;/td&gt; &lt;td&gt;1.024秒&lt;/td&gt; &lt;td&gt;0.034秒&lt;/td&gt; &lt;td align=\"left\"&gt;8 x Xeon E5520 @ 2.27GHz&lt;/td&gt; &lt;/tr&gt; &lt;tr align=\"center\"&gt; &lt;td align=\"left\"&gt;德国 SpaceRich.com&lt;/td&gt; &lt;td&gt;0.421秒&lt;/td&gt; &lt;td&gt;1.003秒&lt;/td&gt; &lt;td&gt;0.038秒&lt;/td&gt; &lt;td align=\"left\"&gt;4 x Core i7 920 @ 2.67GHz&lt;/td&gt; &lt;/tr&gt; &lt;tr align=\"center\"&gt; &lt;td align=\"left\"&gt;美国 RiZie.com&lt;/td&gt; &lt;td&gt;0.521秒&lt;/td&gt; &lt;td&gt;1.559秒&lt;/td&gt; &lt;td&gt;0.054秒&lt;/td&gt; &lt;td align=\"left\"&gt;2 x Pentium4 3.00GHz&lt;/td&gt; &lt;/tr&gt; &lt;tr align=\"center\"&gt; &lt;td align=\"left\"&gt;埃及 CitynetHost.com&lt;/a&gt;&lt;/td&gt; &lt;td&gt;0.343秒&lt;/td&gt; &lt;td&gt;0.761秒&lt;/td&gt; &lt;td&gt;0.023秒&lt;/td&gt; &lt;td align=\"left\"&gt;2 x Core2Duo E4600 @ 2.40GHz&lt;/td&gt; &lt;/tr&gt; &lt;tr align=\"center\"&gt; &lt;td align=\"left\"&gt;美国 IXwebhosting.com&lt;/td&gt; &lt;td&gt;0.535秒&lt;/td&gt; &lt;td&gt;1.607秒&lt;/td&gt; &lt;td&gt;0.058秒&lt;/td&gt; &lt;td align=\"left\"&gt;4 x Xeon E5530 @ 2.40GHz&lt;/td&gt; &lt;/tr&gt; &lt;tr align=\"center\"&gt; &lt;td&gt;本台服务器&lt;/td&gt; &lt;td&gt;&lt;?php echo $valInt; ?&gt;&lt;br/&gt;&lt;input class=\"btn\" name=\"act\" type=\"submit\" value=\"整型测试\"/&gt;&lt;/td&gt; &lt;td&gt;&lt;?php echo $valFloat; ?&gt;&lt;br/&gt;&lt;input class=\"btn\" name=\"act\" type=\"submit\" value=\"浮点测试\"/&gt;&lt;/td&gt; &lt;td&gt;&lt;?php echo $valIo; ?&gt;&lt;br/&gt;&lt;input class=\"btn\" name=\"act\" type=\"submit\" value=\"IO测试\"/&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;input type=\"hidden\" name=\"pInt\" value=\"&lt;?php echo $valInt; ?&gt;\"/&gt; &lt;input type=\"hidden\" name=\"pFloat\" value=\"&lt;?php echo $valFloat; ?&gt;\"/&gt; &lt;input type=\"hidden\" name=\"pIo\" value=\"&lt;?php echo $valIo; ?&gt;\"/&gt; &lt;a name=\"w_networkspeed\"&gt;&lt;/a&gt; &lt;!--网络速度测试--&gt; &lt;table&gt; &lt;tr&gt; &lt;th colspan=\"3\"&gt;网络速度测试&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td width=\"19%\" align=\"center\"&gt;&lt;input name=\"act\" type=\"submit\" class=\"btn\" value=\"开始测试\"/&gt; &lt;br/&gt; 向客户端传送1000k字节数据&lt;br/&gt; 带宽比例按理想值计算 &lt;/td&gt; &lt;td width=\"81%\" align=\"center\"&gt; &lt;table align=\"center\" width=\"550\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\"&gt; &lt;tr&gt; &lt;td height=\"15\" width=\"50\"&gt;带宽&lt;/td&gt; &lt;td height=\"15\" width=\"50\"&gt;1M&lt;/td&gt; &lt;td height=\"15\" width=\"50\"&gt;2M&lt;/td&gt; &lt;td height=\"15\" width=\"50\"&gt;3M&lt;/td&gt; &lt;td height=\"15\" width=\"50\"&gt;4M&lt;/td&gt; &lt;td height=\"15\" width=\"50\"&gt;5M&lt;/td&gt; &lt;td height=\"15\" width=\"50\"&gt;6M&lt;/td&gt; &lt;td height=\"15\" width=\"50\"&gt;7M&lt;/td&gt; &lt;td height=\"15\" width=\"50\"&gt;8M&lt;/td&gt; &lt;td height=\"15\" width=\"50\"&gt;9M&lt;/td&gt; &lt;td height=\"15\" width=\"50\"&gt;10M&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td colspan=\"11\" class=\"suduk\"&gt; &lt;table align=\"center\" width=\"550\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" height=\"8\" class=\"suduk\"&gt; &lt;tr&gt; &lt;td class=\"sudu\" width=\"&lt;?php if (preg_match(\"/[^\\d-., ]/\", $speed)) &#123; echo \"0\"; &#125; else &#123; echo 550 * ($speed / 11000); &#125; ?&gt;\"&gt;&lt;/td&gt; &lt;td class=\"suduk\" width=\"&lt;?php if (preg_match(\"/[^\\d-., ]/\", $speed)) &#123; echo \"550\"; &#125; else &#123; echo 550 - 550 * ($speed / 11000); &#125; ?&gt;\"&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;?php echo (isset($_GET['speed'])) ? \"下载1000KB数据用时 &lt;font color='#cc0000'&gt;\" . $_GET['speed'] . \"&lt;/font&gt; 毫秒，下载速度：\" . \"&lt;font color='#cc0000'&gt;\" . $speed . \"&lt;/font&gt;\" . \" kb/s，需测试多次取平均值，超过10M直接看下载速度\" : \"&lt;font color='#cc0000'&gt;&amp;nbsp;未探测&amp;nbsp;&lt;/font&gt;\" ?&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;a name=\"w_MySQL\"&gt;&lt;/a&gt; &lt;!--MySQL数据库连接检测--&gt; &lt;table&gt; &lt;tr&gt; &lt;th colspan=\"3\"&gt;MySQL数据库连接检测&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td width=\"15%\"&gt;&lt;/td&gt; &lt;td width=\"60%\"&gt; 地址：&lt;input type=\"text\" name=\"host\" value=\"localhost\" size=\"10\"/&gt; 端口：&lt;input type=\"text\" name=\"port\" value=\"3306\" size=\"10\"/&gt; 用户名：&lt;input type=\"text\" name=\"login\" size=\"10\"/&gt; 密码：&lt;input type=\"password\" name=\"password\" size=\"10\"/&gt; &lt;/td&gt; &lt;td width=\"25%\"&gt; &lt;input class=\"btn\" type=\"submit\" name=\"act\" value=\"MySQL检测\"/&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;?php if ($_POST['act'] == 'MySQL检测') &#123; if (function_exists(\"mysql_close\") == 1) &#123; $link = @mysql_connect($host . \":\" . $port, $login, $password); if ($link) &#123; echo \"&lt;script&gt;alert('连接到MySql数据库正常')&lt;/script&gt;\"; &#125; else &#123; echo \"&lt;script&gt;alert('无法连接到MySql数据库！')&lt;/script&gt;\"; &#125; &#125; else &#123; echo \"&lt;script&gt;alert('服务器不支持MySQL数据库！')&lt;/script&gt;\"; &#125; &#125; ?&gt; &lt;a name=\"w_function\"&gt;&lt;/a&gt; &lt;!--函数检测--&gt; &lt;table&gt; &lt;tr&gt; &lt;th colspan=\"3\"&gt;函数检测&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td width=\"15%\"&gt;&lt;/td&gt; &lt;td width=\"60%\"&gt; 请输入您要检测的函数： &lt;input type=\"text\" name=\"funName\" size=\"50\"/&gt; &lt;/td&gt; &lt;td width=\"25%\"&gt; &lt;input class=\"btn\" type=\"submit\" name=\"act\" align=\"right\" value=\"函数检测\"/&gt; &lt;/td&gt; &lt;/tr&gt; &lt;?php if ($_POST['act'] == '函数检测') &#123; echo \"&lt;script&gt;alert('$funRe')&lt;/script&gt;\"; &#125; ?&gt; &lt;/table&gt; &lt;a name=\"w_mail\"&gt;&lt;/a&gt; &lt;!--邮件发送检测--&gt; &lt;table&gt; &lt;tr&gt; &lt;th colspan=\"3\"&gt;邮件发送检测&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td width=\"15%\"&gt;&lt;/td&gt; &lt;td width=\"60%\"&gt; 请输入您要检测的邮件地址： &lt;input type=\"text\" name=\"mailAdd\" size=\"50\"/&gt; &lt;/td&gt; &lt;td width=\"25%\"&gt; &lt;input class=\"btn\" type=\"submit\" name=\"act\" value=\"邮件检测\"/&gt; &lt;/td&gt; &lt;/tr&gt; &lt;?php if ($_POST['act'] == '邮件检测') &#123; echo \"&lt;script&gt;alert('$mailRe')&lt;/script&gt;\"; &#125; ?&gt; &lt;/table&gt; &lt;/form&gt; &lt;table&gt; &lt;tr&gt; &lt;td class=\"w_foot\"&gt;&lt;A HREF=\"http://www.Yahei.Net\" target=\"_blank\"&gt;&lt;?php echo $title . $version; ?&gt;&lt;/A&gt;&lt;/td&gt; &lt;td class=\"w_foot\"&gt;&lt;?php $run_time = sprintf('%0.4f', microtime_float() - $time_start); ?&gt;Processed in &lt;?php echo $run_time ?&gt; seconds. &lt;?php echo memory_usage(); ?&gt; memory usage. &lt;/td&gt; &lt;td class=\"w_foot\"&gt;&lt;a href=\"#w_top\"&gt;返回顶部&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;","tags":[{"name":"监控","slug":"监控","permalink":"https://xiyuan-code.github.io/blog/tags/监控/"}]},{"title":"Nginx 配置 HTTPS 服务器","date":"2017-12-23T07:37:27.048Z","path":"2017/12/23/服务运维/nginx配置https/","text":"Chrome 浏览器地址栏标志着 HTTPS 的绿色小锁头从心理层面上可以给用户专业安全的心理暗示，本文简单总结一下如何在 Nginx 配置 HTTPS 服务器，让自己站点上『绿锁』。 ssl证书生成1openssl req -new -newkey rsa:2048 -sha256 -nodes -out dev.com.csr -keyout dev.com.key -subj \"/C=CN/ST=ShangHai/L=ShangHai/O=Example Inc./OU=Web Security/CN=dev.com\"","tags":[{"name":"https","slug":"https","permalink":"https://xiyuan-code.github.io/blog/tags/https/"},{"name":"ssl","slug":"ssl","permalink":"https://xiyuan-code.github.io/blog/tags/ssl/"},{"name":"nginx","slug":"nginx","permalink":"https://xiyuan-code.github.io/blog/tags/nginx/"}]},{"title":"按名称查找某个进程，并停止","date":"2017-12-23T05:51:34.964Z","path":"2017/12/23/服务运维/按名称查找某个进程，并停止/","text":"此篇笔记记录在linux中如何按名称查找某个进程并停止，这里备忘一下。 示例脚本12345678#! /bin/shID=`ps -ef| grep 'TcpServer.sh'|grep -v 'grep'|awk '&#123;print $2&#125;'`for pid in $IDdo kill -9 $pid echo \" kill TcpServer.sh pid:$pid\"done","tags":[{"name":"shell命令","slug":"shell命令","permalink":"https://xiyuan-code.github.io/blog/tags/shell命令/"},{"name":"linux","slug":"linux","permalink":"https://xiyuan-code.github.io/blog/tags/linux/"}]},{"title":"Golang 在 Mac、Linux、Windows 下交叉编译","date":"2017-12-23T05:44:53.287Z","path":"2017/12/23/golang编程/Golang 在 Mac、Linux、Windows 下交叉编译/","text":"Golang 支持交叉编译，在一个平台上生成另一个平台的可执行程序，最近使用了一下，非常好用，这里备忘一下。 示例命令1命令： GOOS=linux GOARCH=amd64 go build main.go Mac 下编译 Linux 和 Windows 64位可执行程序12CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build main.goCGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build main.go Linux 下编译 Mac 和 Windows 64位可执行程序12CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build main.goCGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build main.go Windows 下编译 Mac 和 Linux 64位可执行程序123456789SET CGO_ENABLED=0SET GOOS=darwinSET GOARCH=amd64go build main.goSET CGO_ENABLED=0SET GOOS=linuxSET GOARCH=amd64go build main.go GOOS：目标平台的操作系统（darwin、freebsd、linux、windows） GOARCH：目标平台的体系架构（386、amd64、arm） 交叉编译不支持 CGO 所以要禁用它上面的命令编译 64 位可执行程序，你当然应该也会使用 386 编译 32 位可执行程序 很多博客都提到要先增加对其它平台的支持，但是我跳过那一步，上面所列的命令也都能成功，且得到我想要的结果，可见那一步应该是非必须的，或是我所使用的 Go 版本已默认支持所有平台。","tags":[{"name":"打包","slug":"打包","permalink":"https://xiyuan-code.github.io/blog/tags/打包/"}]},{"title":"docker 中安装php环境","date":"2017-12-23T05:40:26.098Z","path":"2017/12/23/服务运维/docker 中安装php环境/","text":"此篇笔记记录如何利用docker容器 来安装php环境，和在容器中安装php对应的扩展程序及配置。 镜像命令1docker pull php:7.2.0RC4-fpm-alpine3.6 容器创建命令1docker run --name=php-fpm --restart=always -v ~/docker/nginx/wwwroot:/usr/share/nginx -v ~/docker/php:/usr/local/etc/php/conf.d --link mysql:mysql -p 127.0.0.1:9000:9000 -d php:7.2.0RC4-fpm-alpine3.6 进入php-fpm容器1Docker exec -it php-fpm sh 更换更换软件源的方法：12编辑/etc/apk/repositories 然后在文件的最顶端添加(注意将3.3换成需要的版本)http://mirrors.aliyun.com/alpine/v3.3/main/ 安装php扩展12docker-php-ext-install mysqlidocker-php-ext-install gd &amp;&amp; docker-php-ext-install pdo_mysql reais扩展1pecl install /home/redis.tgz &amp;&amp; echo \"extension=redis.so\" &gt; /usr/local/etc/php/conf.d/redis.ini","tags":[{"name":"docker","slug":"docker","permalink":"https://xiyuan-code.github.io/blog/tags/docker/"}]},{"title":"七牛云存储可视化管理工具","date":"2017-12-21T10:42:03.963Z","path":"2017/12/21/工具教程/七牛可视化管理工具/","text":"QBox是一款方便的七牛仓库以及文件管理工具，是一款可以跨平台运行在OS X，Linux 以及 Windows 系统的开源软件。QBox基于 electron-vue 开发。 软件截图仓库面板 文件管理面板 上传文件面板 功能仓库面板 通过本地设置 accessKey 和 secretKey获取管理权限。 可清除本地token（包括 accessKey 和 secretKey）从而退出。 获取所有的仓库（包含私有仓库）。 新建一个专门的 管理面板 进行文件管理。 管理面板 列出仓库中的所有文件。 分页显示仓库中的文件，每次加载100条。 可通过 文件名，文件类型，文件大小 或者 修改时间 进行排序。 图片 以及 多媒体文件 预览功能。 删除单个文件。 批量删除文件。 复制文件外链。 刷新文件列表。 下载单个文件。 上传文件（支持拖拽）。 文件名前缀搜索。 计划导航栏 设置默认仓库。 拖动至导航栏图标进行上传。 仓库面板 删除仓库。 创建仓库。 管理面板 搜索框提供回车响应。 批量上传文件。 批量下载文件。 重命名文件。 协议 代码贡献1234567891011121314# 安装依赖npm install# 本地开放版本测试npm run dev# 编译线上版本npm run build# 单元测试（目前暂无）npm test# 检查代码规范npm run lint Document","tags":[{"name":"七牛云存储","slug":"七牛云存储","permalink":"https://xiyuan-code.github.io/blog/tags/七牛云存储/"},{"name":"管理工具","slug":"管理工具","permalink":"https://xiyuan-code.github.io/blog/tags/管理工具/"}]},{"title":"最全的前端知识体系资源教程","date":"2017-12-21T10:10:12.802Z","path":"2017/12/21/教程资料/最全的前端知识体系资源教程/","text":"众所周知，前端发展如火如荼，日新月异，而且很长一段时间内都将如此。这份由晚晴幽草轩轩主正在维护的教程列表；旨在为前端学习，技能提升，视野扩展，资料查找等行个方便。将会在日常工作探索、学习中，持续保持更新，增新优之章，除旧失之文；尽可能使得这份列表保持简练，以避免信息过重且冗杂；望其能在浩如烟海的讯息中，堪有所用。详细说明，可参见：与时俱进版前端资源教程。 大前端综合 Tools EcmaScript Css3 Vue React Angular Webpack Gulp Chrome Nodejs Pwa WebAssembly Mongodb Nginx UI Git Optimization Testing Interesting 微注：在继续学习 &amp; 探索 &amp; 积累，并率先于这里持续更新。 综合类 综合类 地址 前端知识体系 http://www.cnblogs.com/sb19871023/p/3894452.html 前端知识结构 https://github.com/JacksonTian/fks Web前端开发大系概览 https://github.com/unruledboy/WebFrontEndStack Web前端开发大系概览-中文版 http://www.cnblogs.com/unruledboy/p/WebFrontEndStack.html Web Front-end Stack v2.2 Web Front-end Stack v2.2 免费的编程中文书籍索引 https://github.com/justjavac/free-programming-books-zh_CN 前端书籍 https://github.com/dypsilon/frontend-dev-bookmarks 前端免费书籍大全 https://github.com/vhf/free-programming-books 前端知识体系 http://www.cnblogs.com/sb19871023/p/3894452.html 免费的编程中文书籍索引 https://github.com/justjavac/free-programming-books-zh_CN 智能社 - 精通JavaScript开发 http://study.163.com/course/introduction/224014.htm 重新介绍 JavaScript（JS 教程） https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/A_re-introduction_to_JavaScript 麻省理工学院公开课：计算机科学及编程导论 http://v.163.com/special/opencourse/bianchengdaolun.html JavaScript中的this陷阱的最全收集–没有之一 http://segmentfault.com/a/1190000002640298 JS函数式编程指南 https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch1.html JavaScript Promise迷你书（中文版） http://liubin.github.io/promises-book 腾讯移动Web前端知识库 https://github.com/AlloyTeam/Mars Front-End-Develop-Guide 前端开发指南 https://github.com/Front-End-Developers-Hunan/Front-End-Develop-Guide 前端开发笔记本 https://li-xinyang.gitbooks.io/frontend-notebook/content 大前端工具集 - 聂微东 https://github.com/nieweidong/fetool 前端开发者手册 https://dwqs.gitbooks.io/frontenddevhandbook/content 入门类 入门类 地址 前端入门教程 http://www.cnblogs.com/jikey/p/3613082.html 瘳雪峰的Javascript教程 http://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000 前端工程师必备的PS技能——切图篇 http://www.imooc.com/view/506 结合个人经历总结的前端入门方法 https://github.com/qiu-deqing/FE-learning 工具类 工具类 地址 前端人的俱乐部 http://f2er.club/ 真可以解放你的收藏夹 如何优雅地使用Sublime Text http://www.jeffjade.com/2015/12/15/2015-04-17-toss-sublime-text/# 新编码神器Atom使用纪要 http://www.jeffjade.com/2016/03/03/2016-03-02-how-to-use-atom/ css sprite 雪碧图制作 http://www.imooc.com/learn/93 版本控制入门 – 搬进 Github http://www.imooc.com/learn/390 Grunt-beginner前端自动化工具 http://www.imooc.com/learn/30 IntelliJ IDEA 简体中文专题教程 https://github.com/judasn/IntelliJ-IDEA-Tutorial SublimeText https://github.com/jikeytang/sublime-text Atom https://atom.io visual studio code https://code.visualstudio.com 综合效果搜索平台 综合效果搜索平台 地址 JavaScript 资源大全中文版 https://github.com/jobbole/awesome-javascript-cn 100+ 超全的web开发工具和资源 https://xituqu.com/170.html 设计师网址导航 http://hao.uisdc.com/ Web前端导航(Alloyteam) http://www.alloyteam.com/nav/ 快搜 http://so.chongbuluo.com/ 阿里iconfont http://www.iconfont.cn/ zoommyapp.com http://zoommyapp.com/ 高质量图库 unsplash.com https://unsplash.com/ 高质量图库 www.pinterest.com https://www.pinterest.com/ 图库 New Old Stock http://nos.twnsnd.co 复古风图库 500px.com https://500px.com/ 唯美照片 效果网 http://www.jq22.com 花瓣网 http://huaban.com/ 优美图 http://www.topit.me/ codepen http://codepen.io/ 摄图网 http://699pic.com/ 常用的JavaScript代码片段 http://microjs.com 团队Blog 团队Blog-Name 地址 腾讯ISUX http://isux.tencent.com 奇舞周刊 http://old.75team.com/weekly/ 淘宝前端团队（FED） http://taobaofed.org 码农周刊 http://weekly.manong.io 凹凸实验室 https://aotu.io/ WEB前端开发 http://www.css88.com A JS tip per day! http://www.jstips.co 腾讯全端 AlloyTeam http://www.alloyteam.com/webdevelop/ 阿里巴巴-U一点 http://www.aliued.cn 百度WEB前端研发部 http://fex.baidu.com 携程设计委员会 http://ued.ctrip.com/blog/ 平安科技移动开发二队技术周报 https://github.com/PaicHyperionDev/MobileDevWeekly 开发中心 开发中心 地址 mozilla js参考 https://developer.mozilla.org/zh-CN/docs/Web/JavaScript chrome开发中心（chrome的内核已转向blink） https://developer.chrome.com/extensions/api_index.html safari开发中心 https://developer.apple.com/library/safari/navigation microsoft js参考 https://msdn.microsoft.com/zh-cn/library/d1et7k7c(v=vs.94.aspx js秘密花园 http://sanshi.me/articles/JavaScript-Garden-CN/html/index.html js秘密花园 http://bonsaiden.github.io/JavaScript-Garden/zh w3help http://www.w3help.org 综合Bug集合网站 Nodejs Nodejs 地址 Node.js 包教不包会 https://github.com/alsotang/node-lessons 一个nodejs博客 http://60sky.com 【NodeJS 学习笔记04】新闻发布系统 http://www.cnblogs.com/yexiaochai/p/3536547.html 过年7天乐，学nodejs 也快乐 http://www.cnblogs.com/qqloving/p/3541099.html 七天学会NodeJS https://github.com/nqdeng/7-days-nodejs Nodejs学习笔记（二）— 事件模块 http://www.cnblogs.com/zhongweiv/p/nodejs_events.html nodejs入门 http://www.cnblogs.com/liusuqi/p/3735491.html angularjs nodejs https://github.com/zensh/jsgen 从零开始nodejs系列文章 http://blog.fens.me/series-nodejs 理解nodejs http://debuggable.com/posts/understanding-node-js:4bd98440-45e4-4a9a-8ef7-0f7ecbdd56cb nodejs事件轮询 http://blog.mixu.net/2011/02/01/understanding-the-node-js-event-loop node入门 http://www.nodebeginner.org/index-zh-cn.html nodejs cms http://ourjs.com/detail/53e1f281c5910a9806000001 Node初学者入门，一本全面的NodeJS教程 http://ourjs.com/detail/529ca5950cb6498814000005 NodeJS的代码调试和性能调优 http://www.barretlee.com/blog/2015/10/07/debug-nodejs-in-command-line 综合API 综合API 地址 OverAPI.com http://overapi.com/ javascripting http://www.javascripting.com 各种流行库搜索 http://microjs.com runoob.com-包含各种API集合 http://www.runoob.com 开源中国在线API文档合集 http://tool.oschina.net/apidocs devdocs http://devdocs.io 英文综合API网站 Ecmascript Ecmascript 地址 Understanding ECMAScript 6 - Nicholas C. Zakas https://leanpub.com/understandinges6/read exploring-es6 https://leanpub.com/exploring-es6/read exploring-es6翻译 https://github.com/es6-org/exploring-es6 exploring-es6翻译后预览 http://es6-org.github.io/exploring-es6 阮一峰 es6 http://es6.ruanyifeng.com 阮一峰 Javascript http://javascript.ruanyifeng.com ECMA-262，第 5 版 http://yanhaijing.com/es5 es5 http://es5.github.io Vue Vue.js 地址 Vue2.0 https://vuefe.cn/ Vue http://cn.vuejs.org Vue Router https://router.vuejs.org/ Vuex https://vuex.vuejs.org/ Vue-Cli https://github.com/vuejs/vue-cli Vue 论坛 http://forum.vuejs.org Vue 聊天室 https://gitter.im/vuejs/vue Vue 入门指南 http://www.cnblogs.com/aaronjs/p/3660102.html Vue 的一些资源索引 http://segmentfault.com/a/1190000000411057 awesome-vue https://github.com/vuejs/awesome-vue vue-syntax-highlight https://github.com/vuejs/vue-syntax-highlight 如何写一手漂亮的 Vue http://jeffjade.com/2017/03/11/120-how-to-write-vue-better/?me Angularjs Angularjs 地址 Angular.js 的一些学习资源 https://github.com/dolymood/AngularLearning angularjs中文社区 http://angularjs.cn Angularjs源码学习 http://www.cnblogs.com/xuwenmin888/p/3739096.html Angularjs源码学习 http://www.ifeenan.com/?c=AngularJS angular对bootstrap的封装 http://angular-ui.github.io/bootstrap angularjs + nodejs https://cnodejs.org/topic/51404e0f069911196d2e3923 吕大豹 Angularjs http://www.cnblogs.com/lvdabao/tag/AngularJs AngularJS 最佳实践 http://www.infoq.com/cn/news/2013/02/angular-web-app Angular的一些扩展指令 http://www.lovelucy.info/angularjs-best-practices.html Angular数据绑定原理 https://github.com/Pasvaz/bindonce 一些扩展Angular UI组件 https://github.com/angular-ui Ember和AngularJS的性能测试 http://voidcanvas.com/emberjs-vs-angularjs-performance-testing 带你走近AngularJS - 基本功能介绍 http://www.cnblogs.com/powertoolsteam/p/angularjs-introdection.html Angularjs开发指南 http://angular.duapp.com/docs/guide Angularjs学习 http://www.cnblogs.com/amosli/p/3710648.html 不要带着jQuery的思维去学习AngularJS http://www.rainweb.cn/article/angularjs-jquery.html angularjs 学习笔记 http://wangjiatao.diandian.com/?tag=angularjs angularjs 开发指南 http://www.angularjs.cn/T008 angularjs 英文资料 https://github.com/jmcunningham/AngularJS-Learning angular bootstrap http://angular-ui.github.io/bootstrap angular jq mobile https://github.com/opitzconsulting/jquery-mobile-angular-adapter angular ui http://mgcrea.github.io/angular-strap 整合jQuery Mobile+AngularJS经验谈 http://www.tuicool.com/articles/7ZZVr2 有jQuery背景，该如何用AngularJS编程思想 http://blog.jobbole.com/46589/ AngularJS在线教程 http://each.sinaapp.com/angular angular学习笔记 http://www.zouyesheng.com/angular.html React React 地址 react.js 中文论坛 http://www.react-china.org react.js 官方网址 https://facebook.github.io/react/index.html react.js 官方文档 https://facebook.github.io/react/docs/getting-started.html react.js material UI http://material-ui.com/# react.js TouchstoneJS UI http://touchstonejs.io react.js amazeui UI http://amazeui.org/react React 入门实例教程 - 阮一峰 http://www.ruanyifeng.com/blog/2015/03/react.html React Native 中文版 http://wiki.jikexueyuan.com/project/react-native Webpack 和 React 小书 - 前端乱炖 http://www.html-js.com/article/Fakefish%203053 Webpack 和 React 小书 - gitbook https://fakefish.github.io/react-webpack-cookbook webpack https://github.com/webpack/webpack Webpack，101入门体验 http://html-js.com/article/3009 webpack入门教程 http://html-js.com/article/3113 基于webpack搭建前端工程解决方案探索 http://segmentfault.com/a/1190000003499526 Js template Js template 地址 template-chooser http://garann.github.io/template-chooser artTemplate https://github.com/aui/artTemplate tomdjs https://github.com/aui/tmodjs/blob/master/README.md Fxtpl v1.0 繁星前端模板引擎 http://koen301.github.io/fxtpl laytpl http://laytpl.layui.com mozilla - nunjucks https://github.com/mozilla/nunjucks Juicer https://github.com/PaulGuo/Juicer dustjs http://akdubya.github.io/dustjs etpl http://ecomfe.github.io/etpl HTML5(HTML) HTML(HTML5) 地址 深入理解HTML5标签 https://segmentfault.com/a/1190000002695791 如何写出高效率的HTML https://segmentfault.com/a/1190000002680822 HTML meta标签总结与属性使用介绍 https://segmentfault.com/a/1190000004279791 戏说HTML5 http://www.cnblogs.com/dojo-lzz/p/5059316.html CSS3(CSS) CSS 地址 CSS 语法参考 http://tympanus.net/codrops/css_reference 如何编写可维护的CSS https://github.com/chadluo/CSS-Guidelines/blob/master/README.md CSS3动画手册 http://isux.tencent.com/css3/index.html 腾讯css3动画制作工具 http://isux.tencent.com/css3/tools.html 志爷css小工具集合 http://linxz.github.io/tianyizone css3 js 移动大杂烩 http://www.note12.com/category/blog/2014-6-5/538fe0a9f786f1b7019a4dfb bouncejs 触摸库 http://bouncejs.com animate.css http://daneden.github.io/animate.css 全局CSS的终结(狗带 [译] http://www.alloyteam.com/2015/10/8536 browserhacks http://browserhacks.com 移动端API 移动端API 地址 99移动端知识集合 https://github.com/jtyjty99999/mobileTech 移动端前端开发知识库 https://github.com/AlloyTeam/Mars 移动前端的一些坑和解决方法（外观表现） http://caibaojian.com/mobile-web-bug.html 【原】移动web资源整理 http://www.cnblogs.com/PeunZhang/p/3407453.html zepto 1.0 中文手册 http://www.html-5.cn/Manual/Zepto zepto 1.1.2 http://www.css88.com/doc/zeptojs_api zepto 中文注释 http://www.cnblogs.com/sky000/archive/2013/03/29/2988952.html jqmobile 手册 http://app-framework-software.intel.com/api.php 移动浏览器开发集合 https://github.com/maxzhang/maxzhang.github.com/issues 移动开发大杂烩 https://github.com/hoosin/mobile-web-favorites jQuery jQuery 地址 YOU MIGHT NOT NEED JQUERY http://youmightnotneedjquery.com/ jQuery API 中文文档 http://www.jquery123.com hemin 在线版 http://hemin.cn/jq css88 jq api http://www.css88.com/jqapi-1.9/on css88 jqui api http://www.css88.com/jquery-ui-api 学习jquery http://learn.jquery.com jquery 源码查找 http://james.padolsey.com/jquery Web前端资源汇总(jQuery,Js,Css3等) http://www.cnblogs.com/jihua/p/webfront.html D3 D3 地址 d3 Tutorials https://github.com/mbostock/d3/wiki/Tutorials Gallery https://github.com/mbostock/d3/wiki/Gallery lofter http://datavisual.lofter.com/post/40cf3a_188e535 iteye http://alanland.iteye.com/blog/1878595 ruanyifeng http://javascript.ruanyifeng.com/library/d3.html Requriejs Requriejs 地址 Javascript模块化编程（一）：模块的写法 http://www.ruanyifeng.com/blog/2012/10/javascript_module.html Javascript模块化编程（二）：AMD规范 http://www.ruanyifeng.com/blog/2012/10/asynchronous_module_definition.html Javascript模块化编程（三）：require.js的用法 http://www.ruanyifeng.com/blog/2012/11/require_js.html RequireJS入门（一） http://www.cnblogs.com/snandy/archive/2012/05/22/2513652.html RequireJS入门（二） http://www.cnblogs.com/snandy/archive/2012/05/23/2513712.html RequireJS进阶（三） http://www.cnblogs.com/snandy/archive/2012/06/08/2538001.html requrie源码学习 http://www.cnblogs.com/yexiaochai/p/3632580.html requrie 入门指南 http://www.oschina.net/translate/getting-started-with-the-requirejs-library requrieJS 学习笔记 http://www.cnblogs.com/yexiaochai/p/3214926.html requriejs 其一 http://cyj.me/why-seajs/requirejs/ require backbone结合 http://www.cnblogs.com/yexiaochai/p/3221081.html Seajs Seajs 地址 seajs http://seajs.org seajs 中文手册 http://cyj.me/why-seajs/zh Less,sass Less,sass 地址 sass http://www.w3cplus.com/sassguide sass教程-sass中国 http://www.sass.hk Sass 中文文档 http://sass.bootcss.com less http://less.bootcss.com Markdown Markdown 地址 Markdown 语法说明 (简体中文版 http://wowubuntu.com/markdown markdown入门参考 https://github.com/LearnShare/Learning-Markdown/blob/master/README.md gitbook https://www.gitbook.com 国外的在线markdown可编辑成书 mdeditor https://www.zybuluo.com/mdeditor 一款国内的在线markdown编辑器 stackedit https://stackedit.io 国外的在线markdown编辑器，功能强大，同步云盘 mditor http://bh-lay.github.io/mditor 一款轻量级的markdown编辑器 lepture-editor https://github.com/lepture/editor markdown-editor https://github.com/jbt/markdown-editor 作业部落 https://www.zybuluo.com 功能强大，速度流畅，全平台同步 兼容性 兼容性 地址 esma 兼容列表 http://kangax.github.io/compat-table/es6 W3C CSS验证服务 http://jigsaw.w3.org/css-validator/validator.html.zh-cn caniuse http://caniuse.com/#index csscreator http://csscreator.com/properties microsoft https://msdn.microsoft.com/zh-cn/library/cc351024(v=vs.85.aspx 在线测兼容-移动端 http://www.responsinator.com emulators https://www.manymo.com/emulators UI相关 UI相关 地址 Foundation http://foundation.zurb.com/?form=jeffjade.com Bootcss http://v3.bootcss.com/?form=jeffjade.com Element UI http://element.eleme.io/#/zh-CN 基于Vue ANT DESIGN http://ant.design 一个 UI 设计语言 Smart UI http://smartui.chinamzz.com MetroUICSS http://www.w3cplus.com/MetroUICSS Semantic http://semantic-ui.com Layui http://www.layui.com/?form=jeffjade.com Buttons http://alexwolfe.github.io/Buttons kitecss http://hiloki.github.io/kitecss pintuer http://www.pintuer.com amazeui http://amazeui.org worldhello http://www.worldhello.net/gotgithub/index.html linuxtoy http://igit.linuxtoy.org/contents.html gitmagic http://www-cs-students.stanford.edu/~blynn/gitmagic/intl/zh_cn rogerdudler http://rogerdudler.github.io/git-guide/index.zh.html gitref http://gitref.justjavac.com book http://git-scm.com/book/zh gogojimmy http://gogojimmy.net/2012/01/17/how-to-use-git-1-git-basic 其它API 其它API 地址 HTTP API 设计指南 http://segmentfault.com/bookmark/1230000002521721 javascript流行库汇总 javascriptoo 验证api http://niceue.com/validator/demo/index.php underscore 中文手册 http://www.css88.com/doc/underscore underscore源码分析 http://www.html-js.com/article/Underscorejs-source-code-analysis-of-underscorejs-source-code-analysis%203031 underscore源码分析-亚里士朱德的博客 http://yalishizhude.github.io/tags/underscore underscrejs en api http://underscorejs.org lodash - underscore的代替品 https://lodash.com ext4api http://extjs-doc-cn.github.io/ext4api qwrap手册 http://dev.qwrap.com/resource/js/_docs/_youa/#/qw/base/loadJs_.htm 缓动函数 http://easings.net/zh-cn svg 中文参考 http://www.w3school.com.cn/svg/svg_reference.asp svg mdn参考 https://developer.mozilla.org/en-US/docs/Web/SVG svg 导出 canvas https://github.com/gabelerner/canvg svg 导出 png https://github.com/exupero/saveSvgAsPng ai-to-svg http://www.zamzar.com/convert/ai-to-svg localStorage 库 https://github.com/machao/localStorage 图表类 图表类 地址 Highcharts 中文API http://www.hcharts.cn/api/index.php Highcharts 英文API http://api.highcharts.com/highcharts ECharts 百度的图表软件 http://echarts.baidu.com/ 高德地图 http://lbs.amap.com/api 开源的矢量图脚本框架 http://paperjs.org svg 地图 http://jvectormap.com 正则 正则 地址 JS正则表达式元字符 http://segmentfault.com/a/1190000002471140 正则表达式30分钟入门教程 http://deerchao.net/tutorials/regex/regex.htm MDN-正则表达式 https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions ruanyifeng - RegExp对象 http://javascript.ruanyifeng.com/stdlib/regexp.html 小胡子哥 - 进阶正则表达式 http://div.io/topic/764?page=1 is.js https://github.com/Cedriking/is.js/blob/master/is.js 正则在线测试 http://regexper.com 前端规范 前端规范 地址 通过分析github代码库总结出来的工程师代码书写习惯 http://alloyteam.github.io/CodeGuide HTML&amp;CSS编码规范 by @mdo http://codeguide.bootcss.com 团队合作的css命名规范-腾讯AlloyTeam前端团队 http://www.alloyteam.com/2011/10/css-on-team-naming/ 前端编码规范之js - by yuwenhui http://yuwenhui.github.io 前端编码规范之js - by 李靖 http://www.cnblogs.com/hustskyking/p/javascript-spec.html 前端开发规范手册 http://zhibimo.com/read/Ashu/front-end-style-guide Airbnb JavaScript 编码规范（简体中文版） https://github.com/yuche/javascript#table-of-contents AMD与CMD规范的区别 http://www.zhihu.com/question/20351507 AMD与CMD规范的区别 http://www.cnblogs.com/tugenhua0707/p/3507957.html KISSY 源码规范 http://docs.kissyui.com/1.4/docs/html/tutorials/style-guide/kissy-source-style.html bt编码规范 http://codeguide.bootcss.com 规范加强版 https://github.com/Suxiaogang/Code_Guide 前端代码规范 及 最佳实践 http://blog.jobbole.com/79075 百度前端规范 http://coderlmn.github.io/code-standards 百度前端规范 http://isobar-idev.github.io/code-standards 百度前端规范 http://zhuanlan.zhihu.com/fuyun/19884834 ECMAScript6 编码规范–广发证券前端团队 https://github.com/gf-rd/es6-coding-style JavaScript 风格指南/编码规范（Airbnb公司版） http://blog.jobbole.com/79484 网易前端开发规范 http://nec.netease.com/standard css模块 http://www.75team.com/archives/1049 前端规范资源列表 https://github.com/ecomfe/spec PHP PHP 地址 最流行的PHP 代码规范 http://segmentfault.com/a/1190000000443795 最流行的PHP 代码规范 https://github.com/hfcorriez/fig-standards/blob/zh_CN/%E6%8E%A5%E5%8F%97/PSR-2-coding-style-guide.md 各大公司开源项目 各大公司开源项目 地址 Facebook Projects https://code.facebook.com/projects/web 百度web前端研发部 http://fex.baidu.com 百度EFE http://efe.baidu.com 百度github https://github.com/fex-team alloyteam http://www.alloyteam.com alloyteam-github http://alloyteam.github.io alloyteam-AlloyGameEngine https://github.com/AlloyTeam/AlloyGameEngine AlloyDesigner http://alloyteam.github.io/AlloyDesigner 即时修改，即时保存，设计稿较正，其它开发辅助工具 H5交互页编辑器AEditor介绍 http://www.alloyteam.com/2015/06/h5-jiao-hu-ye-bian-ji-qi-aeditor-jie-shao H5动画交互页开发的工具介绍 AEditor http://aeditor.alloyteam.com H5动画交互页开发的工具 值得订阅的weekly https://github.com/fenbility/weekly-feed 奇舞团开源项目 http://75team.github.io Qunar UED http://ued.qunar.com 常用 常用 地址 ieBetter.js-让IE6-IE8拥有IE9+,Chrome等浏览器特性 http://www.zhangxinxu.com/wordpress/2013/12/iebetter-js-make-ie6-ie8-like-modern-browser-ie9-chrome 模拟键盘 http://mottie.github.io/Keyboard 拼音 https://github.com/hotoo/pinyin 中国个人身份证号验证 https://github.com/mc-zone/IDValidator 算法 算法 地址 数据结构与算法 JavaScript 描述. 章节练习 https://github.com/Ralph-Wang/algorithm.in.js 常见排序算法（JS版） https://github.com/twobin/twobinSort 经典排序 https://github.com/luofei2011/jsAgm/blob/master/js/sort.js 常见排序算法-js版本 https://github.com/hechangmin/jssort JavaScript 算法与数据结构 精华集 https://github.com/lightningtgc/JavaScript-Algorithms 面试常考算法题精讲 http://www.nowcoder.com/live/courses 移动端 移动端 地址 fastclick https://github.com/ftlabs/fastclick no-click-delay https://github.com/mmastrac/jquery-noclickdelay 【敏捷开发】Android团队开发规范 http://www.cnblogs.com/lcw/p/3619181.html Android 开发规范与应用 http://www.jianshu.com/p/4390f4fe19b3 ionic https://github.com/ychow/ionic-guide JSON JSON 地址 模拟生成JSON数据 http://beta.json-generator.com 焦点图 焦点图 地址 myfocus https://github.com/koen301/myfocus myfocus-官方演示站 http://www.chhua.com/myfocus SuperSlidev2.1 – 大话主席 http://www.superslide2.com soChange http://www.bujichong.com/sojs/soChange/index.html Ext, EasyUI, J-UI 及其它各种UI方案 Ext, EasyUI, J-UI 及其它各种UI方案 地址 雅虎UI - CSS UI http://developer.yahoo.com/yui/grids extjs https://www.sencha.com/products/extjs ext4英文api http://docs.sencha.com/extjs/4.0.7 ext4中文api http://extjs-doc-cn.github.io/ext4api jquery easyui 未压缩源代码 http://jquery-easyui.googlecode.com/svn/trunk/src J-UI http://jui.org MUI-最接近原生APP体验的高性能前端框架 http://dcloudio.github.io/mui Amaze UI(中国首个开源 HTML5 跨屏前端框架) http://amazeui.org 淘宝 HTML5 前端框架 http://m.sui.taobao.org KISSY - 阿里前端JavaScript库 http://docs.kissyui.com 网易Nej - Nice Easy Javascript http://nej.netease.com Kendo UI MVVM Demo http://demos.telerik.com/kendo-ui/mvvm/index 页面 社会化 分享功能 页面 社会化 分享功能 地址 百度分享 http://share.baidu.com pc端 JiaThis http://jiathis.com pc端 社会化分享组件 http://developer.baidu.com/soc/share 移动端 ShareSDK 轻松实现社会化功能 http://www.mob.com/#/index 移动端 友盟分享 http://dev.umeng.com/social/android/quick-integration 移动端 富文本编辑器 富文本编辑器 地址 功能齐全 tinymce https://www.tinymce.com 百度 ueditor http://ueditor.baidu.com/website 经典的ckeditor http://ckeditor.com 经典的kindeditor http://kindeditor.net wysiwyg http://www.bootcss.com/p/bootstrap-wysiwyg 一个有情怀的编辑器。Bach’s Editor http://integ.github.io/BachEditor tower用的编辑器 https://github.com/mycolorway/simditor summernote 编辑器 https://github.com/summernote/summernote html5编辑器 http://neilj.github.io/Squire Quilljs编辑器 http://quilljs.com wangEditor https://github.com/wangfupeng1988/wangEditor 前端概述 前端概述 地址 前端工具大全 http://www.awesomes.cn 什么是前端工程化 https://github.com/fouber/blog/issues/10?from=timeline&amp;isappinstalled=0# [译] 前端攻略-从路人甲到英雄无敌 https://segmentfault.com/a/1190000005174755 Gulp Gulp 地址 Gulp官网 http://gulpjs.com Gulp中文网 http://www.gulpjs.com.cn gulp资料收集 https://github.com/Platform-CUF/use-gulp Gulp：任务自动管理工具 - ruanyifeng http://javascript.ruanyifeng.com/tool/gulp.html Gulp插件 http://gulpjs.com/plugins Gulp探究折腾之路(I) http://www.jeffjade.com/2015/11/25/2015-11-25-toss-gulp/ Gulp折腾之路(II) http://www.jeffjade.com/2016/01/19/2016-01-19-toss-gulp/ Gulp不完全入门教程 http://www.ido321.com/1622.html 为什么使用gulp? https://github.com/hjzheng/CUF_meeting_knowledge_share/issues/33 Gulp安装及配合组件构建前端开发一体化 http://www.dbpoo.com/getting-started-with-gulp Gulp 入门指南 https://github.com/nimojs/gulp-book Gulp 入门指南 - nimojs https://github.com/nimojs/blog/issues/19 Gulp in Action http://www.imooc.com/video/5692 Gulp开发教程（翻译） http://www.w3ctech.com/topic/134 前端构建工具gulpjs的使用介绍及技巧 http://www.cnblogs.com/2050/p/4198792.html Grunt Grunt 地址 gruntjs http://gruntjs.com Grunt中文网 http://www.gruntjs.net Fis Fis 地址 fis 官网 http://fex-team.github.io/fis-site/index.html fis http://fis.baidu.com pc图轮 pc图轮 地址 Vue 的图片轮播组件:vue-slider https://github.com/qusiba/vue-slider 左右按钮多图切换 http://bxslider.com/examples/carousel-demystified fullpage全屏轮播 https://github.com/alvarotrigo/fullPage.js 移动端图轮 移动端图轮 地址 滑屏效果 http://www.idangero.us/swiper 全屏fullpage https://github.com/peunzhang/fullpage 单个图片切换 https://github.com/qiqiboy/touchslider 单个全屏切换 https://github.com/peunzhang/slip.js 单个全屏切换 https://github.com/peunzhang/iSlider 滑屏效果 https://github.com/saw/touch-interfaces 旋转拖动设置 http://baijs.com/tinycircleslider 类似于swipe切换 http://touchslider.com 支持多种形式的触摸滑动 http://www.swiper.com.cn/demo/index.html 滑屏效果 https://github.com/joker-ye/main/blob/master/wap/index.html 大话主席pc移动图片轮换 http://www.superslide2.com 滑屏效果 https://github.com/hahnzhu/parallax.js 基于zepto的fullpage https://github.com/yanhaijing/zepto.fullpage [WebApp]定宽网页设计下，固定宽度布局开发WebApp并实现多终端下WebApp布局自适应 http://www.cnblogs.com/plums/archive/2013/01/10/WebApp-fixed-width-layout-of-multi-terminal-adapter-since.html 判断微信客户端的那些坑 http://loo2k.com/blog/detecting-wechat-client 可以通过javascript直接调用原生分享的工具 https://github.com/JefferyWang/nativeShare.js JiaThis 分享到微信代码 http://www.jiathis.com/help/html/weixin-share-code 聊聊移动端跨平台开发的各种技术 http://fex.baidu.com/blog/2015/05/cross-mobile 前端自动化测试 http://www.zhihu.com/question/29922082 多种轮换图片 http://ajccom.github.io/niceslider 滑动侧边栏 https://mango.github.io/slideout 文件上传 文件上传 地址 百度上传组件 http://fex.baidu.com/webuploader 上传 https://blueimp.github.io/jQuery-File-Upload flash 头像上传 http://www.hdfu.net 图片上传预览 http://www.dropzonejs.com 图片裁剪 http://elemefe.github.io/image-cropper 图片裁剪-shearphoto http://www.shearphoto.com jQuery图片处理 http://www.oschina.net/project/tag/284/jquery-image-tools?lang=0&amp;os=0&amp;sort=view&amp;p=2 模拟select 模拟select 地址 糖饼 select http://aui.github.io/popupjs/doc/selectbox.html flexselect https://github.com/rmm5t/jquery-flexselect 双select http://loudev.com select2 http://select2.github.io 取色插件 取色插件 地址 类似 Photoshop 的界面取色插件 http://www.jq22.com/plugin/367 jquery color https://github.com/jquery/jquery-color 取色插件集合 http://www.oschina.net/project/tag/287/color-picker farbtastic 圆环＋正方形 https://github.com/mattfarina/farbtastic 城市联动 城市联动 地址 jquery.cityselect.js基于jQuery+JSON的省市或自定义联动效果 http://www.ijquery.cn/?p=360 剪贴板 剪贴板 地址 剪贴板 https://github.com/zeroclipboard/zeroclipboard clipboard 最新的剪切方案 http://zenorocha.github.io/clipboard.js 不是Flash的剪贴板 https://github.com/zenorocha/clipboard.js 简繁转换 简繁转换 地址 简繁转换 https://github.com/BYVoid/OpenCC 表格 Grid 表格 Grid 地址 facebook表格 http://facebook.github.io/fixed-data-table 类似于Excel编辑表格-handsontable http://handsontable.com bootstrap-table插件 http://bootstrap-table.wenzhixin.net.cn datatables https://www.datatables.net 在线演示 在线演示 地址 js 在线编辑 - runjs http://runjs.cn js 在线编辑 - jsbin http://jsbin.com js 在线编辑 - codepen http://codepen.io js 在线编辑 - jsfiddle http://jsfiddle.net java 在线编辑 - runjs http://ideone.com js 在线编辑 - hcharts http://code.hcharts.cn js 在线编辑 - jsdm http://jsdm.com sql 在线编辑 - sqlfiddle http://sqlfiddle.com mozilla 在线编辑器 https://thimble.mozilla.org 常规优化 常规优化 地址 Javascript高性能动画与页面渲染 http://www.infoq.com/cn/articles/javascript-high-performance-animation-and-page-rendering 移动H5前端性能优化指南 http://isux.tencent.com/h5-performance.html 5173首页前端性能优化实践 http://ued.5173.com/?p=1731 给网页设计师和前端开发者看的前端性能优化 http://www.uisdc.com/front-end-performance-for-web-designers-and-front-end-developers 复杂应用的 CSS 性能分析和优化建议 http://www.orzpoint.com/profiling-css-and-optimization-notes 张鑫旭——前端性能 张鑫旭——前端性能 前端性能监控总结 http://www.xiaoqiang.org/javascript/font-end-performance-monitor.html 网站性能优化之CSS无图片技术 网站性能优化之CSS无图片技术 web前端性能优化进阶路 web前端性能优化进阶路 前端技术：网站性能优化之CSS无图片技术 http://my.eoe.cn/tuwandou/archive/4544.html 浏览器的加载与页面性能优化 http://www.baiduux.com/blog/2011/02/15/browser-loading 页面加载中的图片性能优化 http://www.w3ctech.com/p/1503 Hey——前端性能 Hey——前端性能 html优化 html优化 99css——性能 99css——性能 YSLOW中文介绍 http://www.cnblogs.com/yslow 转一篇Yahoo关于网站性能优化的文章，兼谈本站要做的优化 http://www.360ito.com/article/40.html Yahoo!团队实践分享：网站性能 http://www.360doc.com/content/10/0928/09/2588264_56971287.shtml 网站性能优化指南：什么使我们的网站变慢？ http://blog.jiasule.com/i/153 网站性能优化实践，减少加载时间，提高用户体验 http://www.powereasy.net/helpyou/knowledge/ecommerce/9593.html 前端重构实践之如何对网站性能优化？ http://www.adinnet.cn/blog/designview/2012-7-12/678.html 前端性能优化：使用媒体查询加载指定大小的背景图片 http://www.gbin1.com/technology/javascript/20130708-front-end-performance-optimization-9 网站性能系列博文 http://www.mykuer.com/post/factors-that-affect-the-speed-of-web-site-open.html 加载，不只是少一点点 http://tgideas.qq.com/webplat/info/news_version3/804/808/811/m579/201109/41355.shtml 前端性能的测试与优化 http://mzhou.me/article/95310 分享网页加载速度优化的一些技巧？ http://www.gbin1.com/technology/html/20130217-tips-for-speed-up-page-loading web前端优化(基于Yslow http://www.tcreator.info/webSchool/website/Front-end-Opt-Yslow.html 网站性能优化工具大全 https://www.qianduan.net/website-performance-optimization-tool.html 【高性能前端1】高性能HTML http://www.alloyteam.com/2012/10/high-performance-html 【高性能前端2】高性能CSS http://www.alloyteam.com/2012/10/high-performance-css 由12306谈谈网站前端性能和后端性能优化 http://coolshell.cn/articles/6470.html AlloyTeam——前端优化 AlloyTeam——前端优化 毫秒必争，前端网页性能最佳实践 http://www.cnblogs.com/developersupport/p/3248695.html 网站性能工具Yslow的使用方法 http://blog.sina.com.cn/s/blog_6e9d2e0701017kvu.html 前端工程与性能优化（上）：静态资源版本更新与缓存 http://www.infoq.com/cn/articles/front-end-engineering-and-performance-optimization-part1 前端工程与性能优化（下）：静态资源管理与模板框架 http://www.infoq.com/cn/articles/front-end-engineering-and-performance-optimization-part2 HTTPS连接的前几毫秒发生了什么 http://blog.jobbole.com/48369 Yslow http://uicss.cn/yslow/#more-12319 Essential Web Performance Metrics — A Primer, Part 1 http://blog.smartbear.com/web-performance/essential-web-performance-metrics-a-primer-part-1 Essential Web Performance Metrics — Part 2 http://blog.smartbear.com/performance/essential-web-performance-metrics-part-2 YUISlide,针对移动设备的动画性能优化 http://jayli.github.io/blog/data/2011/12/23/yuislide.html Improving Site Performance http://joelglovier.com/improving-site-performance 让网站提速的最佳前端实践 http://segmentfault.com/a/1190000000367899 Why Website Speed is Important http://sixrevisions.com/web-development/why-website-speed-is-important Need for Speed – How to Improve your Website Performance https://www.devbridge.com/articles/need-for-speed-how-to-improve-your-website-performance 阿里无线前端性能优化指南 (Pt.1 加载期优化 https://github.com/amfe/article/issues/1 优化工具 优化工具 地址 JavaScript 性能分析新工具 OneProfile http://www.html-js.com/article/3083 JavaScript 堆内存分析新工具 OneHeap http://www.html-js.com/article/3091 在线工具 在线工具 地址 google在线工具 https://developers.google.com/speed/pagespeed/insights 阿里-免费测试服务 http://itest.aliyun.com 阿里-F2etest多浏览器兼容性测试解决方案 https://github.com/alibaba/f2etest js性能测试 http://jsperf.com 前端架构 前端架构 地址 技术架构 http://www.zhihu.com/topic/19612641 前端架构 http://saito.im/note/The-Architecture-of-F2E 如何成为前端架构师 http://www.zhihu.com/question/24092572 关于前端架构-张克军 http://hikejun.com/sharing/2010webrebuild/?file=fe-infrastructure.html 百度腾讯offer比较（腾讯游戏VS百度基础架构） http://www.zhihu.com/question/25583350 推荐作品 推荐作品 地址 winter代码片段需要翻墙 https://gist.github.com/wintercn fgm http://www.fgm.cc/learn 岑安作品集 https://github.com/hongru/hongru.github.com 当耐特demo集合 http://kmdjs.github.io 米空格 js作品 http://www.laoshu133.com/Lab myFocus http://koen301.github.io SeaJS组件库 http://panxuepeng.github.io/seajslib 颜海镜作品 http://yanhaijing.com/myProject 脚儿网作品 http://jo2.org/category/myworks javascript个人作品 http://www.cnitblog.com/yemoo/category/3107.html 妙味的雷东升游戏作品 http://bbs.miaov.com/forum.php?mod=viewthread&amp;tid=7790 javascript作品集 http://bbs.csdn.net/topics/380227212 云五笔，灰度产生生成工具 https://github.com/TooBug/works 项目主页 http://koen301.github.io 个性的作品主页 http://zaole.net ucren js demos 集 http://ucren.com/blog/demos 智能社 http://www.zhinengshe.com/works_list.html 实例陈列架 http://demos.shizuwu.cn zoye demo http://zoye.sinaapp.com/demo 平凡 http://pingfan1990.sinaapp.com jyg 游戏案例 http://www.lovewebgames.com 很多jquery插件 http://www.helloweba.com/list.html 不羁虫 - soJs 作品系列 http://www.bujichong.com/sojs/api/index.html frozenui http://frozenui.github.io/case.html 黑白棋 http://js-game.github.io/othello fromone http://yansm.github.io/fromone/index.html pazguille http://pazguille.me Html5 VideoPlayer https://github.com/zmmbreeze/DeadSimpleVideoPlayer Proton 烟花 http://a-jie.github.io/Proton/#example 简历模板 简历模板 地址 简历 http://hcy2367.github.io/resume 张伦 http://ncuey.sinaapp.com/CrispElite/ 简历 https://github.com/hacke2/ResumeSample 马斯特 http://pinkyjie.com/resume 张秋怡 https://joyeecheung.github.io/resume/ 翁天信 http://blog.dandyweng.com/2013/07/how-my-website-was-created 动画方式的简历 http://www.webhek.com/misc/interactive-resume 组件丰富简历 http://www.linqing07.com/resume.html haorooms博客 http://www.haorooms.com/about 面试题 面试题 地址 那几个月在找工作（百度，网易游戏） http://www.nowcoder.com/discuss/3196 2014最新面试题 http://www.html-js.com/article/1743 2016校招内推 – 阿里巴巴前端 – 三面面试经历 http://www.cnblogs.com/imwtr/p/4685546.html 年后跳槽那点事：乐视+金山+360面试之行 http://www.cnblogs.com/lvdabao/p/3660707.html Interviewing a front-end developer http://blog.sourcing.io/interview-questions 拉勾网js面试题 http://www.cnblogs.com/52cik/p/js-question-lg.html 前端面试 http://www.cnblogs.com/allenxing/p/3724382.html Web开发笔试面试题 大全 http://mianshiti.diandian.com 前端开发面试题 http://segmentfault.com/a/1190000000465431 2014最新前端面试题 https://github.com/markyun/My-blog/tree/master/Front-end-Developer-Questions 百度面试 https://github.com/fex-team/interview-questions 前端工作面试问题 https://github.com/darcyclarke/Front-end-Developer-Interview-Questions/tree/master/Chinese 前端开发面试题 http://segmentfault.com/a/1190000000465431 5个经典的前端面试问题 5个经典的前端面试问题 最全前端面试问题及答案总结 http://segmentfault.com/a/1190000002562454 如何面试一名前端开发工程师？ http://www.html-js.com/article/Large-search-front-team-column%202961 史上最全 前端开发面试问题及答案整理 https://github.com/hawx1993/Front-end-Interview-questions 前端实习生面试总结 http://www.cnblogs.com/xiaoruo/p/4665163.html 史上最全 前端开发面试问题及答案整理 https://github.com/hawx1993/Front-end-Interview-questions BAT及各大互联网公司2014前端笔试面试题：JavaScript篇 http://blog.jobbole.com/78738 前端开发面试题大收集 https://github.com/paddingme/Front-end-Web-Development-Interview-Question 收集的前端面试题和答案 https://github.com/qiu-deqing/FE-interview 如何面试前端工程师 http://www.zhihu.com/question/19568008 前端开发面试题 https://github.com/markyun/My-blog/blob/master/Front-end-Developer-Questions/Questions-and-Answers/README.md 牛客网-笔试面经 http://www.nowcoder.com/discuss?type=2 iconfont iconfont 地址 中文字体 http://www.zhihu.com/question/21253343 淘宝字库 http://iconfont.cn 字体 http://mux.alimama.com/fonts 制作教程 http://iconfont.cn/help/platform.html zhangxinxu-icommon http://www.zhangxinxu.com/wordpress/?s=icomoon icommon https://icomoon.io/app 用字体在网页中画ICON图标(推荐教程 http://imooc.com/learn/243 字体压缩工具 http://font-spider.org Fiddler Fiddler 地址 Fiddler调式使用知多少(一深入研究 http://www.cnblogs.com/tugenhua0707/p/4623317.html 微信fiddle http://www.cnblogs.com/strick/p/4570006.html 微信fiddle http://gaoboy.com/article/26.html Chrome Chrome 地址 Google Chrome 官方 https://developer.chrome.com/devtools 如何更好地运用 Chrome (Google) http://jeffjade.com/2017/05/01/122-how-to-better-use-google_chrome/ Chrome - 基础 http://www.cnblogs.com/constantince/p/4565261.html Chrome - 进阶 http://www.cnblogs.com/constantince/p/4579121.html Chrome - 性能 http://www.cnblogs.com/constantince/p/4585983.html Chrome - 性能进阶 http://www.cnblogs.com/constantince/p/4607497.html Chrome - 移动 http://www.cnblogs.com/constantince/p/4624241.html Chrome - 使用技巧 http://www.cnblogs.com/liyunhua/p/4544738.html Chrome - Console控制台不完全指南 http://www.cnblogs.com/Wayou/p/chrome-console-tips-and-tricks.html Chrome - Workspace使浏览器变成IDE http://c7sky.com/chrome-devtools-workspace.html network面板 http://www.html-js.com/article/Nothing-blind%202975 chrome开发工具快捷键 http://anti-code.com/devtools-cheatsheet chrome调试工具常用功能整理 http://www.html-js.com/article/2327 Chrome 开发工具 Workspace 使用 http://www.iinterest.net/2014/05/09/chrome-dev-tool-workspace Chrome神器Vimium快捷键学习记录 http://www.cppblog.com/deercoder/archive/2011/10/22/158886.html sass调试-w3cplus http://www.w3cplus.com/sassguide/debug.html 如何更专业的使用Chrome开发者工具-w3cplus http://www.w3cplus.com/tools/how-to-use-chrome-devtools-like-a-pro.html chrome调试canvas http://sentsin.com/web/253.html chrome profiles1 https://developer.chrome.com/devtools/index chrome profiles3 http://www.oschina.net/translate/performance-optimisation-with-timeline-profiles chrome移动版调试 https://developer.chrome.com/devtools/docs/mobile-emulation chrome调试 http://ued.taobao.org/blog/2012/06/debug-with-chrome-dev-tool chrome的调试 http://www.cnblogs.com/QLeelulu/archive/2011/08/28/2156402.html chrome console 命令详解 https://developer.chrome.com/devtools/docs/commandline-api 查看事件绑定1 http://www.cnblogs.com/leonkao/p/3809655.html 查看事件绑定2 http://www.cnblogs.com/xiaoyao2011/p/3447421.html 神器——Chrome开发者工具(一 http://segmentfault.com/a/1190000000683599 奇趣百科性能优化(Chrome DevTools 中的 Timeline Profils 等工具使用介绍 https://xinranliu.me/2015-05-22-qiqu-performance chrome 开发者工具的 15 个小技巧 http://frontenddev.org/link/15-tips-of-chrome-developer-tools.html Chrome开发者工具不完全指南 http://1ke.co/course/361 Chrome 开发者工具使用技巧 http://segmentfault.com/a/1190000003882567 Firebug Firebug 地址 firebug视频教程 http://www.imooc.com/learn/137 firefox 模拟器 https://developer.mozilla.org/zh-CN/docs/Tools/WebIDE console.log 命令详解 http://www.cnblogs.com/ctriphire/p/4116207.html Firebug入门指南 http://www.ruanyifeng.com/blog/2008/06/firebug_tutorial.html Firebug控制台详解 http://www.ruanyifeng.com/blog/2011/03/firebug_console_tutorial.html 移动,微信调试 移动,微信调试 地址 浏览器端调试安卓 https://openstf.github.io 移动端前端开发调试 http://yujiangshui.com/multidevice-frontend-debug 使用 Chrome 远程调试 Android 设备 https://github.com/yujiangshui/CN-Chrome-DevTools/blob/remote-debugging/md/Use-Tools/remote-debugging.md mac移动端调试 http://plus.uc.cn/document/webapp/doc5.html mac移动端调试 http://www.mihtool.com 无线调试攻略 http://thx.github.io/mobile/debugging-in-mobile 无线调试攻略 http://yanhaijing.com/mobile/2014/12/17/web-debug-for-mobile 屌爆了,完美调试 微信webview(x5 http://www.jianshu.com/p/ccf124f1f74b 微信调试的那些事 微信调试的那些事 远程console http://jsconsole.com 微信调试工具 http://blog.qqbrowser.cc 各种真机远程调试方法汇总 https://github.com/jieyou/remote_inspect_web_on_real_device iOS Simulator iOS Simulator 地址 Simulator iOS_Simulator_Guide-Introduction iOS Simulator的介绍和使用心得 http://www.crifan.com/intro_ios_simulator_in_xcode_and_usage_summary Image img 地址 loading img http://preloaders.net/en/circular 智图-图片优化平台 http://zhitu.isux.us 在线png优化 https://tinypng.com SM.MS(图床工具～简易好用) https://sm.ms/ yutuku：极简图床 http://yotuku.cn/ Qchan图床 http://tuchuang.org/ 浏览器同步 浏览器同步 地址 puer https://github.com/leeluolee/puer liveReload http://livereload.com f5 http://getf5.com File Watchers http://geek100.com/2608 在线PPT制作 在线PPT制作 地址 nodePPT nodePPT Cleaver快速制作网页PPT http://www.jeffjade.com/2015/10/15/2015-10-16-cleaver-make-ppt/ impress.js http://www.cnblogs.com/Darren_code/archive/2013/01/04/impressjs.html PPT https://github.com/ksky521/nodePPT reveal https://github.com/hakimel/reveal.js bespoke-fx https://github.com/ebow/bespoke-fx slippy https://github.com/Seldaek/slippy 前端导航网站 前端导航网站 地址 界面清爽的前端导航 http://uxbees.com/index.html 前端导航 http://whycss.com 前端网址导航 http://www.daqianduan.com/nav 前端名录 http://sentsin.com/daohang 前端导航 http://123.jser.us 前端开发资源 http://www.css88.com/nav 前端开发仓库 - 众多效果的收集地 http://code.ciaoca.com 前端资源导航 https://github.com/jnoodle/f2e-collect F2E 前端导航 http://f2e.im/static/pages/nav/index.html 常用CDN 常用CDN 地址 新浪CDN http://lib.sinaapp.com 百度静态资源公共库 http://cdn.code.baidu.com 360网站卫士常用前端公共库CDN服务 http://libs.useso.com Bootstrap中文网开源项目免费 CDN 服务 http://www.bootcdn.cn 开放静态文件 CDN - 七牛 http://staticfile.org CDN加速 - jq22 http://www.jq22.com/cdn jQuery CDN http://code.jquery.com 微软CDN http://www.asp.net/ajax/cdn Git Git 地址 git-scm http://git-scm.com 廖雪峰-Git教程 廖雪峰-Git教程 git-for-windows https://git-for-windows.github.io GitHub 添加 SSH keys http://daemon369.github.io/git/2015/03/10/add-ssh-keys-for-github gogithub http://www.worldhello.net/gotgithub/index.html git常规命令练习 http://pcottle.github.io/learnGitBranching git的资料整理 https://github.com/xirong/my-git 我所记录的git命令（非常实用） http://www.cnblogs.com/fanfan259/p/4810517.html 企业开发git工作流模式探索部分休整 https://github.com/xirong/my-git/blob/master/git-workflow-tutorial.md GitHub 漫游指南 https://github.com/phodal/github-roam GitHub秘籍 https://github.com/tiimgreen/github-cheat-sheet/blob/master/README.zh-cn.md 使用git和github进行协同开发流程 http://livoras.com/post/28 动画方式练习git http://onlywei.github.io/explain-git-with-d3 各种日期日历 各种日期日历 地址 经典my97 http://www.my97.net/dp/demo/index.htm 强大的独立日期选择器 http://www.cnblogs.com/gbin1/archive/2012/04/16/2452105.html fullcalendar http://fullcalendar.io fullcalendar日历控件知识点集合 http://blog.csdn.net/francislaw/article/details/7740630 中文api http://blog.sina.com.cn/s/blog_9475b1c101012c5f.html 农历日历 https://github.com/zzyss86/LunarCalendar 超酷的仿百度带节日日历老黄历控件 http://www.sucaisj.com/jiaoben/date/201509/16856.html 日期格式化 http://momentjs.com 大牛日历控件 https://github.com/Johnqing/QPAYCalendar 我群某管理作品 https://github.com/Iamlars/dateMarker input按位替换-官网 http://digitalbush.com/projects/masked-input-plugin input按位替换-github https://github.com/digitalBush/jquery.maskedinput/tree/1.2.2 bootstrap-daterangepicker https://github.com/dangrossman/bootstrap-daterangepicker 国外30个插件集合 http://www.vandelaydesign.com/30-best-free-jquery-plugins JavaScript datepicker http://dbushell.com/2012/10/09/pikaday-javascript-datepicker Datepair.js http://jonthornton.github.io/Datepair.js 一个风格多样的日历 https://github.com/glad/glDatePicker 弹出层式的全日历 http://amsul.ca/pickadate.js/date jquery双日历 http://www.daterangepicker.com 大气实用jQuery手机移动端日历日期选择插件 http://www.frankdemo.cn/index.php?c=content&amp;a=show&amp;id=115 jQuery Mobile 移动开发中的日期插件Mobiscroll https://mobiscroll.com Date library Date library 地址 Datejs https://github.com/datejs/Datejs sugarjs http://sugarjs.com/api/Date 其它 其它 地址 Mock.js 是一款模拟数据生成器 http://mockjs.com 特色的HTML框架可以创建精美的iOS应用 http://framework7.taobao.org 淘宝SUI http://m.sui.taobao.org avalonjs http://avalonjs.github.io Avalon新一代UI库： OniUI http://ued.qunar.com/oniui/index.html avalon.oniui-基于avalon的组件库 https://github.com/RubyLouvre/avalon.oniui 生成二维码(草料) http://cli.im 效果类 效果类 地址 弹出层 http://www.imooc.com/learn/58 焦点图轮播特效 http://www.imooc.com/learn/18 HTML5 有哪些让你惊艳的 demo？ http://www.zhihu.com/question/24398907 弹出层 弹出层 地址 artDialog 最新版 https://github.com/aui/artDialog artDialog 文档 http://aui.github.io/artDialog/doc/index.html google code 下载地址 https://code.google.com/p/artdialog/downloads/list 贤心弹出层 http://layer.layui.com 响应式用户交互组件库 https://github.com/bh-lay/UI sweetalert-有css3动画弹出层 http://t4t5.github.io/sweetalert 优秀JavaScript项目 优秀JavaScript项目 地址 Angular和Webpack种子文件 https://github.com/AngularClass/angular2-webpack-starter Fis3面向前端的工程构建系统 https://github.com/fex-team/fis3 Fis3 DEMO https://github.com/fex-team/fis3-demo 前端JQuery系列:源码剖析 https://github.com/JsAaron/jQuery avalon框架 https://github.com/RubyLouvre/avalon Microsoft ChakraCore 微软的Chakra引擎 https://github.com/Microsoft/ChakraCore Quintus HTML游戏引擎 https://github.com/cykod/Quintus 一个用node.js搭建的有趣博客 https://github.com/STRML/strml.net Web前端助手–FeHelper（Chrome扩展） https://github.com/zxlie/FeHelper 百度前端技术学院 https://github.com/baidu-ife/ife Cheerio（node.js中的jQuery） https://github.com/cheeriojs/cheerio nodejs的一个聊天软件 类似微信 https://github.com/BryanYang/freechat 使用html5和node.js构建的网易云音乐 https://github.com/stkevintan/Cube babel ES6转换为ES5 https://github.com/babel/babel 一个JS富文本编辑器 https://github.com/fex-team/ueditor 一个JS脑图可视化工具 https://github.com/fex-team/kityminder-core 一个JS写的Flappy Bird Game https://github.com/ellisonleao/clumsy-bird 一个JS写的GBA模拟器 https://github.com/taisel/IodineGBA SegmentFault写的Markdown解析器 https://github.com/SegmentFault/HyperDown.js 基于node.js的Ghost博客 https://github.com/TryGhost/Ghost 学习react的demos https://github.com/ruanyf/react-demos 转载请保留原链接：http://www.jeffjade.com/2016/03/30/104-front-end-tutorial/ 您可能感兴趣(/有用)的文章： 那些所倚靠的利器记载 Awesome Chrome 插件集锦 Win下最爱效率神器:AutoHotKey Win下必备神器之Cmder 新编码神器Atom使用纪要 sublime text 下的Markdown写作 SublimeText下写作利器之MarkdownEditing Mac必备软件渐集之ZSH－终极Shell Vimium~让您的Chrome起飞","tags":[{"name":"javascript","slug":"javascript","permalink":"https://xiyuan-code.github.io/blog/tags/javascript/"}]},{"title":"Hexo博客框架基本使用","date":"2017-12-21T10:08:48.504Z","path":"2017/12/21/工具教程/Hexo博客框架基本使用/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[{"name":"hexo","slug":"hexo","permalink":"https://xiyuan-code.github.io/blog/tags/hexo/"},{"name":"框架","slug":"框架","permalink":"https://xiyuan-code.github.io/blog/tags/框架/"},{"name":"文档工具","slug":"文档工具","permalink":"https://xiyuan-code.github.io/blog/tags/文档工具/"}]},{"title":"清除css样式浮动","date":"2017-12-18T08:53:00.000Z","path":"2017/12/18/css样式技巧/清除css样式浮动/","text":"在开发网页的时候经常需要用到各种浮动，此时便需要及时的清除浮动，否则将会导致布局出现问题 在清除浮动两个重要的定义浮动的定义 使元素脱离文档流，按照指定方向发生移动，遇到父级边界或者相邻的浮动元素停了下来。 高度塌陷 浮动元素父元素高度自适应（父元素不写高度时，子元素写了浮动后，父元素会发生高度塌陷） 知道浮动和为什么要清除浮动之后我们可以开始学习如何清除浮动了，这时候我们就需要用到清除浮动的属性clearclear:left | right | both | none | inherit：元素的某个方向上不能有浮动元素clear:both：在左右两侧均不允许浮动元素。 额外标签法 使用:after 伪元素 给父元素定高 利用overflow:hidden;属性 父元素浮动 父元素处于绝对定位 清除浮动的几种方法一、在浮动元素下方添加空div,并给该元素写css样式1&#123;clear:both;height:0;overflow:hidden;&#125; 二、给浮动元素父级设置高度12我们知道了高度塌陷是应为给浮动元素的父级高度是自适应导致的，那么我们给它的设置适当的高度就可以解决这个问题了。缺点：在浮动元素高度不确定的时候不适用 三、以浮制浮（父级同时浮动）12何谓“以浮制浮”呢？就是**让浮动元素的父级也浮动**。缺点：需要给每个浮动元素父级添加浮动，浮动多了容易出现问题。 四、父级设置成inline-block1缺点：父级的margin左右auto失效，无法使用margin: 0 auto;居中了 五、br 清浮动12345678&lt;div class=\"box\"&gt; &lt;div class=\"top\"&gt;&lt;/div&gt; &lt;br clear=\"both\" /&gt;&lt;/div&gt;&lt;!-- br 标签自带clear属性，将它设置成both其实和添加空div原理是一样的。 问题：不符合工作中：结构、样式、行为，三者分离的要求。 --&gt; 六、给父级添加overflow:hidden 清浮动方法12345overflow: hidden;*zoom: 1;&lt;!-- 问题：需要配合 宽度 或者 zoom 兼容IE6 IE7 --&gt; 七、万能清除法 after伪类 清浮动（现在主流方法，推荐使用）12345678:after&#123; content:\"\"; clear:both; display:block; height:0; overflow:hidden; visibility:hidden;&#125;","tags":[{"name":"css","slug":"css","permalink":"https://xiyuan-code.github.io/blog/tags/css/"}]}]